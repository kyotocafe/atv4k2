<?xml version='1.0' encoding='UTF-8'?>
<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>Movies</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/titan.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/film.png</thumb>
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<property name="widget">Library</property>
			<property name="widgetName">Movies - On Deck</property>
			<property name="widgetType">movies</property>
			<property name="widgetPath">library://video/Plex-2/2_ondeck.xml/</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32039]</property>
			<property name="widget.1">Library</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetPath.1">library://video/Plex-2/2_recent.xml/</property>
			<property name="widgetName.1">Recently Added Movies</property>
			<property name="widget.99">randommovies</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">movies</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]</property>
			<property name="widgetName.99">Spotlight</property>
			<property name="widgetName.name">Movies On Deck</property>
			<property name="widgetNameName">Movies On Deck</property>
			<property name="thumb.name">film.png</property>
			<property name="thumbName">film.png</property>
			<property name="widgetName.1.name">Recently Added Movies</property>
			<property name="widgetName.1Name">Recently Added Movies</property>
			<property name="widget.2">Playlist</property>
			<property name="widgetName.2">New Releases</property>
			<property name="widgetType.2">movies</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">special://profile/playlists/video/New Releases.xsp</property>
			<property name="widgetstyle.2">poster</property>
			<property name="widgetstyle.2.name">Poster</property>
			<property name="widgetstyle.2Name">Poster</property>
			<property name="widgetstyle.1">landscape</property>
			<property name="widgetstyle.1.name">Landscape</property>
			<property name="widgetstyle.1Name">Landscape</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-2/2_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-2/2_all.xml/,return)</property>
			<property name="list">library://video/Plex-2/2_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">movies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>4K Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/film.png</thumb>
			<property name="labelID">4kmovies</property>
			<property name="defaultID">4kmovies</property>
			<property name="translatedPath">::PLAYLIST&gt;Videos::</property>
			<property name="widget">Playlist</property>
			<property name="widgetName">Recently Added 4K Movies</property>
			<property name="widgetType">movies</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">special://profile/playlists/video/Recently Added 4K.xsp</property>
			<property name="widget.1">Playlist</property>
			<property name="widgetName.1">Highest Rated 4K Movies</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">special://profile/playlists/video/Highest Rated 4K Movies.xsp</property>
			<property name="thumb.name">film.png</property>
			<property name="thumbName">film.png</property>
			<property name="widgetName.name">Recently Added 4K Movies</property>
			<property name="widgetNameName">Recently Added 4K Movies</property>
			<property name="widgetForceRefresh">refresh</property>
			<property name="widgetForceRefresh.1">refresh</property>
			<property name="widgetstyle.1">landscapesmall</property>
			<property name="widgetstyle.1.name">Landscape Small</property>
			<property name="widgetstyle.1Name">Landscape Small</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,special://profile/playlists/video/4K Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/4K Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/4K Movies.xsp</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">4kmovies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>TV Shows</label>
			<label2>Custom item</label2>
			<icon>resource://resource.images.skinicons.wide/titan.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/episode.png</thumb>
			<property name="labelID">tvshows</property>
			<property name="defaultID">info-window-home-property-playlist-5-title</property>
			<property name="widget">Library</property>
			<property name="widgetName">TV On Deck</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-3/3_ondeck.xml/</property>
			<property name="widgetstyle">landscapesmall</property>
			<property name="widgetstyle.name">Landscape Small</property>
			<property name="widgetstyleName">Landscape Small</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">PlexKodiConnect - Recently Added</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetTarget.1">music</property>
			<property name="widgetPath.1">library://video/Plex-3/3_recent.xml/</property>
			<property name="widgetstyle.1">landscapelarge</property>
			<property name="widgetstyle.1.name">Landscape Large Netflix</property>
			<property name="widgetstyle.1Name">Landscape Large Netflix</property>
			<property name="thumb.name">episode.png</property>
			<property name="thumbName">episode.png</property>
			<property name="widgetName.1.name">Recently Added Episodes</property>
			<property name="widgetName.1Name">Recently Added Episodes</property>
			<property name="widgetName.name">TV On Deck</property>
			<property name="widgetNameName">TV On Deck</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-3/3_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-3/3_all.xml/,return)</property>
			<property name="list">library://video/Plex-3/3_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvshows</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>Music</label>
			<label2>item</label2>
			<icon>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190306041246.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/songs.png</thumb>
			<property name="labelID">music</property>
			<property name="defaultID">133</property>
			<property name="translatedPath">ActivateWindow(music,library://music/artists.xml/,return)</property>
			<property name="thumb.name">songs.png</property>
			<property name="thumbName">songs.png</property>
			<property name="widget">Library</property>
			<property name="widgetName">Recently Added Albums</property>
			<property name="widgetType">music</property>
			<property name="widgetTarget">music</property>
			<property name="widgetPath">musicdb://recentlyaddedalbums/</property>
			<property name="widgetstyle">square</property>
			<property name="widgetstyle.name">Square</property>
			<property name="widgetstyleName">Square</property>
			<property name="widget.1">plugin://script.skin.helper.widgets/?action=songslisting</property>
			<property name="widgetName.1">Recently Played Songs</property>
			<property name="widgetType.1">songs</property>
			<property name="widgetTarget.1">music</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recentplayed&amp;mediatype=songs&amp;reload=$INFO[Window(Home).Property(widgetreload-music)]</property>
			<property name="widgetstyle.1">landscapesmall</property>
			<property name="widgetstyle.1.name">Landscape Small</property>
			<property name="widgetstyle.1Name">Landscape Small</property>
			<property name="widgetName.name">Recently Added Albums</property>
			<property name="widgetNameName">Recently Added Albums</property>
			<property name="widgetName.1.name">Recently Played Songs</property>
			<property name="widgetName.1Name">Recently Played Songs</property>
			<visible>Library.HasContent(Music)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(music,library://music/artists.xml/,return)</onclick>
			<property name="path">ActivateWindow(music,library://music/artists.xml/,return)</property>
			<property name="list">library://music/artists.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">music</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>Documentaries</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/film.png</thumb>
			<property name="labelID">documentaries</property>
			<property name="defaultID">documentaries</property>
			<property name="widget">Library</property>
			<property name="widgetName">Documentaries - Recently Added</property>
			<property name="widgetType">movies</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-9/9_recent.xml/</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">Documentaries - On Deck</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">library://video/Plex-9/9_ondeck.xml/</property>
			<property name="thumb.name">film.png</property>
			<property name="thumbName">film.png</property>
			<property name="widgetName.1.name">Recently Added Documentaries</property>
			<property name="widgetName.1Name">Recently Added Documentaries</property>
			<property name="widgetName.name">Documentaries On Deck</property>
			<property name="widgetNameName">Documentaries On Deck</property>
			<property name="widgetstyle">landscapelarge</property>
			<property name="widgetstyle.name">Landscape Large Netflix</property>
			<property name="widgetstyleName">Landscape Large Netflix</property>
			<property name="widgetstyle.1">landscapesmall</property>
			<property name="widgetstyle.1.name">Landscape Small</property>
			<property name="widgetstyle.1Name">Landscape Small</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-9/9_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-9/9_all.xml/,return)</property>
			<property name="list">library://video/Plex-9/9_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">documentaries</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>Docu TV Series</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/episode.png</thumb>
			<property name="labelID">docutvseries</property>
			<property name="defaultID">docutv</property>
			<property name="widget">Library</property>
			<property name="widgetName">Docu TV On Deck</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-10/10_ondeck.xml/</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">Recently Added Docu TV Episodes</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">library://video/Plex-10/10_recentepisodes.xml/</property>
			<property name="thumb.name">episode.png</property>
			<property name="thumbName">episode.png</property>
			<property name="widgetName.1.name">Recently Added Docu TV Episodes</property>
			<property name="widgetName.1Name">Recently Added Docu TV Episodes</property>
			<property name="widgetName.name">Docu TV On Deck</property>
			<property name="widgetNameName">Docu TV On Deck</property>
			<property name="widgetstyle">landscapesmall</property>
			<property name="widgetstyle.name">Landscape Small</property>
			<property name="widgetstyleName">Landscape Small</property>
			<property name="widgetstyle.1">landscapelarge</property>
			<property name="widgetstyle.1.name">Landscape Large Netflix</property>
			<property name="widgetstyle.1Name">Landscape Large Netflix</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-10/10_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-10/10_all.xml/,return)</property>
			<property name="list">library://video/Plex-10/10_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">docutvseries</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<label>Animation</label>
			<label2>Custom item</label2>
			<icon>$INFO[Window(Home).Property(playlist.0.image)]</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/film.png</thumb>
			<property name="labelID">animation</property>
			<property name="defaultID">info-window-home-property-playlist-0-title</property>
			<property name="widget">Library</property>
			<property name="widgetName">Animation On Deck</property>
			<property name="widgetType">movies</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-8/8_ondeck.xml/</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">Recently Added Animated Movies</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">library://video/Plex-8/8_recent.xml/</property>
			<property name="thumb.name">film.png</property>
			<property name="thumbName">film.png</property>
			<property name="widgetName.1.name">Recently Added Animated Movies</property>
			<property name="widgetName.1Name">Recently Added Animated Movies</property>
			<property name="widgetName.name">Animation On Deck</property>
			<property name="widgetNameName">Animation On Deck</property>
			<property name="widgetstyle">landscapelarge</property>
			<property name="widgetstyle.name">Landscape Large Netflix</property>
			<property name="widgetstyleName">Landscape Large Netflix</property>
			<property name="widgetstyle.1">landscapesmall</property>
			<property name="widgetstyle.1.name">Landscape Small</property>
			<property name="widgetstyle.1Name">Landscape Small</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-8/8_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-8/8_all.xml/,return)</property>
			<property name="list">library://video/Plex-8/8_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">animation</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<label>Cartoons</label>
			<label2>Custom item</label2>
			<icon>$INFO[Window(Home).Property(playlist.3.image)]</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/episode.png</thumb>
			<property name="labelID">cartoons</property>
			<property name="defaultID">info-window-home-property-playlist-3-title</property>
			<property name="widget">Library</property>
			<property name="widgetName">Cartoons On Deck</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-6/6_ondeck.xml/</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">Recently Added Cartoons</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">library://video/Plex-6/6_recentepisodes.xml/</property>
			<property name="thumb.name">episode.png</property>
			<property name="thumbName">episode.png</property>
			<property name="widgetName.1.name">Recently Added Cartoons</property>
			<property name="widgetName.1Name">Recently Added Cartoons</property>
			<property name="widgetName.name">Cartoons On Deck</property>
			<property name="widgetNameName">Cartoons On Deck</property>
			<property name="widgetstyle.1">landscapelarge</property>
			<property name="widgetstyle.1.name">Landscape Large Netflix</property>
			<property name="widgetstyle.1Name">Landscape Large Netflix</property>
			<property name="widgetstyle">landscapesmall</property>
			<property name="widgetstyle.name">Landscape Small</property>
			<property name="widgetstyleName">Landscape Small</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-6/6_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-6/6_all.xml/,return)</property>
			<property name="list">library://video/Plex-6/6_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">cartoons</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<label>Anime</label>
			<label2>Custom item</label2>
			<icon>$INFO[Window(Home).Property(playlist.1.image)]</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/episode.png</thumb>
			<property name="labelID">anime</property>
			<property name="defaultID">info-window-home-property-playlist-1-title</property>
			<property name="widget">Library</property>
			<property name="widgetName">Anime On Deck</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-4/4_ondeck.xml/</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">Recently Added Anime</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">library://video/Plex-4/4_recentepisodes.xml/</property>
			<property name="thumb.name">episode.png</property>
			<property name="thumbName">episode.png</property>
			<property name="widgetName.1.name">Recently Added Anime</property>
			<property name="widgetName.1Name">Recently Added Anime</property>
			<property name="widgetName.name">Anime On Deck</property>
			<property name="widgetNameName">Anime On Deck</property>
			<property name="widgetstyle">landscapesmall</property>
			<property name="widgetstyle.name">Landscape Small</property>
			<property name="widgetstyleName">Landscape Small</property>
			<property name="widgetstyle.1">landscapelarge</property>
			<property name="widgetstyle.1.name">Landscape Large Netflix</property>
			<property name="widgetstyle.1Name">Landscape Large Netflix</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-4/4_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-4/4_all.xml/,return)</property>
			<property name="list">library://video/Plex-4/4_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">anime</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<label>Anime Movies</label>
			<label2>Custom item</label2>
			<icon>$INFO[Window(Home).Property(playlist.2.image)]</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/film.png</thumb>
			<property name="labelID">animemovies</property>
			<property name="defaultID">info-window-home-property-playlist-2-title</property>
			<property name="widget">Library</property>
			<property name="widgetName">Anime Movies On Deck</property>
			<property name="widgetType">movies</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-5/5_ondeck.xml/</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">Recently Added Anime Movies</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">library://video/Plex-5/5_recent.xml/</property>
			<property name="thumb.name">film.png</property>
			<property name="thumbName">Custom single image</property>
			<property name="widgetName.1.name">Recently Added Anime Movies</property>
			<property name="widgetName.1Name">Recently Added Anime Movies</property>
			<property name="widgetName.name">Anime Movies On Deck</property>
			<property name="widgetNameName">Anime Movies On Deck</property>
			<property name="widgetstyle">landscapesmall</property>
			<property name="widgetstyle.name">Landscape Small</property>
			<property name="widgetstyleName">Landscape Small</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-5/5_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-5/5_all.xml/,return)</property>
			<property name="list">library://video/Plex-5/5_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">animemovies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<label>TV 80's &amp; 90's</label>
			<label2 />
			<icon>special://skin/extras/icons/folder.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/episode.png</thumb>
			<property name="labelID">tv80s-90s</property>
			<property name="defaultID">tv80s-90s</property>
			<property name="widget">Library</property>
			<property name="widgetName">TV 80's &amp; 90's - Recently Added</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-14/14_recentepisodes.xml/</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">TV 80's &amp; 90's - On Deck</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">library://video/Plex-14/14_ondeck.xml/</property>
			<property name="thumb.name">episode.png</property>
			<property name="thumbName">episode.png</property>
			<property name="widgetstyle">landscapesmall</property>
			<property name="widgetstyle.name">Landscape Small</property>
			<property name="widgetstyleName">Landscape Small</property>
			<property name="widgetstyle.1">poster</property>
			<property name="widgetstyle.1.name">Poster</property>
			<property name="widgetstyle.1Name">Poster</property>
			<property name="widgetName.name">TV 80's &amp; 90's On Deck</property>
			<property name="widgetNameName">TV 80's &amp; 90's On Deck</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-14/14_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-14/14_all.xml/,return)</property>
			<property name="list">library://video/Plex-14/14_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tv80s-90s</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<label>TV Disney</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/episode.png</thumb>
			<property name="labelID">tvdisney</property>
			<property name="defaultID">tvdisney</property>
			<property name="widget">Library</property>
			<property name="widgetName">TV Disney - On Deck</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-12/12_ondeck.xml/</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">Recently Added Disney Shows</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">library://video/Plex-12/12_recentepisodes.xml/</property>
			<property name="thumb.name">episode.png</property>
			<property name="thumbName">episode.png</property>
			<property name="widgetName.1.name">Recently Added Disney Shows</property>
			<property name="widgetName.1Name">Recently Added Disney Shows</property>
			<property name="widgetstyle">landscapesmall</property>
			<property name="widgetstyle.name">Landscape Small</property>
			<property name="widgetstyleName">Landscape Small</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-12/12_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-12/12_all.xml/,return)</property>
			<property name="list">library://video/Plex-12/12_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvdisney</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<label>TV Nick</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/episode.png</thumb>
			<property name="labelID">tvnick</property>
			<property name="defaultID">tvnick</property>
			<property name="widget">Library</property>
			<property name="widgetName">TV Nick - On Deck</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-13/13_ondeck.xml/</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">Recently Added Nickelodeon Shows</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">library://video/Plex-13/13_recentepisodes.xml/</property>
			<property name="thumb.name">episode.png</property>
			<property name="thumbName">Custom single image</property>
			<property name="widgetName.1.name">Recently Added Nickelodeon Shows</property>
			<property name="widgetName.1Name">Recently Added Nickelodeon Shows</property>
			<property name="widgetstyle">landscapesmall</property>
			<property name="widgetstyle.name">Landscape Small</property>
			<property name="widgetstyleName">Landscape Small</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-13/13_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-13/13_all.xml/,return)</property>
			<property name="list">library://video/Plex-13/13_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvnick</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="14">
			<property name="id">$NUMBER[14]</property>
			<label>TV Land</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/episode.png</thumb>
			<property name="labelID">tvland</property>
			<property name="defaultID">tvland</property>
			<property name="widget">Library</property>
			<property name="widgetName">TV Land - On Deck</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">library://video/Plex-11/11_ondeck.xml/</property>
			<property name="widget.1">Library</property>
			<property name="widgetName.1">Recently Added Classic TV Shows</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">library://video/Plex-11/11_recentepisodes.xml/</property>
			<property name="thumb.name">episode.png</property>
			<property name="widgetName.1.name">Recently Added Classic TV Shows</property>
			<property name="widgetName.1Name">Recently Added Classic TV Shows</property>
			<property name="widgetstyle">landscapesmall</property>
			<property name="widgetstyle.name">Landscape Small</property>
			<property name="widgetstyleName">Landscape Small</property>
			<property name="thumbName">episode.png</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,library://video/Plex-11/11_all.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-11/11_all.xml/,return)</property>
			<property name="list">library://video/Plex-11/11_all.xml/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvland</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="15">
			<property name="id">$NUMBER[15]</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.aesir/resources/settings.png</thumb>
			<property name="labelID">settings</property>
			<property name="defaultID">settings</property>
			<property name="widget">systeminfo</property>
			<property name="widgetName">$LOCALIZE[130]</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[SystemInfoWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">special://profile/addon_data/script.skinshortcuts/skin.titan.aesir-background-settings.jpg</property>
			<property name="backgroundName">571</property>
			<property name="widgetName.1.name">Videos</property>
			<property name="widgetName.1Name">Videos</property>
			<property name="thumbName">settings.png</property>
			<property name="thumb.name">settings.png</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">settings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
	</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-2/2_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-2/2_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-2/2_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>Recently added</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyaddedmovies</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,library://video/movies/recentlyaddedmovies.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/movies/recentlyaddedmovies.xml/,return)</property>
			<property name="list">library://video/movies/recentlyaddedmovies.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>4K Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">4kmovies</property>
			<property name="defaultID">4kmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/4K Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/4K Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/4K Movies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>Genres</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">genres</property>
			<property name="defaultID" />
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,"library://video/movies/genres.xml/",return)</onclick>
			<property name="path">ActivateWindow(Videos,"library://video/movies/genres.xml/",return)</property>
			<property name="list">library://video/movies/genres.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>Years</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">years</property>
			<property name="defaultID" />
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,"library://video/movies/years.xml/",return)</onclick>
			<property name="path">ActivateWindow(Videos,"library://video/movies/years.xml/",return)</property>
			<property name="list">library://video/movies/years.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-3/3_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-3/3_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-3/3_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-3/3_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-3/3_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-3/3_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>Genres</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">genres</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"library://video/Plex-3/3_genres.xml/",return)</onclick>
			<property name="path">ActivateWindow(Videos,"library://video/Plex-3/3_genres.xml/",return)</property>
			<property name="list">library://video/Plex-3/3_genres.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[15100]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.titan.aesir-thumb-15100.png</thumb>
			<property name="labelID">15100</property>
			<property name="defaultID">15100</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/radio.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.titan.aesir-thumb-19021.png</thumb>
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>[Library.HasContent(Music)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>[Library.HasContent(Music)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[20389]</label>
			<label2>Music videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.titan.aesir-thumb-1038.png</thumb>
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-9/9_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-9/9_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-9/9_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),documentaries)</visible>
			<property name="group">documentaries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-9/9_recent.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-9/9_recent.xml/,return)</property>
			<property name="list">library://video/Plex-9/9_recent.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),documentaries)</visible>
			<property name="group">documentaries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>Recommended</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">recommended</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-9/9_recommended.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-9/9_recommended.xml/,return)</property>
			<property name="list">library://video/Plex-9/9_recommended.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),documentaries)</visible>
			<property name="group">documentaries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-10/10_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-10/10_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-10/10_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),docutvseries)</visible>
			<property name="group">docutvseries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-10/10_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-10/10_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-10/10_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),docutvseries)</visible>
			<property name="group">docutvseries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-10/10_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-10/10_random.xml/,return)</property>
			<property name="list">library://video/Plex-10/10_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),docutvseries)</visible>
			<property name="group">docutvseries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">7</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-8/8_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-8/8_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-8/8_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),animation)</visible>
			<property name="group">animation</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">7</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-8/8_recent.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-8/8_recent.xml/,return)</property>
			<property name="list">library://video/Plex-8/8_recent.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),animation)</visible>
			<property name="group">animation</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">7</property>
			<label>Recommended</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">recommended</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-8/8_recommended.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-8/8_recommended.xml/,return)</property>
			<property name="list">library://video/Plex-8/8_recommended.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),animation)</visible>
			<property name="group">animation</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">8</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-6/6_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-6/6_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-6/6_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),cartoons)</visible>
			<property name="group">cartoons</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">8</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-6/6_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-6/6_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-6/6_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),cartoons)</visible>
			<property name="group">cartoons</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">8</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-6/6_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-6/6_random.xml/,return)</property>
			<property name="list">library://video/Plex-6/6_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),cartoons)</visible>
			<property name="group">cartoons</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-4/4_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-4/4_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-4/4_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),anime)</visible>
			<property name="group">anime</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-4/4_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-4/4_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-4/4_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),anime)</visible>
			<property name="group">anime</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-4/4_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-4/4_random.xml/,return)</property>
			<property name="list">library://video/Plex-4/4_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),anime)</visible>
			<property name="group">anime</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-5/5_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-5/5_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-5/5_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),animemovies)</visible>
			<property name="group">animemovies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">10</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-5/5_recent.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-5/5_recent.xml/,return)</property>
			<property name="list">library://video/Plex-5/5_recent.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),animemovies)</visible>
			<property name="group">animemovies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">10</property>
			<label>Recommended</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">recommended</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-5/5_recommended.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-5/5_recommended.xml/,return)</property>
			<property name="list">library://video/Plex-5/5_recommended.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),animemovies)</visible>
			<property name="group">animemovies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-14/14_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-14/14_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-14/14_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tv80s-90s)</visible>
			<property name="group">tv80s-90s</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-14/14_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-14/14_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-14/14_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tv80s-90s)</visible>
			<property name="group">tv80s-90s</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-14/14_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-14/14_random.xml/,return)</property>
			<property name="list">library://video/Plex-14/14_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tv80s-90s)</visible>
			<property name="group">tv80s-90s</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">12</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-12/12_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-12/12_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-12/12_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvdisney)</visible>
			<property name="group">tvdisney</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">12</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-12/12_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-12/12_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-12/12_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvdisney)</visible>
			<property name="group">tvdisney</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">12</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-12/12_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-12/12_random.xml/,return)</property>
			<property name="list">library://video/Plex-12/12_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvdisney)</visible>
			<property name="group">tvdisney</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-13/13_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-13/13_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-13/13_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvnick)</visible>
			<property name="group">tvnick</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-13/13_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-13/13_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-13/13_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvnick)</visible>
			<property name="group">tvnick</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-13/13_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-13/13_random.xml/,return)</property>
			<property name="list">library://video/Plex-13/13_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvnick)</visible>
			<property name="group">tvnick</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">14</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-11/11_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-11/11_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-11/11_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvland)</visible>
			<property name="group">tvland</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">14</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-11/11_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-11/11_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-11/11_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvland)</visible>
			<property name="group">tvland</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">14</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-11/11_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-11/11_random.xml/,return)</property>
			<property name="list">library://video/Plex-11/11_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvland)</visible>
			<property name="group">tvland</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[24001]</label>
			<label2>Settings</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<onclick>ActivateWindow(AddonBrowser)</onclick>
			<property name="path">ActivateWindow(AddonBrowser)</property>
			<property name="list">AddonBrowser</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304075648.png</thumb>
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">16</property>
			<label>Reload skin</label>
			<label2 />
			<icon>common/reload-skin.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304124451.png</thumb>
			<property name="labelID">31714</property>
			<property name="defaultID">31714</property>
			<property name="translatedPath">ReloadSkin</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ReloadSkin</onclick>
			<property name="path">ReloadSkin</property>
			<property name="list">ReloadSkin</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[7]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<property name="translatedPath">ActivateWindow(filemanager)</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(filemanager)</onclick>
			<property name="path">ActivateWindow(filemanager)</property>
			<property name="list">filemanager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[744]</label>
			<label2>item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<property name="translatedPath">ActivateWindow(music,sources://music/,return)</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(music,sources://music/,return)</onclick>
			<property name="path">ActivateWindow(music,sources://music/,return)</property>
			<property name="list">sources://music/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[10040]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/addons.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304075605.png</thumb>
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<property name="translatedPath">ActivateWindow(Programs,Addons,return)</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304075637.png</thumb>
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-movies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-2/2_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-2/2_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-2/2_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>Recently added</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyaddedmovies</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,library://video/movies/recentlyaddedmovies.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/movies/recentlyaddedmovies.xml/,return)</property>
			<property name="list">library://video/movies/recentlyaddedmovies.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>4K Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">4kmovies</property>
			<property name="defaultID">4kmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/4K Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/4K Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/4K Movies.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>Genres</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">genres</property>
			<property name="defaultID" />
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,"library://video/movies/genres.xml/",return)</onclick>
			<property name="path">ActivateWindow(Videos,"library://video/movies/genres.xml/",return)</property>
			<property name="list">library://video/movies/genres.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>Years</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">years</property>
			<property name="defaultID" />
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,"library://video/movies/years.xml/",return)</onclick>
			<property name="path">ActivateWindow(Videos,"library://video/movies/years.xml/",return)</property>
			<property name="list">library://video/movies/years.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-movies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-2/2_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-2/2_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-2/2_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>Recently added</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyaddedmovies</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,library://video/movies/recentlyaddedmovies.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/movies/recentlyaddedmovies.xml/,return)</property>
			<property name="list">library://video/movies/recentlyaddedmovies.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>4K Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">4kmovies</property>
			<property name="defaultID">4kmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/4K Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/4K Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/4K Movies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>Genres</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">genres</property>
			<property name="defaultID" />
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,"library://video/movies/genres.xml/",return)</onclick>
			<property name="path">ActivateWindow(Videos,"library://video/movies/genres.xml/",return)</property>
			<property name="list">library://video/movies/genres.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>Years</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">years</property>
			<property name="defaultID" />
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,"library://video/movies/years.xml/",return)</onclick>
			<property name="path">ActivateWindow(Videos,"library://video/movies/years.xml/",return)</property>
			<property name="list">library://video/movies/years.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-4kmovies">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-4kmovies">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-3/3_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-3/3_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-3/3_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-3/3_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-3/3_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-3/3_recentepisodes.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>Genres</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">genres</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"library://video/Plex-3/3_genres.xml/",return)</onclick>
			<property name="path">ActivateWindow(Videos,"library://video/Plex-3/3_genres.xml/",return)</property>
			<property name="list">library://video/Plex-3/3_genres.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-3/3_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-3/3_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-3/3_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-3/3_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-3/3_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-3/3_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>Genres</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">genres</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"library://video/Plex-3/3_genres.xml/",return)</onclick>
			<property name="path">ActivateWindow(Videos,"library://video/Plex-3/3_genres.xml/",return)</property>
			<property name="list">library://video/Plex-3/3_genres.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-music">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[15100]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.titan.aesir-thumb-15100.png</thumb>
			<property name="labelID">15100</property>
			<property name="defaultID">15100</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/radio.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.titan.aesir-thumb-19021.png</thumb>
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>Library.HasContent(Music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>Library.HasContent(Music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[20389]</label>
			<label2>Music videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick>ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.titan.aesir-thumb-1038.png</thumb>
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-music">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[15100]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.titan.aesir-thumb-15100.png</thumb>
			<property name="labelID">15100</property>
			<property name="defaultID">15100</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/radio.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.titan.aesir-thumb-19021.png</thumb>
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>[Library.HasContent(Music)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>[Library.HasContent(Music)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[20389]</label>
			<label2>Music videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.titan.aesir-thumb-1038.png</thumb>
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-documentaries">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-9/9_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-9/9_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-9/9_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">documentaries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-9/9_recent.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-9/9_recent.xml/,return)</property>
			<property name="list">library://video/Plex-9/9_recent.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">documentaries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>Recommended</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">recommended</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-9/9_recommended.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-9/9_recommended.xml/,return)</property>
			<property name="list">library://video/Plex-9/9_recommended.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">documentaries</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-documentaries">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-9/9_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-9/9_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-9/9_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),documentaries)</visible>
			<property name="group">documentaries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-9/9_recent.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-9/9_recent.xml/,return)</property>
			<property name="list">library://video/Plex-9/9_recent.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),documentaries)</visible>
			<property name="group">documentaries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>Recommended</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">recommended</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-9/9_recommended.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-9/9_recommended.xml/,return)</property>
			<property name="list">library://video/Plex-9/9_recommended.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),documentaries)</visible>
			<property name="group">documentaries</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-docutvseries">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-10/10_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-10/10_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-10/10_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">docutvseries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-10/10_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-10/10_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-10/10_recentepisodes.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">docutvseries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-10/10_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-10/10_random.xml/,return)</property>
			<property name="list">library://video/Plex-10/10_random.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">docutvseries</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-docutvseries">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-10/10_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-10/10_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-10/10_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),docutvseries)</visible>
			<property name="group">docutvseries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-10/10_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-10/10_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-10/10_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),docutvseries)</visible>
			<property name="group">docutvseries</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-10/10_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-10/10_random.xml/,return)</property>
			<property name="list">library://video/Plex-10/10_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),docutvseries)</visible>
			<property name="group">docutvseries</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-animation">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">7</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-8/8_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-8/8_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-8/8_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">animation</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">7</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-8/8_recent.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-8/8_recent.xml/,return)</property>
			<property name="list">library://video/Plex-8/8_recent.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">animation</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">7</property>
			<label>Recommended</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">recommended</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-8/8_recommended.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-8/8_recommended.xml/,return)</property>
			<property name="list">library://video/Plex-8/8_recommended.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">animation</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-animation">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">7</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-8/8_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-8/8_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-8/8_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),animation)</visible>
			<property name="group">animation</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">7</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-8/8_recent.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-8/8_recent.xml/,return)</property>
			<property name="list">library://video/Plex-8/8_recent.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),animation)</visible>
			<property name="group">animation</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">7</property>
			<label>Recommended</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">recommended</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-8/8_recommended.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-8/8_recommended.xml/,return)</property>
			<property name="list">library://video/Plex-8/8_recommended.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),animation)</visible>
			<property name="group">animation</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-cartoons">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">8</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-6/6_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-6/6_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-6/6_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">cartoons</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">8</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-6/6_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-6/6_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-6/6_recentepisodes.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">cartoons</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">8</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-6/6_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-6/6_random.xml/,return)</property>
			<property name="list">library://video/Plex-6/6_random.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">cartoons</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-cartoons">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">8</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-6/6_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-6/6_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-6/6_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),cartoons)</visible>
			<property name="group">cartoons</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">8</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-6/6_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-6/6_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-6/6_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),cartoons)</visible>
			<property name="group">cartoons</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">8</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-6/6_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-6/6_random.xml/,return)</property>
			<property name="list">library://video/Plex-6/6_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),cartoons)</visible>
			<property name="group">cartoons</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-anime">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-4/4_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-4/4_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-4/4_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">anime</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-4/4_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-4/4_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-4/4_recentepisodes.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">anime</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-4/4_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-4/4_random.xml/,return)</property>
			<property name="list">library://video/Plex-4/4_random.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">anime</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-anime">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-4/4_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-4/4_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-4/4_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),anime)</visible>
			<property name="group">anime</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-4/4_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-4/4_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-4/4_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),anime)</visible>
			<property name="group">anime</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-4/4_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-4/4_random.xml/,return)</property>
			<property name="list">library://video/Plex-4/4_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),anime)</visible>
			<property name="group">anime</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-animemovies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-5/5_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-5/5_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-5/5_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">animemovies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">10</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-5/5_recent.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-5/5_recent.xml/,return)</property>
			<property name="list">library://video/Plex-5/5_recent.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">animemovies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">10</property>
			<label>Recommended</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">recommended</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-5/5_recommended.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-5/5_recommended.xml/,return)</property>
			<property name="list">library://video/Plex-5/5_recommended.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">animemovies</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-animemovies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-5/5_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-5/5_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-5/5_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),animemovies)</visible>
			<property name="group">animemovies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">10</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-5/5_recent.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-5/5_recent.xml/,return)</property>
			<property name="list">library://video/Plex-5/5_recent.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),animemovies)</visible>
			<property name="group">animemovies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">10</property>
			<label>Recommended</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">recommended</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-5/5_recommended.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-5/5_recommended.xml/,return)</property>
			<property name="list">library://video/Plex-5/5_recommended.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),animemovies)</visible>
			<property name="group">animemovies</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-tv80s-90s">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-14/14_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-14/14_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-14/14_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tv80s-90s</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-14/14_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-14/14_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-14/14_recentepisodes.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tv80s-90s</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-14/14_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-14/14_random.xml/,return)</property>
			<property name="list">library://video/Plex-14/14_random.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tv80s-90s</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-tv80s-90s">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-14/14_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-14/14_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-14/14_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tv80s-90s)</visible>
			<property name="group">tv80s-90s</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-14/14_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-14/14_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-14/14_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tv80s-90s)</visible>
			<property name="group">tv80s-90s</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-14/14_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-14/14_random.xml/,return)</property>
			<property name="list">library://video/Plex-14/14_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tv80s-90s)</visible>
			<property name="group">tv80s-90s</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-tvdisney">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">12</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-12/12_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-12/12_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-12/12_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvdisney</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">12</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-12/12_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-12/12_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-12/12_recentepisodes.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvdisney</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">12</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-12/12_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-12/12_random.xml/,return)</property>
			<property name="list">library://video/Plex-12/12_random.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvdisney</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-tvdisney">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">12</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-12/12_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-12/12_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-12/12_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvdisney)</visible>
			<property name="group">tvdisney</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">12</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-12/12_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-12/12_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-12/12_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvdisney)</visible>
			<property name="group">tvdisney</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">12</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-12/12_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-12/12_random.xml/,return)</property>
			<property name="list">library://video/Plex-12/12_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvdisney)</visible>
			<property name="group">tvdisney</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-tvnick">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-13/13_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-13/13_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-13/13_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvnick</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-13/13_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-13/13_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-13/13_recentepisodes.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvnick</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-13/13_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-13/13_random.xml/,return)</property>
			<property name="list">library://video/Plex-13/13_random.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvnick</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-tvnick">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-13/13_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-13/13_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-13/13_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvnick)</visible>
			<property name="group">tvnick</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-13/13_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-13/13_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-13/13_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvnick)</visible>
			<property name="group">tvnick</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-13/13_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-13/13_random.xml/,return)</property>
			<property name="list">library://video/Plex-13/13_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvnick)</visible>
			<property name="group">tvnick</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-tvland">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">14</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-11/11_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-11/11_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-11/11_ondeck.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvland</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">14</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-11/11_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-11/11_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-11/11_recentepisodes.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvland</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">14</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-11/11_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-11/11_random.xml/,return)</property>
			<property name="list">library://video/Plex-11/11_random.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvland</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-tvland">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">14</property>
			<label>On Deck</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">ondeck</property>
			<property name="defaultID">ondeck</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-11/11_ondeck.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-11/11_ondeck.xml/,return)</property>
			<property name="list">library://video/Plex-11/11_ondeck.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvland)</visible>
			<property name="group">tvland</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">14</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentlyadded</property>
			<property name="defaultID">recentlyadded</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-11/11_recentepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-11/11_recentepisodes.xml/,return)</property>
			<property name="list">library://video/Plex-11/11_recentepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvland)</visible>
			<property name="group">tvland</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">14</property>
			<label>Recommended</label>
			<label2>Custom item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">recommended</property>
			<property name="defaultID">random</property>
			<onclick>ActivateWindow(Videos,library://video/Plex-11/11_random.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/Plex-11/11_random.xml/,return)</property>
			<property name="list">library://video/Plex-11/11_random.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvland)</visible>
			<property name="group">tvland</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[24001]</label>
			<label2>Settings</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<onclick>ActivateWindow(AddonBrowser)</onclick>
			<property name="path">ActivateWindow(AddonBrowser)</property>
			<property name="list">AddonBrowser</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>system.getbool(eventlog.enabled)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[24001]</label>
			<label2>Settings</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<onclick>ActivateWindow(AddonBrowser)</onclick>
			<property name="path">ActivateWindow(AddonBrowser)</property>
			<property name="list">AddonBrowser</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304075648.png</thumb>
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">16</property>
			<label>Reload skin</label>
			<label2 />
			<icon>common/reload-skin.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304124451.png</thumb>
			<property name="labelID">31714</property>
			<property name="defaultID">31714</property>
			<property name="translatedPath">ReloadSkin</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ReloadSkin</onclick>
			<property name="path">ReloadSkin</property>
			<property name="list">ReloadSkin</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[7]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<property name="translatedPath">ActivateWindow(filemanager)</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(filemanager)</onclick>
			<property name="path">ActivateWindow(filemanager)</property>
			<property name="list">filemanager</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[744]</label>
			<label2>item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<property name="translatedPath">ActivateWindow(music,sources://music/,return)</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(music,sources://music/,return)</onclick>
			<property name="path">ActivateWindow(music,sources://music/,return)</property>
			<property name="list">sources://music/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[10040]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/addons.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304075605.png</thumb>
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<property name="translatedPath">ActivateWindow(Programs,Addons,return)</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304075637.png</thumb>
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<visible>System.ShowExitButton</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304075648.png</thumb>
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">16</property>
			<label>Reload skin</label>
			<label2 />
			<icon>common/reload-skin.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304124451.png</thumb>
			<property name="labelID">31714</property>
			<property name="defaultID">31714</property>
			<property name="translatedPath">ReloadSkin</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ReloadSkin</onclick>
			<property name="path">ReloadSkin</property>
			<property name="list">ReloadSkin</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[7]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<property name="translatedPath">ActivateWindow(filemanager)</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(filemanager)</onclick>
			<property name="path">ActivateWindow(filemanager)</property>
			<property name="list">filemanager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[744]</label>
			<label2>item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<property name="translatedPath">ActivateWindow(music,sources://music/,return)</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(music,sources://music/,return)</onclick>
			<property name="path">ActivateWindow(music,sources://music/,return)</property>
			<property name="list">sources://music/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[10040]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/addons.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304075605.png</thumb>
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<property name="translatedPath">ActivateWindow(Programs,Addons,return)</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20190304075637.png</thumb>
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-template-spotlightwidget">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-spotlightwidget-Master user</include>
	</include>
	<include name="skinshortcuts-template-spotlightwidget-Master user">
		<control id="1508" type="panel">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]</content>
		</control>
	</include>
	<include name="skinshortcuts-template-Widgets">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-Widgets-Master user</include>
	</include>
	<include name="skinshortcuts-template-Widgets-Master user">
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="1" />
			<param name="submenuid" value="movies" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="true" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="landscape" />
			<param name="widgetStyle3" value="poster" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1510" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="Movies - On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1510" />
			<param name="widgetName" value="Movies - On Deck" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-2/2_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-movies,0) | !Skin.String(widgetvalue-movies)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1520" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="Recently Added Movies" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1520" />
			<param name="widgetName" value="Recently Added Movies" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-2/2_recent.xml/" />
			<param name="widgetStyle" value="widget_layout_landscape" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1530" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="New Releases" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1530" />
			<param name="widgetName" value="New Releases" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/New Releases.xsp" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1540" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1550" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1560" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1570" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1580" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="2" />
			<param name="submenuid" value="4kmovies" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="landscapesmall" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2510" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetName" value="Recently Added 4K Movies" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="refresh" />
			<param name="widgetid" value="2510" />
			<param name="widgetName" value="Recently Added 4K Movies" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Recently Added 4K.xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-4kmovies,0) | !Skin.String(widgetvalue-4kmovies)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2520" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetName" value="Highest Rated 4K Movies" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="refresh" />
			<param name="widgetid" value="2520" />
			<param name="widgetName" value="Highest Rated 4K Movies" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Highest Rated 4K Movies.xsp" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-4kmovies,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2530" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-4kmovies,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2540" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-4kmovies,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2550" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-4kmovies,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2560" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-4kmovies,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2570" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-4kmovies,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2580" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="4kmovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-4kmovies,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="3" />
			<param name="submenuid" value="tvshows" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapesmall" />
			<param name="widgetStyle2" value="landscapelarge" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3510" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="TV On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3510" />
			<param name="widgetName" value="TV On Deck" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-3/3_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-tvshows,0) | !Skin.String(widgetvalue-tvshows)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3520" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="PlexKodiConnect - Recently Added" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3520" />
			<param name="widgetName" value="PlexKodiConnect - Recently Added" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="music" />
			<param name="widgetPath" value="library://video/Plex-3/3_recent.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3530" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3540" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3550" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3560" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3570" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3580" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="4" />
			<param name="submenuid" value="music" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="square" />
			<param name="widgetStyle2" value="landscapesmall" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4510" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="Recently Added Albums" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4510" />
			<param name="widgetName" value="Recently Added Albums" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="music" />
			<param name="widgetPath" value="musicdb://recentlyaddedalbums/" />
			<param name="widgetStyle" value="widget_layout_square" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-music,0) | !Skin.String(widgetvalue-music)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4520" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="Recently Played Songs" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4520" />
			<param name="widgetName" value="Recently Played Songs" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="music" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recentplayed&amp;mediatype=songs&amp;reload=$INFO[Window(Home).Property(widgetreload-music)]" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4530" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4540" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4550" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4560" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4570" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4580" />
			<param name="submenuid" value="music" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="music" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-music,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="5" />
			<param name="submenuid" value="documentaries" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapelarge" />
			<param name="widgetStyle2" value="landscapesmall" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5510" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetName" value="Documentaries - Recently Added" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5510" />
			<param name="widgetName" value="Documentaries - Recently Added" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-9/9_recent.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-documentaries,0) | !Skin.String(widgetvalue-documentaries)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5520" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetName" value="Documentaries - On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5520" />
			<param name="widgetName" value="Documentaries - On Deck" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-9/9_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-documentaries,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5530" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-documentaries,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5540" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-documentaries,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5550" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-documentaries,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5560" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-documentaries,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5570" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-documentaries,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5580" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="documentaries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-documentaries,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="6" />
			<param name="submenuid" value="docutvseries" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapesmall" />
			<param name="widgetStyle2" value="landscapelarge" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6510" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetName" value="Docu TV On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6510" />
			<param name="widgetName" value="Docu TV On Deck" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-10/10_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-docutvseries,0) | !Skin.String(widgetvalue-docutvseries)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6520" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetName" value="Recently Added Docu TV Episodes" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6520" />
			<param name="widgetName" value="Recently Added Docu TV Episodes" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-10/10_recentepisodes.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-docutvseries,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6530" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-docutvseries,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6540" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-docutvseries,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6550" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-docutvseries,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6560" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-docutvseries,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6570" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-docutvseries,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6580" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="docutvseries" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-docutvseries,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="7" />
			<param name="submenuid" value="animation" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapelarge" />
			<param name="widgetStyle2" value="landscapesmall" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7510" />
			<param name="submenuid" value="animation" />
			<param name="widgetName" value="Animation On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7510" />
			<param name="widgetName" value="Animation On Deck" />
			<param name="submenuid" value="animation" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-8/8_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-animation,0) | !Skin.String(widgetvalue-animation)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7520" />
			<param name="submenuid" value="animation" />
			<param name="widgetName" value="Recently Added Animated Movies" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7520" />
			<param name="widgetName" value="Recently Added Animated Movies" />
			<param name="submenuid" value="animation" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-8/8_recent.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animation,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7530" />
			<param name="submenuid" value="animation" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animation" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animation,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7540" />
			<param name="submenuid" value="animation" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animation" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animation,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7550" />
			<param name="submenuid" value="animation" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animation" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animation,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7560" />
			<param name="submenuid" value="animation" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animation" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animation,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7570" />
			<param name="submenuid" value="animation" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animation" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animation,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="7580" />
			<param name="submenuid" value="animation" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="7580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animation" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animation,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="8" />
			<param name="submenuid" value="cartoons" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapesmall" />
			<param name="widgetStyle2" value="landscapelarge" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8510" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetName" value="Cartoons On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8510" />
			<param name="widgetName" value="Cartoons On Deck" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-6/6_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-cartoons,0) | !Skin.String(widgetvalue-cartoons)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8520" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetName" value="Recently Added Cartoons" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8520" />
			<param name="widgetName" value="Recently Added Cartoons" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-6/6_recentepisodes.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-cartoons,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8530" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-cartoons,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8540" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-cartoons,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8550" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-cartoons,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8560" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-cartoons,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8570" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-cartoons,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8580" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="cartoons" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-cartoons,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="9" />
			<param name="submenuid" value="anime" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapesmall" />
			<param name="widgetStyle2" value="landscapelarge" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="9510" />
			<param name="submenuid" value="anime" />
			<param name="widgetName" value="Anime On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9510" />
			<param name="widgetName" value="Anime On Deck" />
			<param name="submenuid" value="anime" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-4/4_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-anime,0) | !Skin.String(widgetvalue-anime)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="9520" />
			<param name="submenuid" value="anime" />
			<param name="widgetName" value="Recently Added Anime" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9520" />
			<param name="widgetName" value="Recently Added Anime" />
			<param name="submenuid" value="anime" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-4/4_recentepisodes.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-anime,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="9530" />
			<param name="submenuid" value="anime" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="anime" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-anime,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="9540" />
			<param name="submenuid" value="anime" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="anime" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-anime,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="9550" />
			<param name="submenuid" value="anime" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="anime" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-anime,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="9560" />
			<param name="submenuid" value="anime" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="anime" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-anime,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="9570" />
			<param name="submenuid" value="anime" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="anime" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-anime,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="9580" />
			<param name="submenuid" value="anime" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="anime" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-anime,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="10" />
			<param name="submenuid" value="animemovies" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapesmall" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10510" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetName" value="Anime Movies On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10510" />
			<param name="widgetName" value="Anime Movies On Deck" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-5/5_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-animemovies,0) | !Skin.String(widgetvalue-animemovies)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10520" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetName" value="Recently Added Anime Movies" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10520" />
			<param name="widgetName" value="Recently Added Anime Movies" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-5/5_recent.xml/" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animemovies,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10530" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animemovies,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10540" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animemovies,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10550" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animemovies,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10560" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animemovies,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10570" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animemovies,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10580" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="animemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-animemovies,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="11" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapesmall" />
			<param name="widgetStyle2" value="poster" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11510" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetName" value="TV 80's &amp; 90's - Recently Added" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11510" />
			<param name="widgetName" value="TV 80's &amp; 90's - Recently Added" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-14/14_recentepisodes.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-tv80s-90s,0) | !Skin.String(widgetvalue-tv80s-90s)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11520" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetName" value="TV 80's &amp; 90's - On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11520" />
			<param name="widgetName" value="TV 80's &amp; 90's - On Deck" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-14/14_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tv80s-90s,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11530" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tv80s-90s,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11540" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tv80s-90s,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11550" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tv80s-90s,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11560" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tv80s-90s,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11570" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tv80s-90s,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="11580" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tv80s-90s" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tv80s-90s,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="12" />
			<param name="submenuid" value="tvdisney" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapesmall" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="12510" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetName" value="TV Disney - On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12510" />
			<param name="widgetName" value="TV Disney - On Deck" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-12/12_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-tvdisney,0) | !Skin.String(widgetvalue-tvdisney)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="12520" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetName" value="Recently Added Disney Shows" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12520" />
			<param name="widgetName" value="Recently Added Disney Shows" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-12/12_recentepisodes.xml/" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvdisney,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="12530" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvdisney,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="12540" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvdisney,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="12550" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvdisney,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="12560" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvdisney,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="12570" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvdisney,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="12580" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvdisney" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvdisney,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="13" />
			<param name="submenuid" value="tvnick" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapesmall" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13510" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetName" value="TV Nick - On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13510" />
			<param name="widgetName" value="TV Nick - On Deck" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-13/13_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-tvnick,0) | !Skin.String(widgetvalue-tvnick)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13520" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetName" value="Recently Added Nickelodeon Shows" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13520" />
			<param name="widgetName" value="Recently Added Nickelodeon Shows" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-13/13_recentepisodes.xml/" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvnick,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13530" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvnick,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13540" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvnick,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13550" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvnick,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13560" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvnick,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13570" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvnick,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="13580" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="13580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvnick" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvnick,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="14" />
			<param name="submenuid" value="tvland" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapesmall" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14510" />
			<param name="submenuid" value="tvland" />
			<param name="widgetName" value="TV Land - On Deck" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14510" />
			<param name="widgetName" value="TV Land - On Deck" />
			<param name="submenuid" value="tvland" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-11/11_ondeck.xml/" />
			<param name="widgetStyle" value="widget_layout_landscapesmall" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-tvland,0) | !Skin.String(widgetvalue-tvland)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14520" />
			<param name="submenuid" value="tvland" />
			<param name="widgetName" value="Recently Added Classic TV Shows" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14520" />
			<param name="widgetName" value="Recently Added Classic TV Shows" />
			<param name="submenuid" value="tvland" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="library://video/Plex-11/11_recentepisodes.xml/" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvland,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14530" />
			<param name="submenuid" value="tvland" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvland" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvland,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14540" />
			<param name="submenuid" value="tvland" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvland" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvland,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14550" />
			<param name="submenuid" value="tvland" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvland" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvland,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14560" />
			<param name="submenuid" value="tvland" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvland" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvland,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14570" />
			<param name="submenuid" value="tvland" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvland" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvland,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14580" />
			<param name="submenuid" value="tvland" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvland" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvland,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="15" />
			<param name="submenuid" value="settings" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="15510" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="$LOCALIZE[130]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="systeminfo" />
			<param name="widgetid" value="15510" />
			<param name="widgetName" value="$LOCALIZE[130]" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="static" />
			<param name="widgetPath" value="$INCLUDE[SystemInfoWidget]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-settings,0) | !Skin.String(widgetvalue-settings)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="15520" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="15530" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="15540" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="15550" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="15560" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="15570" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="15580" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
	</include>
	<variable name="1510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-2/2_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-1510">
		<value condition="String.Contains(Container(1510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1510).ListItem.label] $INFO[Container(1510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Title) + String.Contains(Container(1510).ListItem.FolderPath, pvr://)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Season) + !String.IsEmpty(Container(1510).ListItem.Episode) + !String.Contains(Container(1510).ListItem.TvShowTitle,Container(1510).ListItem.Title)">[UPPERCASE]S$INFO[Container(1510).ListItem.Season]E$INFO[Container(1510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Title)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Label)">$INFO[Container(1510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1510">
		<value condition="!String.IsEmpty(Container(1510).ListItem.TvShowTitle) + !String.IsEmpty(Container(1510).ListItem.Genre)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.TvShowTitle)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Premiered,, • ]$INFO[Container(1510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Year)">$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Duration,,min. • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Artist) + !String.IsEmpty(Container(1510).ListItem.Album)">$INFO[Container(1510).ListItem.Artist,, • ]$INFO[Container(1510).ListItem.Album,, • ]$INFO[Container(1510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Property(StartTime))">$INFO[Container(1510).ListItem.Property(ChannelName),, • ]$INFO[Container(1510).ListItem.Property(StartTime),, - ]$INFO[Container(1510).ListItem.Property(EndTime),, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.StartTime)">$INFO[Container(1510).ListItem.ChannelName,, • ]$INFO[Container(1510).ListItem.StartTime,, - ]$INFO[Container(1510).ListItem.EndTime,, • ]$INFO[Container(1510).ListItem.Genre]</value>
	</variable>
	<variable name="1520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-2/2_recent.xml/</value>
	</variable>
	<variable name="widgetinfolabel-1520">
		<value condition="String.Contains(Container(1520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1520).ListItem.label] $INFO[Container(1520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Title) + String.Contains(Container(1520).ListItem.FolderPath, pvr://)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Season) + !String.IsEmpty(Container(1520).ListItem.Episode) + !String.Contains(Container(1520).ListItem.TvShowTitle,Container(1520).ListItem.Title)">[UPPERCASE]S$INFO[Container(1520).ListItem.Season]E$INFO[Container(1520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Title)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Label)">$INFO[Container(1520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1520">
		<value condition="!String.IsEmpty(Container(1520).ListItem.TvShowTitle) + !String.IsEmpty(Container(1520).ListItem.Genre)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.TvShowTitle)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Premiered,, • ]$INFO[Container(1520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Year)">$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Duration,,min. • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Artist) + !String.IsEmpty(Container(1520).ListItem.Album)">$INFO[Container(1520).ListItem.Artist,, • ]$INFO[Container(1520).ListItem.Album,, • ]$INFO[Container(1520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Property(StartTime))">$INFO[Container(1520).ListItem.Property(ChannelName),, • ]$INFO[Container(1520).ListItem.Property(StartTime),, - ]$INFO[Container(1520).ListItem.Property(EndTime),, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.StartTime)">$INFO[Container(1520).ListItem.ChannelName,, • ]$INFO[Container(1520).ListItem.StartTime,, - ]$INFO[Container(1520).ListItem.EndTime,, • ]$INFO[Container(1520).ListItem.Genre]</value>
	</variable>
	<variable name="1530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/New Releases.xsp</value>
	</variable>
	<variable name="widgetinfolabel-1530">
		<value condition="String.Contains(Container(1530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1530).ListItem.label] $INFO[Container(1530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Title) + String.Contains(Container(1530).ListItem.FolderPath, pvr://)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Season) + !String.IsEmpty(Container(1530).ListItem.Episode) + !String.Contains(Container(1530).ListItem.TvShowTitle,Container(1530).ListItem.Title)">[UPPERCASE]S$INFO[Container(1530).ListItem.Season]E$INFO[Container(1530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Title)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Label)">$INFO[Container(1530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1530">
		<value condition="!String.IsEmpty(Container(1530).ListItem.TvShowTitle) + !String.IsEmpty(Container(1530).ListItem.Genre)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.TvShowTitle)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Premiered,, • ]$INFO[Container(1530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Year)">$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Duration,,min. • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Artist) + !String.IsEmpty(Container(1530).ListItem.Album)">$INFO[Container(1530).ListItem.Artist,, • ]$INFO[Container(1530).ListItem.Album,, • ]$INFO[Container(1530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Property(StartTime))">$INFO[Container(1530).ListItem.Property(ChannelName),, • ]$INFO[Container(1530).ListItem.Property(StartTime),, - ]$INFO[Container(1530).ListItem.Property(EndTime),, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.StartTime)">$INFO[Container(1530).ListItem.ChannelName,, • ]$INFO[Container(1530).ListItem.StartTime,, - ]$INFO[Container(1530).ListItem.EndTime,, • ]$INFO[Container(1530).ListItem.Genre]</value>
	</variable>
	<variable name="1540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1540">
		<value condition="String.Contains(Container(1540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1540).ListItem.label] $INFO[Container(1540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Title) + String.Contains(Container(1540).ListItem.FolderPath, pvr://)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Season) + !String.IsEmpty(Container(1540).ListItem.Episode) + !String.Contains(Container(1540).ListItem.TvShowTitle,Container(1540).ListItem.Title)">[UPPERCASE]S$INFO[Container(1540).ListItem.Season]E$INFO[Container(1540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Title)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Label)">$INFO[Container(1540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1540">
		<value condition="!String.IsEmpty(Container(1540).ListItem.TvShowTitle) + !String.IsEmpty(Container(1540).ListItem.Genre)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.TvShowTitle)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Premiered,, • ]$INFO[Container(1540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Year)">$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Duration,,min. • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Artist) + !String.IsEmpty(Container(1540).ListItem.Album)">$INFO[Container(1540).ListItem.Artist,, • ]$INFO[Container(1540).ListItem.Album,, • ]$INFO[Container(1540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Property(StartTime))">$INFO[Container(1540).ListItem.Property(ChannelName),, • ]$INFO[Container(1540).ListItem.Property(StartTime),, - ]$INFO[Container(1540).ListItem.Property(EndTime),, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.StartTime)">$INFO[Container(1540).ListItem.ChannelName,, • ]$INFO[Container(1540).ListItem.StartTime,, - ]$INFO[Container(1540).ListItem.EndTime,, • ]$INFO[Container(1540).ListItem.Genre]</value>
	</variable>
	<variable name="1550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1550">
		<value condition="String.Contains(Container(1550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1550).ListItem.label] $INFO[Container(1550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Title) + String.Contains(Container(1550).ListItem.FolderPath, pvr://)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Season) + !String.IsEmpty(Container(1550).ListItem.Episode) + !String.Contains(Container(1550).ListItem.TvShowTitle,Container(1550).ListItem.Title)">[UPPERCASE]S$INFO[Container(1550).ListItem.Season]E$INFO[Container(1550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Title)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Label)">$INFO[Container(1550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1550">
		<value condition="!String.IsEmpty(Container(1550).ListItem.TvShowTitle) + !String.IsEmpty(Container(1550).ListItem.Genre)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.TvShowTitle)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Premiered,, • ]$INFO[Container(1550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Year)">$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Duration,,min. • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Artist) + !String.IsEmpty(Container(1550).ListItem.Album)">$INFO[Container(1550).ListItem.Artist,, • ]$INFO[Container(1550).ListItem.Album,, • ]$INFO[Container(1550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Property(StartTime))">$INFO[Container(1550).ListItem.Property(ChannelName),, • ]$INFO[Container(1550).ListItem.Property(StartTime),, - ]$INFO[Container(1550).ListItem.Property(EndTime),, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.StartTime)">$INFO[Container(1550).ListItem.ChannelName,, • ]$INFO[Container(1550).ListItem.StartTime,, - ]$INFO[Container(1550).ListItem.EndTime,, • ]$INFO[Container(1550).ListItem.Genre]</value>
	</variable>
	<variable name="1560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1560">
		<value condition="String.Contains(Container(1560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1560).ListItem.label] $INFO[Container(1560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Title) + String.Contains(Container(1560).ListItem.FolderPath, pvr://)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Season) + !String.IsEmpty(Container(1560).ListItem.Episode) + !String.Contains(Container(1560).ListItem.TvShowTitle,Container(1560).ListItem.Title)">[UPPERCASE]S$INFO[Container(1560).ListItem.Season]E$INFO[Container(1560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Title)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Label)">$INFO[Container(1560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1560">
		<value condition="!String.IsEmpty(Container(1560).ListItem.TvShowTitle) + !String.IsEmpty(Container(1560).ListItem.Genre)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.TvShowTitle)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Premiered,, • ]$INFO[Container(1560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Year)">$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Duration,,min. • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Artist) + !String.IsEmpty(Container(1560).ListItem.Album)">$INFO[Container(1560).ListItem.Artist,, • ]$INFO[Container(1560).ListItem.Album,, • ]$INFO[Container(1560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Property(StartTime))">$INFO[Container(1560).ListItem.Property(ChannelName),, • ]$INFO[Container(1560).ListItem.Property(StartTime),, - ]$INFO[Container(1560).ListItem.Property(EndTime),, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.StartTime)">$INFO[Container(1560).ListItem.ChannelName,, • ]$INFO[Container(1560).ListItem.StartTime,, - ]$INFO[Container(1560).ListItem.EndTime,, • ]$INFO[Container(1560).ListItem.Genre]</value>
	</variable>
	<variable name="1570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1570">
		<value condition="String.Contains(Container(1570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1570).ListItem.label] $INFO[Container(1570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Title) + String.Contains(Container(1570).ListItem.FolderPath, pvr://)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Season) + !String.IsEmpty(Container(1570).ListItem.Episode) + !String.Contains(Container(1570).ListItem.TvShowTitle,Container(1570).ListItem.Title)">[UPPERCASE]S$INFO[Container(1570).ListItem.Season]E$INFO[Container(1570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Title)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Label)">$INFO[Container(1570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1570">
		<value condition="!String.IsEmpty(Container(1570).ListItem.TvShowTitle) + !String.IsEmpty(Container(1570).ListItem.Genre)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.TvShowTitle)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Premiered,, • ]$INFO[Container(1570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Year)">$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Duration,,min. • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Artist) + !String.IsEmpty(Container(1570).ListItem.Album)">$INFO[Container(1570).ListItem.Artist,, • ]$INFO[Container(1570).ListItem.Album,, • ]$INFO[Container(1570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Property(StartTime))">$INFO[Container(1570).ListItem.Property(ChannelName),, • ]$INFO[Container(1570).ListItem.Property(StartTime),, - ]$INFO[Container(1570).ListItem.Property(EndTime),, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.StartTime)">$INFO[Container(1570).ListItem.ChannelName,, • ]$INFO[Container(1570).ListItem.StartTime,, - ]$INFO[Container(1570).ListItem.EndTime,, • ]$INFO[Container(1570).ListItem.Genre]</value>
	</variable>
	<variable name="1580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1580">
		<value condition="String.Contains(Container(1580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1580).ListItem.label] $INFO[Container(1580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Title) + String.Contains(Container(1580).ListItem.FolderPath, pvr://)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Season) + !String.IsEmpty(Container(1580).ListItem.Episode) + !String.Contains(Container(1580).ListItem.TvShowTitle,Container(1580).ListItem.Title)">[UPPERCASE]S$INFO[Container(1580).ListItem.Season]E$INFO[Container(1580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Title)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Label)">$INFO[Container(1580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1580">
		<value condition="!String.IsEmpty(Container(1580).ListItem.TvShowTitle) + !String.IsEmpty(Container(1580).ListItem.Genre)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.TvShowTitle)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Premiered,, • ]$INFO[Container(1580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Year)">$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Duration,,min. • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Artist) + !String.IsEmpty(Container(1580).ListItem.Album)">$INFO[Container(1580).ListItem.Artist,, • ]$INFO[Container(1580).ListItem.Album,, • ]$INFO[Container(1580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Property(StartTime))">$INFO[Container(1580).ListItem.Property(ChannelName),, • ]$INFO[Container(1580).ListItem.Property(StartTime),, - ]$INFO[Container(1580).ListItem.Property(EndTime),, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.StartTime)">$INFO[Container(1580).ListItem.ChannelName,, • ]$INFO[Container(1580).ListItem.StartTime,, - ]$INFO[Container(1580).ListItem.EndTime,, • ]$INFO[Container(1580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-1">
		<value condition="Skin.String(widgetvalue-movies,7)" />
		<value condition="Skin.String(widgetvalue-movies,6)" />
		<value condition="Skin.String(widgetvalue-movies,5)" />
		<value condition="Skin.String(widgetvalue-movies,4)" />
		<value condition="Skin.String(widgetvalue-movies,3)" />
		<value condition="Skin.String(widgetvalue-movies,2)">New Releases</value>
		<value condition="Skin.String(widgetvalue-movies,1)">Recently Added Movies</value>
		<value>Movies - On Deck</value>
	</variable>
	<variable name="2510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Recently Added 4K.xsp</value>
	</variable>
	<variable name="widgetinfolabel-2510">
		<value condition="String.Contains(Container(2510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2510).ListItem.label] $INFO[Container(2510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Title) + String.Contains(Container(2510).ListItem.FolderPath, pvr://)">$INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Season) + !String.IsEmpty(Container(2510).ListItem.Episode) + !String.Contains(Container(2510).ListItem.TvShowTitle,Container(2510).ListItem.Title)">[UPPERCASE]S$INFO[Container(2510).ListItem.Season]E$INFO[Container(2510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Title)">$INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Label)">$INFO[Container(2510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2510">
		<value condition="!String.IsEmpty(Container(2510).ListItem.TvShowTitle) + !String.IsEmpty(Container(2510).ListItem.Genre)">$INFO[Container(2510).ListItem.TvShowTitle,, • ]$INFO[Container(2510).ListItem.Year,, • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.TvShowTitle)">$INFO[Container(2510).ListItem.TvShowTitle,, • ]$INFO[Container(2510).ListItem.Premiered,, • ]$INFO[Container(2510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Year)">$INFO[Container(2510).ListItem.Year,, • ]$INFO[Container(2510).ListItem.Duration,,min. • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Artist) + !String.IsEmpty(Container(2510).ListItem.Album)">$INFO[Container(2510).ListItem.Artist,, • ]$INFO[Container(2510).ListItem.Album,, • ]$INFO[Container(2510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Property(StartTime))">$INFO[Container(2510).ListItem.Property(ChannelName),, • ]$INFO[Container(2510).ListItem.Property(StartTime),, - ]$INFO[Container(2510).ListItem.Property(EndTime),, • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.StartTime)">$INFO[Container(2510).ListItem.ChannelName,, • ]$INFO[Container(2510).ListItem.StartTime,, - ]$INFO[Container(2510).ListItem.EndTime,, • ]$INFO[Container(2510).ListItem.Genre]</value>
	</variable>
	<variable name="2520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Highest Rated 4K Movies.xsp</value>
	</variable>
	<variable name="widgetinfolabel-2520">
		<value condition="String.Contains(Container(2520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2520).ListItem.label] $INFO[Container(2520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Title) + String.Contains(Container(2520).ListItem.FolderPath, pvr://)">$INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Season) + !String.IsEmpty(Container(2520).ListItem.Episode) + !String.Contains(Container(2520).ListItem.TvShowTitle,Container(2520).ListItem.Title)">[UPPERCASE]S$INFO[Container(2520).ListItem.Season]E$INFO[Container(2520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Title)">$INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Label)">$INFO[Container(2520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2520">
		<value condition="!String.IsEmpty(Container(2520).ListItem.TvShowTitle) + !String.IsEmpty(Container(2520).ListItem.Genre)">$INFO[Container(2520).ListItem.TvShowTitle,, • ]$INFO[Container(2520).ListItem.Year,, • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.TvShowTitle)">$INFO[Container(2520).ListItem.TvShowTitle,, • ]$INFO[Container(2520).ListItem.Premiered,, • ]$INFO[Container(2520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Year)">$INFO[Container(2520).ListItem.Year,, • ]$INFO[Container(2520).ListItem.Duration,,min. • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Artist) + !String.IsEmpty(Container(2520).ListItem.Album)">$INFO[Container(2520).ListItem.Artist,, • ]$INFO[Container(2520).ListItem.Album,, • ]$INFO[Container(2520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Property(StartTime))">$INFO[Container(2520).ListItem.Property(ChannelName),, • ]$INFO[Container(2520).ListItem.Property(StartTime),, - ]$INFO[Container(2520).ListItem.Property(EndTime),, • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.StartTime)">$INFO[Container(2520).ListItem.ChannelName,, • ]$INFO[Container(2520).ListItem.StartTime,, - ]$INFO[Container(2520).ListItem.EndTime,, • ]$INFO[Container(2520).ListItem.Genre]</value>
	</variable>
	<variable name="2530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2530">
		<value condition="String.Contains(Container(2530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2530).ListItem.label] $INFO[Container(2530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Title) + String.Contains(Container(2530).ListItem.FolderPath, pvr://)">$INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Season) + !String.IsEmpty(Container(2530).ListItem.Episode) + !String.Contains(Container(2530).ListItem.TvShowTitle,Container(2530).ListItem.Title)">[UPPERCASE]S$INFO[Container(2530).ListItem.Season]E$INFO[Container(2530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Title)">$INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Label)">$INFO[Container(2530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2530">
		<value condition="!String.IsEmpty(Container(2530).ListItem.TvShowTitle) + !String.IsEmpty(Container(2530).ListItem.Genre)">$INFO[Container(2530).ListItem.TvShowTitle,, • ]$INFO[Container(2530).ListItem.Year,, • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.TvShowTitle)">$INFO[Container(2530).ListItem.TvShowTitle,, • ]$INFO[Container(2530).ListItem.Premiered,, • ]$INFO[Container(2530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Year)">$INFO[Container(2530).ListItem.Year,, • ]$INFO[Container(2530).ListItem.Duration,,min. • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Artist) + !String.IsEmpty(Container(2530).ListItem.Album)">$INFO[Container(2530).ListItem.Artist,, • ]$INFO[Container(2530).ListItem.Album,, • ]$INFO[Container(2530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Property(StartTime))">$INFO[Container(2530).ListItem.Property(ChannelName),, • ]$INFO[Container(2530).ListItem.Property(StartTime),, - ]$INFO[Container(2530).ListItem.Property(EndTime),, • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.StartTime)">$INFO[Container(2530).ListItem.ChannelName,, • ]$INFO[Container(2530).ListItem.StartTime,, - ]$INFO[Container(2530).ListItem.EndTime,, • ]$INFO[Container(2530).ListItem.Genre]</value>
	</variable>
	<variable name="2540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2540">
		<value condition="String.Contains(Container(2540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2540).ListItem.label] $INFO[Container(2540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Title) + String.Contains(Container(2540).ListItem.FolderPath, pvr://)">$INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Season) + !String.IsEmpty(Container(2540).ListItem.Episode) + !String.Contains(Container(2540).ListItem.TvShowTitle,Container(2540).ListItem.Title)">[UPPERCASE]S$INFO[Container(2540).ListItem.Season]E$INFO[Container(2540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Title)">$INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Label)">$INFO[Container(2540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2540">
		<value condition="!String.IsEmpty(Container(2540).ListItem.TvShowTitle) + !String.IsEmpty(Container(2540).ListItem.Genre)">$INFO[Container(2540).ListItem.TvShowTitle,, • ]$INFO[Container(2540).ListItem.Year,, • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.TvShowTitle)">$INFO[Container(2540).ListItem.TvShowTitle,, • ]$INFO[Container(2540).ListItem.Premiered,, • ]$INFO[Container(2540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Year)">$INFO[Container(2540).ListItem.Year,, • ]$INFO[Container(2540).ListItem.Duration,,min. • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Artist) + !String.IsEmpty(Container(2540).ListItem.Album)">$INFO[Container(2540).ListItem.Artist,, • ]$INFO[Container(2540).ListItem.Album,, • ]$INFO[Container(2540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Property(StartTime))">$INFO[Container(2540).ListItem.Property(ChannelName),, • ]$INFO[Container(2540).ListItem.Property(StartTime),, - ]$INFO[Container(2540).ListItem.Property(EndTime),, • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.StartTime)">$INFO[Container(2540).ListItem.ChannelName,, • ]$INFO[Container(2540).ListItem.StartTime,, - ]$INFO[Container(2540).ListItem.EndTime,, • ]$INFO[Container(2540).ListItem.Genre]</value>
	</variable>
	<variable name="2550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2550">
		<value condition="String.Contains(Container(2550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2550).ListItem.label] $INFO[Container(2550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Title) + String.Contains(Container(2550).ListItem.FolderPath, pvr://)">$INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Season) + !String.IsEmpty(Container(2550).ListItem.Episode) + !String.Contains(Container(2550).ListItem.TvShowTitle,Container(2550).ListItem.Title)">[UPPERCASE]S$INFO[Container(2550).ListItem.Season]E$INFO[Container(2550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Title)">$INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Label)">$INFO[Container(2550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2550">
		<value condition="!String.IsEmpty(Container(2550).ListItem.TvShowTitle) + !String.IsEmpty(Container(2550).ListItem.Genre)">$INFO[Container(2550).ListItem.TvShowTitle,, • ]$INFO[Container(2550).ListItem.Year,, • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.TvShowTitle)">$INFO[Container(2550).ListItem.TvShowTitle,, • ]$INFO[Container(2550).ListItem.Premiered,, • ]$INFO[Container(2550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Year)">$INFO[Container(2550).ListItem.Year,, • ]$INFO[Container(2550).ListItem.Duration,,min. • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Artist) + !String.IsEmpty(Container(2550).ListItem.Album)">$INFO[Container(2550).ListItem.Artist,, • ]$INFO[Container(2550).ListItem.Album,, • ]$INFO[Container(2550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Property(StartTime))">$INFO[Container(2550).ListItem.Property(ChannelName),, • ]$INFO[Container(2550).ListItem.Property(StartTime),, - ]$INFO[Container(2550).ListItem.Property(EndTime),, • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.StartTime)">$INFO[Container(2550).ListItem.ChannelName,, • ]$INFO[Container(2550).ListItem.StartTime,, - ]$INFO[Container(2550).ListItem.EndTime,, • ]$INFO[Container(2550).ListItem.Genre]</value>
	</variable>
	<variable name="2560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2560">
		<value condition="String.Contains(Container(2560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2560).ListItem.label] $INFO[Container(2560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Title) + String.Contains(Container(2560).ListItem.FolderPath, pvr://)">$INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Season) + !String.IsEmpty(Container(2560).ListItem.Episode) + !String.Contains(Container(2560).ListItem.TvShowTitle,Container(2560).ListItem.Title)">[UPPERCASE]S$INFO[Container(2560).ListItem.Season]E$INFO[Container(2560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Title)">$INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Label)">$INFO[Container(2560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2560">
		<value condition="!String.IsEmpty(Container(2560).ListItem.TvShowTitle) + !String.IsEmpty(Container(2560).ListItem.Genre)">$INFO[Container(2560).ListItem.TvShowTitle,, • ]$INFO[Container(2560).ListItem.Year,, • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.TvShowTitle)">$INFO[Container(2560).ListItem.TvShowTitle,, • ]$INFO[Container(2560).ListItem.Premiered,, • ]$INFO[Container(2560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Year)">$INFO[Container(2560).ListItem.Year,, • ]$INFO[Container(2560).ListItem.Duration,,min. • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Artist) + !String.IsEmpty(Container(2560).ListItem.Album)">$INFO[Container(2560).ListItem.Artist,, • ]$INFO[Container(2560).ListItem.Album,, • ]$INFO[Container(2560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Property(StartTime))">$INFO[Container(2560).ListItem.Property(ChannelName),, • ]$INFO[Container(2560).ListItem.Property(StartTime),, - ]$INFO[Container(2560).ListItem.Property(EndTime),, • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.StartTime)">$INFO[Container(2560).ListItem.ChannelName,, • ]$INFO[Container(2560).ListItem.StartTime,, - ]$INFO[Container(2560).ListItem.EndTime,, • ]$INFO[Container(2560).ListItem.Genre]</value>
	</variable>
	<variable name="2570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2570">
		<value condition="String.Contains(Container(2570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2570).ListItem.label] $INFO[Container(2570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Title) + String.Contains(Container(2570).ListItem.FolderPath, pvr://)">$INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Season) + !String.IsEmpty(Container(2570).ListItem.Episode) + !String.Contains(Container(2570).ListItem.TvShowTitle,Container(2570).ListItem.Title)">[UPPERCASE]S$INFO[Container(2570).ListItem.Season]E$INFO[Container(2570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Title)">$INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Label)">$INFO[Container(2570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2570">
		<value condition="!String.IsEmpty(Container(2570).ListItem.TvShowTitle) + !String.IsEmpty(Container(2570).ListItem.Genre)">$INFO[Container(2570).ListItem.TvShowTitle,, • ]$INFO[Container(2570).ListItem.Year,, • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.TvShowTitle)">$INFO[Container(2570).ListItem.TvShowTitle,, • ]$INFO[Container(2570).ListItem.Premiered,, • ]$INFO[Container(2570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Year)">$INFO[Container(2570).ListItem.Year,, • ]$INFO[Container(2570).ListItem.Duration,,min. • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Artist) + !String.IsEmpty(Container(2570).ListItem.Album)">$INFO[Container(2570).ListItem.Artist,, • ]$INFO[Container(2570).ListItem.Album,, • ]$INFO[Container(2570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Property(StartTime))">$INFO[Container(2570).ListItem.Property(ChannelName),, • ]$INFO[Container(2570).ListItem.Property(StartTime),, - ]$INFO[Container(2570).ListItem.Property(EndTime),, • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.StartTime)">$INFO[Container(2570).ListItem.ChannelName,, • ]$INFO[Container(2570).ListItem.StartTime,, - ]$INFO[Container(2570).ListItem.EndTime,, • ]$INFO[Container(2570).ListItem.Genre]</value>
	</variable>
	<variable name="2580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2580">
		<value condition="String.Contains(Container(2580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2580).ListItem.label] $INFO[Container(2580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Title) + String.Contains(Container(2580).ListItem.FolderPath, pvr://)">$INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Season) + !String.IsEmpty(Container(2580).ListItem.Episode) + !String.Contains(Container(2580).ListItem.TvShowTitle,Container(2580).ListItem.Title)">[UPPERCASE]S$INFO[Container(2580).ListItem.Season]E$INFO[Container(2580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Title)">$INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Label)">$INFO[Container(2580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2580">
		<value condition="!String.IsEmpty(Container(2580).ListItem.TvShowTitle) + !String.IsEmpty(Container(2580).ListItem.Genre)">$INFO[Container(2580).ListItem.TvShowTitle,, • ]$INFO[Container(2580).ListItem.Year,, • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.TvShowTitle)">$INFO[Container(2580).ListItem.TvShowTitle,, • ]$INFO[Container(2580).ListItem.Premiered,, • ]$INFO[Container(2580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Year)">$INFO[Container(2580).ListItem.Year,, • ]$INFO[Container(2580).ListItem.Duration,,min. • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Artist) + !String.IsEmpty(Container(2580).ListItem.Album)">$INFO[Container(2580).ListItem.Artist,, • ]$INFO[Container(2580).ListItem.Album,, • ]$INFO[Container(2580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Property(StartTime))">$INFO[Container(2580).ListItem.Property(ChannelName),, • ]$INFO[Container(2580).ListItem.Property(StartTime),, - ]$INFO[Container(2580).ListItem.Property(EndTime),, • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.StartTime)">$INFO[Container(2580).ListItem.ChannelName,, • ]$INFO[Container(2580).ListItem.StartTime,, - ]$INFO[Container(2580).ListItem.EndTime,, • ]$INFO[Container(2580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-2">
		<value condition="Skin.String(widgetvalue-4kmovies,7)" />
		<value condition="Skin.String(widgetvalue-4kmovies,6)" />
		<value condition="Skin.String(widgetvalue-4kmovies,5)" />
		<value condition="Skin.String(widgetvalue-4kmovies,4)" />
		<value condition="Skin.String(widgetvalue-4kmovies,3)" />
		<value condition="Skin.String(widgetvalue-4kmovies,2)" />
		<value condition="Skin.String(widgetvalue-4kmovies,1)">Highest Rated 4K Movies</value>
		<value>Recently Added 4K Movies</value>
	</variable>
	<variable name="3510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-3/3_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-3510">
		<value condition="String.Contains(Container(3510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3510).ListItem.label] $INFO[Container(3510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Title) + String.Contains(Container(3510).ListItem.FolderPath, pvr://)">$INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Season) + !String.IsEmpty(Container(3510).ListItem.Episode) + !String.Contains(Container(3510).ListItem.TvShowTitle,Container(3510).ListItem.Title)">[UPPERCASE]S$INFO[Container(3510).ListItem.Season]E$INFO[Container(3510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Title)">$INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Label)">$INFO[Container(3510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3510">
		<value condition="!String.IsEmpty(Container(3510).ListItem.TvShowTitle) + !String.IsEmpty(Container(3510).ListItem.Genre)">$INFO[Container(3510).ListItem.TvShowTitle,, • ]$INFO[Container(3510).ListItem.Year,, • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.TvShowTitle)">$INFO[Container(3510).ListItem.TvShowTitle,, • ]$INFO[Container(3510).ListItem.Premiered,, • ]$INFO[Container(3510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Year)">$INFO[Container(3510).ListItem.Year,, • ]$INFO[Container(3510).ListItem.Duration,,min. • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Artist) + !String.IsEmpty(Container(3510).ListItem.Album)">$INFO[Container(3510).ListItem.Artist,, • ]$INFO[Container(3510).ListItem.Album,, • ]$INFO[Container(3510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Property(StartTime))">$INFO[Container(3510).ListItem.Property(ChannelName),, • ]$INFO[Container(3510).ListItem.Property(StartTime),, - ]$INFO[Container(3510).ListItem.Property(EndTime),, • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.StartTime)">$INFO[Container(3510).ListItem.ChannelName,, • ]$INFO[Container(3510).ListItem.StartTime,, - ]$INFO[Container(3510).ListItem.EndTime,, • ]$INFO[Container(3510).ListItem.Genre]</value>
	</variable>
	<variable name="3520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-3/3_recent.xml/</value>
	</variable>
	<variable name="widgetinfolabel-3520">
		<value condition="String.Contains(Container(3520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3520).ListItem.label] $INFO[Container(3520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Title) + String.Contains(Container(3520).ListItem.FolderPath, pvr://)">$INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Season) + !String.IsEmpty(Container(3520).ListItem.Episode) + !String.Contains(Container(3520).ListItem.TvShowTitle,Container(3520).ListItem.Title)">[UPPERCASE]S$INFO[Container(3520).ListItem.Season]E$INFO[Container(3520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Title)">$INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Label)">$INFO[Container(3520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3520">
		<value condition="!String.IsEmpty(Container(3520).ListItem.TvShowTitle) + !String.IsEmpty(Container(3520).ListItem.Genre)">$INFO[Container(3520).ListItem.TvShowTitle,, • ]$INFO[Container(3520).ListItem.Year,, • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.TvShowTitle)">$INFO[Container(3520).ListItem.TvShowTitle,, • ]$INFO[Container(3520).ListItem.Premiered,, • ]$INFO[Container(3520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Year)">$INFO[Container(3520).ListItem.Year,, • ]$INFO[Container(3520).ListItem.Duration,,min. • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Artist) + !String.IsEmpty(Container(3520).ListItem.Album)">$INFO[Container(3520).ListItem.Artist,, • ]$INFO[Container(3520).ListItem.Album,, • ]$INFO[Container(3520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Property(StartTime))">$INFO[Container(3520).ListItem.Property(ChannelName),, • ]$INFO[Container(3520).ListItem.Property(StartTime),, - ]$INFO[Container(3520).ListItem.Property(EndTime),, • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.StartTime)">$INFO[Container(3520).ListItem.ChannelName,, • ]$INFO[Container(3520).ListItem.StartTime,, - ]$INFO[Container(3520).ListItem.EndTime,, • ]$INFO[Container(3520).ListItem.Genre]</value>
	</variable>
	<variable name="3530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3530">
		<value condition="String.Contains(Container(3530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3530).ListItem.label] $INFO[Container(3530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Title) + String.Contains(Container(3530).ListItem.FolderPath, pvr://)">$INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Season) + !String.IsEmpty(Container(3530).ListItem.Episode) + !String.Contains(Container(3530).ListItem.TvShowTitle,Container(3530).ListItem.Title)">[UPPERCASE]S$INFO[Container(3530).ListItem.Season]E$INFO[Container(3530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Title)">$INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Label)">$INFO[Container(3530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3530">
		<value condition="!String.IsEmpty(Container(3530).ListItem.TvShowTitle) + !String.IsEmpty(Container(3530).ListItem.Genre)">$INFO[Container(3530).ListItem.TvShowTitle,, • ]$INFO[Container(3530).ListItem.Year,, • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.TvShowTitle)">$INFO[Container(3530).ListItem.TvShowTitle,, • ]$INFO[Container(3530).ListItem.Premiered,, • ]$INFO[Container(3530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Year)">$INFO[Container(3530).ListItem.Year,, • ]$INFO[Container(3530).ListItem.Duration,,min. • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Artist) + !String.IsEmpty(Container(3530).ListItem.Album)">$INFO[Container(3530).ListItem.Artist,, • ]$INFO[Container(3530).ListItem.Album,, • ]$INFO[Container(3530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Property(StartTime))">$INFO[Container(3530).ListItem.Property(ChannelName),, • ]$INFO[Container(3530).ListItem.Property(StartTime),, - ]$INFO[Container(3530).ListItem.Property(EndTime),, • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.StartTime)">$INFO[Container(3530).ListItem.ChannelName,, • ]$INFO[Container(3530).ListItem.StartTime,, - ]$INFO[Container(3530).ListItem.EndTime,, • ]$INFO[Container(3530).ListItem.Genre]</value>
	</variable>
	<variable name="3540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3540">
		<value condition="String.Contains(Container(3540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3540).ListItem.label] $INFO[Container(3540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Title) + String.Contains(Container(3540).ListItem.FolderPath, pvr://)">$INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Season) + !String.IsEmpty(Container(3540).ListItem.Episode) + !String.Contains(Container(3540).ListItem.TvShowTitle,Container(3540).ListItem.Title)">[UPPERCASE]S$INFO[Container(3540).ListItem.Season]E$INFO[Container(3540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Title)">$INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Label)">$INFO[Container(3540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3540">
		<value condition="!String.IsEmpty(Container(3540).ListItem.TvShowTitle) + !String.IsEmpty(Container(3540).ListItem.Genre)">$INFO[Container(3540).ListItem.TvShowTitle,, • ]$INFO[Container(3540).ListItem.Year,, • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.TvShowTitle)">$INFO[Container(3540).ListItem.TvShowTitle,, • ]$INFO[Container(3540).ListItem.Premiered,, • ]$INFO[Container(3540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Year)">$INFO[Container(3540).ListItem.Year,, • ]$INFO[Container(3540).ListItem.Duration,,min. • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Artist) + !String.IsEmpty(Container(3540).ListItem.Album)">$INFO[Container(3540).ListItem.Artist,, • ]$INFO[Container(3540).ListItem.Album,, • ]$INFO[Container(3540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Property(StartTime))">$INFO[Container(3540).ListItem.Property(ChannelName),, • ]$INFO[Container(3540).ListItem.Property(StartTime),, - ]$INFO[Container(3540).ListItem.Property(EndTime),, • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.StartTime)">$INFO[Container(3540).ListItem.ChannelName,, • ]$INFO[Container(3540).ListItem.StartTime,, - ]$INFO[Container(3540).ListItem.EndTime,, • ]$INFO[Container(3540).ListItem.Genre]</value>
	</variable>
	<variable name="3550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3550">
		<value condition="String.Contains(Container(3550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3550).ListItem.label] $INFO[Container(3550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Title) + String.Contains(Container(3550).ListItem.FolderPath, pvr://)">$INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Season) + !String.IsEmpty(Container(3550).ListItem.Episode) + !String.Contains(Container(3550).ListItem.TvShowTitle,Container(3550).ListItem.Title)">[UPPERCASE]S$INFO[Container(3550).ListItem.Season]E$INFO[Container(3550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Title)">$INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Label)">$INFO[Container(3550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3550">
		<value condition="!String.IsEmpty(Container(3550).ListItem.TvShowTitle) + !String.IsEmpty(Container(3550).ListItem.Genre)">$INFO[Container(3550).ListItem.TvShowTitle,, • ]$INFO[Container(3550).ListItem.Year,, • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.TvShowTitle)">$INFO[Container(3550).ListItem.TvShowTitle,, • ]$INFO[Container(3550).ListItem.Premiered,, • ]$INFO[Container(3550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Year)">$INFO[Container(3550).ListItem.Year,, • ]$INFO[Container(3550).ListItem.Duration,,min. • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Artist) + !String.IsEmpty(Container(3550).ListItem.Album)">$INFO[Container(3550).ListItem.Artist,, • ]$INFO[Container(3550).ListItem.Album,, • ]$INFO[Container(3550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Property(StartTime))">$INFO[Container(3550).ListItem.Property(ChannelName),, • ]$INFO[Container(3550).ListItem.Property(StartTime),, - ]$INFO[Container(3550).ListItem.Property(EndTime),, • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.StartTime)">$INFO[Container(3550).ListItem.ChannelName,, • ]$INFO[Container(3550).ListItem.StartTime,, - ]$INFO[Container(3550).ListItem.EndTime,, • ]$INFO[Container(3550).ListItem.Genre]</value>
	</variable>
	<variable name="3560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3560">
		<value condition="String.Contains(Container(3560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3560).ListItem.label] $INFO[Container(3560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Title) + String.Contains(Container(3560).ListItem.FolderPath, pvr://)">$INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Season) + !String.IsEmpty(Container(3560).ListItem.Episode) + !String.Contains(Container(3560).ListItem.TvShowTitle,Container(3560).ListItem.Title)">[UPPERCASE]S$INFO[Container(3560).ListItem.Season]E$INFO[Container(3560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Title)">$INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Label)">$INFO[Container(3560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3560">
		<value condition="!String.IsEmpty(Container(3560).ListItem.TvShowTitle) + !String.IsEmpty(Container(3560).ListItem.Genre)">$INFO[Container(3560).ListItem.TvShowTitle,, • ]$INFO[Container(3560).ListItem.Year,, • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.TvShowTitle)">$INFO[Container(3560).ListItem.TvShowTitle,, • ]$INFO[Container(3560).ListItem.Premiered,, • ]$INFO[Container(3560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Year)">$INFO[Container(3560).ListItem.Year,, • ]$INFO[Container(3560).ListItem.Duration,,min. • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Artist) + !String.IsEmpty(Container(3560).ListItem.Album)">$INFO[Container(3560).ListItem.Artist,, • ]$INFO[Container(3560).ListItem.Album,, • ]$INFO[Container(3560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Property(StartTime))">$INFO[Container(3560).ListItem.Property(ChannelName),, • ]$INFO[Container(3560).ListItem.Property(StartTime),, - ]$INFO[Container(3560).ListItem.Property(EndTime),, • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.StartTime)">$INFO[Container(3560).ListItem.ChannelName,, • ]$INFO[Container(3560).ListItem.StartTime,, - ]$INFO[Container(3560).ListItem.EndTime,, • ]$INFO[Container(3560).ListItem.Genre]</value>
	</variable>
	<variable name="3570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3570">
		<value condition="String.Contains(Container(3570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3570).ListItem.label] $INFO[Container(3570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Title) + String.Contains(Container(3570).ListItem.FolderPath, pvr://)">$INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Season) + !String.IsEmpty(Container(3570).ListItem.Episode) + !String.Contains(Container(3570).ListItem.TvShowTitle,Container(3570).ListItem.Title)">[UPPERCASE]S$INFO[Container(3570).ListItem.Season]E$INFO[Container(3570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Title)">$INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Label)">$INFO[Container(3570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3570">
		<value condition="!String.IsEmpty(Container(3570).ListItem.TvShowTitle) + !String.IsEmpty(Container(3570).ListItem.Genre)">$INFO[Container(3570).ListItem.TvShowTitle,, • ]$INFO[Container(3570).ListItem.Year,, • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.TvShowTitle)">$INFO[Container(3570).ListItem.TvShowTitle,, • ]$INFO[Container(3570).ListItem.Premiered,, • ]$INFO[Container(3570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Year)">$INFO[Container(3570).ListItem.Year,, • ]$INFO[Container(3570).ListItem.Duration,,min. • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Artist) + !String.IsEmpty(Container(3570).ListItem.Album)">$INFO[Container(3570).ListItem.Artist,, • ]$INFO[Container(3570).ListItem.Album,, • ]$INFO[Container(3570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Property(StartTime))">$INFO[Container(3570).ListItem.Property(ChannelName),, • ]$INFO[Container(3570).ListItem.Property(StartTime),, - ]$INFO[Container(3570).ListItem.Property(EndTime),, • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.StartTime)">$INFO[Container(3570).ListItem.ChannelName,, • ]$INFO[Container(3570).ListItem.StartTime,, - ]$INFO[Container(3570).ListItem.EndTime,, • ]$INFO[Container(3570).ListItem.Genre]</value>
	</variable>
	<variable name="3580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3580">
		<value condition="String.Contains(Container(3580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3580).ListItem.label] $INFO[Container(3580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Title) + String.Contains(Container(3580).ListItem.FolderPath, pvr://)">$INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Season) + !String.IsEmpty(Container(3580).ListItem.Episode) + !String.Contains(Container(3580).ListItem.TvShowTitle,Container(3580).ListItem.Title)">[UPPERCASE]S$INFO[Container(3580).ListItem.Season]E$INFO[Container(3580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Title)">$INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Label)">$INFO[Container(3580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3580">
		<value condition="!String.IsEmpty(Container(3580).ListItem.TvShowTitle) + !String.IsEmpty(Container(3580).ListItem.Genre)">$INFO[Container(3580).ListItem.TvShowTitle,, • ]$INFO[Container(3580).ListItem.Year,, • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.TvShowTitle)">$INFO[Container(3580).ListItem.TvShowTitle,, • ]$INFO[Container(3580).ListItem.Premiered,, • ]$INFO[Container(3580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Year)">$INFO[Container(3580).ListItem.Year,, • ]$INFO[Container(3580).ListItem.Duration,,min. • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Artist) + !String.IsEmpty(Container(3580).ListItem.Album)">$INFO[Container(3580).ListItem.Artist,, • ]$INFO[Container(3580).ListItem.Album,, • ]$INFO[Container(3580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Property(StartTime))">$INFO[Container(3580).ListItem.Property(ChannelName),, • ]$INFO[Container(3580).ListItem.Property(StartTime),, - ]$INFO[Container(3580).ListItem.Property(EndTime),, • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.StartTime)">$INFO[Container(3580).ListItem.ChannelName,, • ]$INFO[Container(3580).ListItem.StartTime,, - ]$INFO[Container(3580).ListItem.EndTime,, • ]$INFO[Container(3580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-3">
		<value condition="Skin.String(widgetvalue-tvshows,7)" />
		<value condition="Skin.String(widgetvalue-tvshows,6)" />
		<value condition="Skin.String(widgetvalue-tvshows,5)" />
		<value condition="Skin.String(widgetvalue-tvshows,4)" />
		<value condition="Skin.String(widgetvalue-tvshows,3)" />
		<value condition="Skin.String(widgetvalue-tvshows,2)" />
		<value condition="Skin.String(widgetvalue-tvshows,1)">PlexKodiConnect - Recently Added</value>
		<value>TV On Deck</value>
	</variable>
	<variable name="4510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>musicdb://recentlyaddedalbums/</value>
	</variable>
	<variable name="widgetinfolabel-4510">
		<value condition="String.Contains(Container(4510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4510).ListItem.label] $INFO[Container(4510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Title) + String.Contains(Container(4510).ListItem.FolderPath, pvr://)">$INFO[Container(4510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Season) + !String.IsEmpty(Container(4510).ListItem.Episode) + !String.Contains(Container(4510).ListItem.TvShowTitle,Container(4510).ListItem.Title)">[UPPERCASE]S$INFO[Container(4510).ListItem.Season]E$INFO[Container(4510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Title)">$INFO[Container(4510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Label)">$INFO[Container(4510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4510">
		<value condition="!String.IsEmpty(Container(4510).ListItem.TvShowTitle) + !String.IsEmpty(Container(4510).ListItem.Genre)">$INFO[Container(4510).ListItem.TvShowTitle,, • ]$INFO[Container(4510).ListItem.Year,, • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.TvShowTitle)">$INFO[Container(4510).ListItem.TvShowTitle,, • ]$INFO[Container(4510).ListItem.Premiered,, • ]$INFO[Container(4510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Year)">$INFO[Container(4510).ListItem.Year,, • ]$INFO[Container(4510).ListItem.Duration,,min. • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Artist) + !String.IsEmpty(Container(4510).ListItem.Album)">$INFO[Container(4510).ListItem.Artist,, • ]$INFO[Container(4510).ListItem.Album,, • ]$INFO[Container(4510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Property(StartTime))">$INFO[Container(4510).ListItem.Property(ChannelName),, • ]$INFO[Container(4510).ListItem.Property(StartTime),, - ]$INFO[Container(4510).ListItem.Property(EndTime),, • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.StartTime)">$INFO[Container(4510).ListItem.ChannelName,, • ]$INFO[Container(4510).ListItem.StartTime,, - ]$INFO[Container(4510).ListItem.EndTime,, • ]$INFO[Container(4510).ListItem.Genre]</value>
	</variable>
	<variable name="4520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recentplayed&amp;mediatype=songs&amp;reload=$INFO[Window(Home).Property(widgetreload-music)]</value>
	</variable>
	<variable name="widgetinfolabel-4520">
		<value condition="String.Contains(Container(4520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4520).ListItem.label] $INFO[Container(4520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Title) + String.Contains(Container(4520).ListItem.FolderPath, pvr://)">$INFO[Container(4520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Season) + !String.IsEmpty(Container(4520).ListItem.Episode) + !String.Contains(Container(4520).ListItem.TvShowTitle,Container(4520).ListItem.Title)">[UPPERCASE]S$INFO[Container(4520).ListItem.Season]E$INFO[Container(4520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Title)">$INFO[Container(4520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Label)">$INFO[Container(4520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4520">
		<value condition="!String.IsEmpty(Container(4520).ListItem.TvShowTitle) + !String.IsEmpty(Container(4520).ListItem.Genre)">$INFO[Container(4520).ListItem.TvShowTitle,, • ]$INFO[Container(4520).ListItem.Year,, • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.TvShowTitle)">$INFO[Container(4520).ListItem.TvShowTitle,, • ]$INFO[Container(4520).ListItem.Premiered,, • ]$INFO[Container(4520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Year)">$INFO[Container(4520).ListItem.Year,, • ]$INFO[Container(4520).ListItem.Duration,,min. • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Artist) + !String.IsEmpty(Container(4520).ListItem.Album)">$INFO[Container(4520).ListItem.Artist,, • ]$INFO[Container(4520).ListItem.Album,, • ]$INFO[Container(4520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Property(StartTime))">$INFO[Container(4520).ListItem.Property(ChannelName),, • ]$INFO[Container(4520).ListItem.Property(StartTime),, - ]$INFO[Container(4520).ListItem.Property(EndTime),, • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.StartTime)">$INFO[Container(4520).ListItem.ChannelName,, • ]$INFO[Container(4520).ListItem.StartTime,, - ]$INFO[Container(4520).ListItem.EndTime,, • ]$INFO[Container(4520).ListItem.Genre]</value>
	</variable>
	<variable name="4530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4530">
		<value condition="String.Contains(Container(4530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4530).ListItem.label] $INFO[Container(4530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Title) + String.Contains(Container(4530).ListItem.FolderPath, pvr://)">$INFO[Container(4530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Season) + !String.IsEmpty(Container(4530).ListItem.Episode) + !String.Contains(Container(4530).ListItem.TvShowTitle,Container(4530).ListItem.Title)">[UPPERCASE]S$INFO[Container(4530).ListItem.Season]E$INFO[Container(4530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Title)">$INFO[Container(4530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Label)">$INFO[Container(4530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4530">
		<value condition="!String.IsEmpty(Container(4530).ListItem.TvShowTitle) + !String.IsEmpty(Container(4530).ListItem.Genre)">$INFO[Container(4530).ListItem.TvShowTitle,, • ]$INFO[Container(4530).ListItem.Year,, • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.TvShowTitle)">$INFO[Container(4530).ListItem.TvShowTitle,, • ]$INFO[Container(4530).ListItem.Premiered,, • ]$INFO[Container(4530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Year)">$INFO[Container(4530).ListItem.Year,, • ]$INFO[Container(4530).ListItem.Duration,,min. • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Artist) + !String.IsEmpty(Container(4530).ListItem.Album)">$INFO[Container(4530).ListItem.Artist,, • ]$INFO[Container(4530).ListItem.Album,, • ]$INFO[Container(4530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Property(StartTime))">$INFO[Container(4530).ListItem.Property(ChannelName),, • ]$INFO[Container(4530).ListItem.Property(StartTime),, - ]$INFO[Container(4530).ListItem.Property(EndTime),, • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.StartTime)">$INFO[Container(4530).ListItem.ChannelName,, • ]$INFO[Container(4530).ListItem.StartTime,, - ]$INFO[Container(4530).ListItem.EndTime,, • ]$INFO[Container(4530).ListItem.Genre]</value>
	</variable>
	<variable name="4540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4540">
		<value condition="String.Contains(Container(4540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4540).ListItem.label] $INFO[Container(4540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Title) + String.Contains(Container(4540).ListItem.FolderPath, pvr://)">$INFO[Container(4540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Season) + !String.IsEmpty(Container(4540).ListItem.Episode) + !String.Contains(Container(4540).ListItem.TvShowTitle,Container(4540).ListItem.Title)">[UPPERCASE]S$INFO[Container(4540).ListItem.Season]E$INFO[Container(4540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Title)">$INFO[Container(4540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Label)">$INFO[Container(4540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4540">
		<value condition="!String.IsEmpty(Container(4540).ListItem.TvShowTitle) + !String.IsEmpty(Container(4540).ListItem.Genre)">$INFO[Container(4540).ListItem.TvShowTitle,, • ]$INFO[Container(4540).ListItem.Year,, • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.TvShowTitle)">$INFO[Container(4540).ListItem.TvShowTitle,, • ]$INFO[Container(4540).ListItem.Premiered,, • ]$INFO[Container(4540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Year)">$INFO[Container(4540).ListItem.Year,, • ]$INFO[Container(4540).ListItem.Duration,,min. • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Artist) + !String.IsEmpty(Container(4540).ListItem.Album)">$INFO[Container(4540).ListItem.Artist,, • ]$INFO[Container(4540).ListItem.Album,, • ]$INFO[Container(4540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Property(StartTime))">$INFO[Container(4540).ListItem.Property(ChannelName),, • ]$INFO[Container(4540).ListItem.Property(StartTime),, - ]$INFO[Container(4540).ListItem.Property(EndTime),, • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.StartTime)">$INFO[Container(4540).ListItem.ChannelName,, • ]$INFO[Container(4540).ListItem.StartTime,, - ]$INFO[Container(4540).ListItem.EndTime,, • ]$INFO[Container(4540).ListItem.Genre]</value>
	</variable>
	<variable name="4550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4550">
		<value condition="String.Contains(Container(4550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4550).ListItem.label] $INFO[Container(4550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Title) + String.Contains(Container(4550).ListItem.FolderPath, pvr://)">$INFO[Container(4550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Season) + !String.IsEmpty(Container(4550).ListItem.Episode) + !String.Contains(Container(4550).ListItem.TvShowTitle,Container(4550).ListItem.Title)">[UPPERCASE]S$INFO[Container(4550).ListItem.Season]E$INFO[Container(4550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Title)">$INFO[Container(4550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Label)">$INFO[Container(4550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4550">
		<value condition="!String.IsEmpty(Container(4550).ListItem.TvShowTitle) + !String.IsEmpty(Container(4550).ListItem.Genre)">$INFO[Container(4550).ListItem.TvShowTitle,, • ]$INFO[Container(4550).ListItem.Year,, • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.TvShowTitle)">$INFO[Container(4550).ListItem.TvShowTitle,, • ]$INFO[Container(4550).ListItem.Premiered,, • ]$INFO[Container(4550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Year)">$INFO[Container(4550).ListItem.Year,, • ]$INFO[Container(4550).ListItem.Duration,,min. • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Artist) + !String.IsEmpty(Container(4550).ListItem.Album)">$INFO[Container(4550).ListItem.Artist,, • ]$INFO[Container(4550).ListItem.Album,, • ]$INFO[Container(4550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Property(StartTime))">$INFO[Container(4550).ListItem.Property(ChannelName),, • ]$INFO[Container(4550).ListItem.Property(StartTime),, - ]$INFO[Container(4550).ListItem.Property(EndTime),, • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.StartTime)">$INFO[Container(4550).ListItem.ChannelName,, • ]$INFO[Container(4550).ListItem.StartTime,, - ]$INFO[Container(4550).ListItem.EndTime,, • ]$INFO[Container(4550).ListItem.Genre]</value>
	</variable>
	<variable name="4560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4560">
		<value condition="String.Contains(Container(4560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4560).ListItem.label] $INFO[Container(4560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Title) + String.Contains(Container(4560).ListItem.FolderPath, pvr://)">$INFO[Container(4560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Season) + !String.IsEmpty(Container(4560).ListItem.Episode) + !String.Contains(Container(4560).ListItem.TvShowTitle,Container(4560).ListItem.Title)">[UPPERCASE]S$INFO[Container(4560).ListItem.Season]E$INFO[Container(4560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Title)">$INFO[Container(4560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Label)">$INFO[Container(4560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4560">
		<value condition="!String.IsEmpty(Container(4560).ListItem.TvShowTitle) + !String.IsEmpty(Container(4560).ListItem.Genre)">$INFO[Container(4560).ListItem.TvShowTitle,, • ]$INFO[Container(4560).ListItem.Year,, • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.TvShowTitle)">$INFO[Container(4560).ListItem.TvShowTitle,, • ]$INFO[Container(4560).ListItem.Premiered,, • ]$INFO[Container(4560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Year)">$INFO[Container(4560).ListItem.Year,, • ]$INFO[Container(4560).ListItem.Duration,,min. • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Artist) + !String.IsEmpty(Container(4560).ListItem.Album)">$INFO[Container(4560).ListItem.Artist,, • ]$INFO[Container(4560).ListItem.Album,, • ]$INFO[Container(4560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Property(StartTime))">$INFO[Container(4560).ListItem.Property(ChannelName),, • ]$INFO[Container(4560).ListItem.Property(StartTime),, - ]$INFO[Container(4560).ListItem.Property(EndTime),, • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.StartTime)">$INFO[Container(4560).ListItem.ChannelName,, • ]$INFO[Container(4560).ListItem.StartTime,, - ]$INFO[Container(4560).ListItem.EndTime,, • ]$INFO[Container(4560).ListItem.Genre]</value>
	</variable>
	<variable name="4570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4570">
		<value condition="String.Contains(Container(4570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4570).ListItem.label] $INFO[Container(4570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Title) + String.Contains(Container(4570).ListItem.FolderPath, pvr://)">$INFO[Container(4570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Season) + !String.IsEmpty(Container(4570).ListItem.Episode) + !String.Contains(Container(4570).ListItem.TvShowTitle,Container(4570).ListItem.Title)">[UPPERCASE]S$INFO[Container(4570).ListItem.Season]E$INFO[Container(4570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Title)">$INFO[Container(4570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Label)">$INFO[Container(4570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4570">
		<value condition="!String.IsEmpty(Container(4570).ListItem.TvShowTitle) + !String.IsEmpty(Container(4570).ListItem.Genre)">$INFO[Container(4570).ListItem.TvShowTitle,, • ]$INFO[Container(4570).ListItem.Year,, • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.TvShowTitle)">$INFO[Container(4570).ListItem.TvShowTitle,, • ]$INFO[Container(4570).ListItem.Premiered,, • ]$INFO[Container(4570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Year)">$INFO[Container(4570).ListItem.Year,, • ]$INFO[Container(4570).ListItem.Duration,,min. • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Artist) + !String.IsEmpty(Container(4570).ListItem.Album)">$INFO[Container(4570).ListItem.Artist,, • ]$INFO[Container(4570).ListItem.Album,, • ]$INFO[Container(4570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Property(StartTime))">$INFO[Container(4570).ListItem.Property(ChannelName),, • ]$INFO[Container(4570).ListItem.Property(StartTime),, - ]$INFO[Container(4570).ListItem.Property(EndTime),, • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.StartTime)">$INFO[Container(4570).ListItem.ChannelName,, • ]$INFO[Container(4570).ListItem.StartTime,, - ]$INFO[Container(4570).ListItem.EndTime,, • ]$INFO[Container(4570).ListItem.Genre]</value>
	</variable>
	<variable name="4580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4580">
		<value condition="String.Contains(Container(4580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4580).ListItem.label] $INFO[Container(4580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Title) + String.Contains(Container(4580).ListItem.FolderPath, pvr://)">$INFO[Container(4580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Season) + !String.IsEmpty(Container(4580).ListItem.Episode) + !String.Contains(Container(4580).ListItem.TvShowTitle,Container(4580).ListItem.Title)">[UPPERCASE]S$INFO[Container(4580).ListItem.Season]E$INFO[Container(4580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Title)">$INFO[Container(4580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Label)">$INFO[Container(4580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4580">
		<value condition="!String.IsEmpty(Container(4580).ListItem.TvShowTitle) + !String.IsEmpty(Container(4580).ListItem.Genre)">$INFO[Container(4580).ListItem.TvShowTitle,, • ]$INFO[Container(4580).ListItem.Year,, • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.TvShowTitle)">$INFO[Container(4580).ListItem.TvShowTitle,, • ]$INFO[Container(4580).ListItem.Premiered,, • ]$INFO[Container(4580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Year)">$INFO[Container(4580).ListItem.Year,, • ]$INFO[Container(4580).ListItem.Duration,,min. • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Artist) + !String.IsEmpty(Container(4580).ListItem.Album)">$INFO[Container(4580).ListItem.Artist,, • ]$INFO[Container(4580).ListItem.Album,, • ]$INFO[Container(4580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Property(StartTime))">$INFO[Container(4580).ListItem.Property(ChannelName),, • ]$INFO[Container(4580).ListItem.Property(StartTime),, - ]$INFO[Container(4580).ListItem.Property(EndTime),, • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.StartTime)">$INFO[Container(4580).ListItem.ChannelName,, • ]$INFO[Container(4580).ListItem.StartTime,, - ]$INFO[Container(4580).ListItem.EndTime,, • ]$INFO[Container(4580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-4">
		<value condition="Skin.String(widgetvalue-music,7)" />
		<value condition="Skin.String(widgetvalue-music,6)" />
		<value condition="Skin.String(widgetvalue-music,5)" />
		<value condition="Skin.String(widgetvalue-music,4)" />
		<value condition="Skin.String(widgetvalue-music,3)" />
		<value condition="Skin.String(widgetvalue-music,2)" />
		<value condition="Skin.String(widgetvalue-music,1)">Recently Played Songs</value>
		<value>Recently Added Albums</value>
	</variable>
	<variable name="5510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-9/9_recent.xml/</value>
	</variable>
	<variable name="widgetinfolabel-5510">
		<value condition="String.Contains(Container(5510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5510).ListItem.label] $INFO[Container(5510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Title) + String.Contains(Container(5510).ListItem.FolderPath, pvr://)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Season) + !String.IsEmpty(Container(5510).ListItem.Episode) + !String.Contains(Container(5510).ListItem.TvShowTitle,Container(5510).ListItem.Title)">[UPPERCASE]S$INFO[Container(5510).ListItem.Season]E$INFO[Container(5510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Title)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Label)">$INFO[Container(5510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5510">
		<value condition="!String.IsEmpty(Container(5510).ListItem.TvShowTitle) + !String.IsEmpty(Container(5510).ListItem.Genre)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.TvShowTitle)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Premiered,, • ]$INFO[Container(5510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Year)">$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Duration,,min. • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Artist) + !String.IsEmpty(Container(5510).ListItem.Album)">$INFO[Container(5510).ListItem.Artist,, • ]$INFO[Container(5510).ListItem.Album,, • ]$INFO[Container(5510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Property(StartTime))">$INFO[Container(5510).ListItem.Property(ChannelName),, • ]$INFO[Container(5510).ListItem.Property(StartTime),, - ]$INFO[Container(5510).ListItem.Property(EndTime),, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.StartTime)">$INFO[Container(5510).ListItem.ChannelName,, • ]$INFO[Container(5510).ListItem.StartTime,, - ]$INFO[Container(5510).ListItem.EndTime,, • ]$INFO[Container(5510).ListItem.Genre]</value>
	</variable>
	<variable name="5520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-9/9_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-5520">
		<value condition="String.Contains(Container(5520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5520).ListItem.label] $INFO[Container(5520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Title) + String.Contains(Container(5520).ListItem.FolderPath, pvr://)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Season) + !String.IsEmpty(Container(5520).ListItem.Episode) + !String.Contains(Container(5520).ListItem.TvShowTitle,Container(5520).ListItem.Title)">[UPPERCASE]S$INFO[Container(5520).ListItem.Season]E$INFO[Container(5520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Title)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Label)">$INFO[Container(5520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5520">
		<value condition="!String.IsEmpty(Container(5520).ListItem.TvShowTitle) + !String.IsEmpty(Container(5520).ListItem.Genre)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.TvShowTitle)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Premiered,, • ]$INFO[Container(5520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Year)">$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Duration,,min. • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Artist) + !String.IsEmpty(Container(5520).ListItem.Album)">$INFO[Container(5520).ListItem.Artist,, • ]$INFO[Container(5520).ListItem.Album,, • ]$INFO[Container(5520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Property(StartTime))">$INFO[Container(5520).ListItem.Property(ChannelName),, • ]$INFO[Container(5520).ListItem.Property(StartTime),, - ]$INFO[Container(5520).ListItem.Property(EndTime),, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.StartTime)">$INFO[Container(5520).ListItem.ChannelName,, • ]$INFO[Container(5520).ListItem.StartTime,, - ]$INFO[Container(5520).ListItem.EndTime,, • ]$INFO[Container(5520).ListItem.Genre]</value>
	</variable>
	<variable name="5530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5530">
		<value condition="String.Contains(Container(5530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5530).ListItem.label] $INFO[Container(5530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Title) + String.Contains(Container(5530).ListItem.FolderPath, pvr://)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Season) + !String.IsEmpty(Container(5530).ListItem.Episode) + !String.Contains(Container(5530).ListItem.TvShowTitle,Container(5530).ListItem.Title)">[UPPERCASE]S$INFO[Container(5530).ListItem.Season]E$INFO[Container(5530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Title)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Label)">$INFO[Container(5530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5530">
		<value condition="!String.IsEmpty(Container(5530).ListItem.TvShowTitle) + !String.IsEmpty(Container(5530).ListItem.Genre)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.TvShowTitle)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Premiered,, • ]$INFO[Container(5530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Year)">$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Duration,,min. • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Artist) + !String.IsEmpty(Container(5530).ListItem.Album)">$INFO[Container(5530).ListItem.Artist,, • ]$INFO[Container(5530).ListItem.Album,, • ]$INFO[Container(5530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Property(StartTime))">$INFO[Container(5530).ListItem.Property(ChannelName),, • ]$INFO[Container(5530).ListItem.Property(StartTime),, - ]$INFO[Container(5530).ListItem.Property(EndTime),, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.StartTime)">$INFO[Container(5530).ListItem.ChannelName,, • ]$INFO[Container(5530).ListItem.StartTime,, - ]$INFO[Container(5530).ListItem.EndTime,, • ]$INFO[Container(5530).ListItem.Genre]</value>
	</variable>
	<variable name="5540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5540">
		<value condition="String.Contains(Container(5540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5540).ListItem.label] $INFO[Container(5540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Title) + String.Contains(Container(5540).ListItem.FolderPath, pvr://)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Season) + !String.IsEmpty(Container(5540).ListItem.Episode) + !String.Contains(Container(5540).ListItem.TvShowTitle,Container(5540).ListItem.Title)">[UPPERCASE]S$INFO[Container(5540).ListItem.Season]E$INFO[Container(5540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Title)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Label)">$INFO[Container(5540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5540">
		<value condition="!String.IsEmpty(Container(5540).ListItem.TvShowTitle) + !String.IsEmpty(Container(5540).ListItem.Genre)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.TvShowTitle)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Premiered,, • ]$INFO[Container(5540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Year)">$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Duration,,min. • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Artist) + !String.IsEmpty(Container(5540).ListItem.Album)">$INFO[Container(5540).ListItem.Artist,, • ]$INFO[Container(5540).ListItem.Album,, • ]$INFO[Container(5540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Property(StartTime))">$INFO[Container(5540).ListItem.Property(ChannelName),, • ]$INFO[Container(5540).ListItem.Property(StartTime),, - ]$INFO[Container(5540).ListItem.Property(EndTime),, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.StartTime)">$INFO[Container(5540).ListItem.ChannelName,, • ]$INFO[Container(5540).ListItem.StartTime,, - ]$INFO[Container(5540).ListItem.EndTime,, • ]$INFO[Container(5540).ListItem.Genre]</value>
	</variable>
	<variable name="5550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5550">
		<value condition="String.Contains(Container(5550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5550).ListItem.label] $INFO[Container(5550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Title) + String.Contains(Container(5550).ListItem.FolderPath, pvr://)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Season) + !String.IsEmpty(Container(5550).ListItem.Episode) + !String.Contains(Container(5550).ListItem.TvShowTitle,Container(5550).ListItem.Title)">[UPPERCASE]S$INFO[Container(5550).ListItem.Season]E$INFO[Container(5550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Title)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Label)">$INFO[Container(5550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5550">
		<value condition="!String.IsEmpty(Container(5550).ListItem.TvShowTitle) + !String.IsEmpty(Container(5550).ListItem.Genre)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.TvShowTitle)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Premiered,, • ]$INFO[Container(5550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Year)">$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Duration,,min. • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Artist) + !String.IsEmpty(Container(5550).ListItem.Album)">$INFO[Container(5550).ListItem.Artist,, • ]$INFO[Container(5550).ListItem.Album,, • ]$INFO[Container(5550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Property(StartTime))">$INFO[Container(5550).ListItem.Property(ChannelName),, • ]$INFO[Container(5550).ListItem.Property(StartTime),, - ]$INFO[Container(5550).ListItem.Property(EndTime),, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.StartTime)">$INFO[Container(5550).ListItem.ChannelName,, • ]$INFO[Container(5550).ListItem.StartTime,, - ]$INFO[Container(5550).ListItem.EndTime,, • ]$INFO[Container(5550).ListItem.Genre]</value>
	</variable>
	<variable name="5560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5560">
		<value condition="String.Contains(Container(5560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5560).ListItem.label] $INFO[Container(5560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Title) + String.Contains(Container(5560).ListItem.FolderPath, pvr://)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Season) + !String.IsEmpty(Container(5560).ListItem.Episode) + !String.Contains(Container(5560).ListItem.TvShowTitle,Container(5560).ListItem.Title)">[UPPERCASE]S$INFO[Container(5560).ListItem.Season]E$INFO[Container(5560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Title)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Label)">$INFO[Container(5560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5560">
		<value condition="!String.IsEmpty(Container(5560).ListItem.TvShowTitle) + !String.IsEmpty(Container(5560).ListItem.Genre)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.TvShowTitle)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Premiered,, • ]$INFO[Container(5560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Year)">$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Duration,,min. • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Artist) + !String.IsEmpty(Container(5560).ListItem.Album)">$INFO[Container(5560).ListItem.Artist,, • ]$INFO[Container(5560).ListItem.Album,, • ]$INFO[Container(5560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Property(StartTime))">$INFO[Container(5560).ListItem.Property(ChannelName),, • ]$INFO[Container(5560).ListItem.Property(StartTime),, - ]$INFO[Container(5560).ListItem.Property(EndTime),, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.StartTime)">$INFO[Container(5560).ListItem.ChannelName,, • ]$INFO[Container(5560).ListItem.StartTime,, - ]$INFO[Container(5560).ListItem.EndTime,, • ]$INFO[Container(5560).ListItem.Genre]</value>
	</variable>
	<variable name="5570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5570">
		<value condition="String.Contains(Container(5570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5570).ListItem.label] $INFO[Container(5570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Title) + String.Contains(Container(5570).ListItem.FolderPath, pvr://)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Season) + !String.IsEmpty(Container(5570).ListItem.Episode) + !String.Contains(Container(5570).ListItem.TvShowTitle,Container(5570).ListItem.Title)">[UPPERCASE]S$INFO[Container(5570).ListItem.Season]E$INFO[Container(5570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Title)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Label)">$INFO[Container(5570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5570">
		<value condition="!String.IsEmpty(Container(5570).ListItem.TvShowTitle) + !String.IsEmpty(Container(5570).ListItem.Genre)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.TvShowTitle)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Premiered,, • ]$INFO[Container(5570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Year)">$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Duration,,min. • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Artist) + !String.IsEmpty(Container(5570).ListItem.Album)">$INFO[Container(5570).ListItem.Artist,, • ]$INFO[Container(5570).ListItem.Album,, • ]$INFO[Container(5570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Property(StartTime))">$INFO[Container(5570).ListItem.Property(ChannelName),, • ]$INFO[Container(5570).ListItem.Property(StartTime),, - ]$INFO[Container(5570).ListItem.Property(EndTime),, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.StartTime)">$INFO[Container(5570).ListItem.ChannelName,, • ]$INFO[Container(5570).ListItem.StartTime,, - ]$INFO[Container(5570).ListItem.EndTime,, • ]$INFO[Container(5570).ListItem.Genre]</value>
	</variable>
	<variable name="5580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5580">
		<value condition="String.Contains(Container(5580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5580).ListItem.label] $INFO[Container(5580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Title) + String.Contains(Container(5580).ListItem.FolderPath, pvr://)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Season) + !String.IsEmpty(Container(5580).ListItem.Episode) + !String.Contains(Container(5580).ListItem.TvShowTitle,Container(5580).ListItem.Title)">[UPPERCASE]S$INFO[Container(5580).ListItem.Season]E$INFO[Container(5580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Title)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Label)">$INFO[Container(5580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5580">
		<value condition="!String.IsEmpty(Container(5580).ListItem.TvShowTitle) + !String.IsEmpty(Container(5580).ListItem.Genre)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.TvShowTitle)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Premiered,, • ]$INFO[Container(5580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Year)">$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Duration,,min. • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Artist) + !String.IsEmpty(Container(5580).ListItem.Album)">$INFO[Container(5580).ListItem.Artist,, • ]$INFO[Container(5580).ListItem.Album,, • ]$INFO[Container(5580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Property(StartTime))">$INFO[Container(5580).ListItem.Property(ChannelName),, • ]$INFO[Container(5580).ListItem.Property(StartTime),, - ]$INFO[Container(5580).ListItem.Property(EndTime),, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.StartTime)">$INFO[Container(5580).ListItem.ChannelName,, • ]$INFO[Container(5580).ListItem.StartTime,, - ]$INFO[Container(5580).ListItem.EndTime,, • ]$INFO[Container(5580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-5">
		<value condition="Skin.String(widgetvalue-documentaries,7)" />
		<value condition="Skin.String(widgetvalue-documentaries,6)" />
		<value condition="Skin.String(widgetvalue-documentaries,5)" />
		<value condition="Skin.String(widgetvalue-documentaries,4)" />
		<value condition="Skin.String(widgetvalue-documentaries,3)" />
		<value condition="Skin.String(widgetvalue-documentaries,2)" />
		<value condition="Skin.String(widgetvalue-documentaries,1)">Documentaries - On Deck</value>
		<value>Documentaries - Recently Added</value>
	</variable>
	<variable name="6510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-10/10_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-6510">
		<value condition="String.Contains(Container(6510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6510).ListItem.label] $INFO[Container(6510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Title) + String.Contains(Container(6510).ListItem.FolderPath, pvr://)">$INFO[Container(6510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Season) + !String.IsEmpty(Container(6510).ListItem.Episode) + !String.Contains(Container(6510).ListItem.TvShowTitle,Container(6510).ListItem.Title)">[UPPERCASE]S$INFO[Container(6510).ListItem.Season]E$INFO[Container(6510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Title)">$INFO[Container(6510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Label)">$INFO[Container(6510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6510">
		<value condition="!String.IsEmpty(Container(6510).ListItem.TvShowTitle) + !String.IsEmpty(Container(6510).ListItem.Genre)">$INFO[Container(6510).ListItem.TvShowTitle,, • ]$INFO[Container(6510).ListItem.Year,, • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.TvShowTitle)">$INFO[Container(6510).ListItem.TvShowTitle,, • ]$INFO[Container(6510).ListItem.Premiered,, • ]$INFO[Container(6510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Year)">$INFO[Container(6510).ListItem.Year,, • ]$INFO[Container(6510).ListItem.Duration,,min. • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Artist) + !String.IsEmpty(Container(6510).ListItem.Album)">$INFO[Container(6510).ListItem.Artist,, • ]$INFO[Container(6510).ListItem.Album,, • ]$INFO[Container(6510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Property(StartTime))">$INFO[Container(6510).ListItem.Property(ChannelName),, • ]$INFO[Container(6510).ListItem.Property(StartTime),, - ]$INFO[Container(6510).ListItem.Property(EndTime),, • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.StartTime)">$INFO[Container(6510).ListItem.ChannelName,, • ]$INFO[Container(6510).ListItem.StartTime,, - ]$INFO[Container(6510).ListItem.EndTime,, • ]$INFO[Container(6510).ListItem.Genre]</value>
	</variable>
	<variable name="6520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-10/10_recentepisodes.xml/</value>
	</variable>
	<variable name="widgetinfolabel-6520">
		<value condition="String.Contains(Container(6520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6520).ListItem.label] $INFO[Container(6520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Title) + String.Contains(Container(6520).ListItem.FolderPath, pvr://)">$INFO[Container(6520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Season) + !String.IsEmpty(Container(6520).ListItem.Episode) + !String.Contains(Container(6520).ListItem.TvShowTitle,Container(6520).ListItem.Title)">[UPPERCASE]S$INFO[Container(6520).ListItem.Season]E$INFO[Container(6520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Title)">$INFO[Container(6520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Label)">$INFO[Container(6520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6520">
		<value condition="!String.IsEmpty(Container(6520).ListItem.TvShowTitle) + !String.IsEmpty(Container(6520).ListItem.Genre)">$INFO[Container(6520).ListItem.TvShowTitle,, • ]$INFO[Container(6520).ListItem.Year,, • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.TvShowTitle)">$INFO[Container(6520).ListItem.TvShowTitle,, • ]$INFO[Container(6520).ListItem.Premiered,, • ]$INFO[Container(6520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Year)">$INFO[Container(6520).ListItem.Year,, • ]$INFO[Container(6520).ListItem.Duration,,min. • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Artist) + !String.IsEmpty(Container(6520).ListItem.Album)">$INFO[Container(6520).ListItem.Artist,, • ]$INFO[Container(6520).ListItem.Album,, • ]$INFO[Container(6520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Property(StartTime))">$INFO[Container(6520).ListItem.Property(ChannelName),, • ]$INFO[Container(6520).ListItem.Property(StartTime),, - ]$INFO[Container(6520).ListItem.Property(EndTime),, • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.StartTime)">$INFO[Container(6520).ListItem.ChannelName,, • ]$INFO[Container(6520).ListItem.StartTime,, - ]$INFO[Container(6520).ListItem.EndTime,, • ]$INFO[Container(6520).ListItem.Genre]</value>
	</variable>
	<variable name="6530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6530">
		<value condition="String.Contains(Container(6530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6530).ListItem.label] $INFO[Container(6530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Title) + String.Contains(Container(6530).ListItem.FolderPath, pvr://)">$INFO[Container(6530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Season) + !String.IsEmpty(Container(6530).ListItem.Episode) + !String.Contains(Container(6530).ListItem.TvShowTitle,Container(6530).ListItem.Title)">[UPPERCASE]S$INFO[Container(6530).ListItem.Season]E$INFO[Container(6530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Title)">$INFO[Container(6530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Label)">$INFO[Container(6530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6530">
		<value condition="!String.IsEmpty(Container(6530).ListItem.TvShowTitle) + !String.IsEmpty(Container(6530).ListItem.Genre)">$INFO[Container(6530).ListItem.TvShowTitle,, • ]$INFO[Container(6530).ListItem.Year,, • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.TvShowTitle)">$INFO[Container(6530).ListItem.TvShowTitle,, • ]$INFO[Container(6530).ListItem.Premiered,, • ]$INFO[Container(6530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Year)">$INFO[Container(6530).ListItem.Year,, • ]$INFO[Container(6530).ListItem.Duration,,min. • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Artist) + !String.IsEmpty(Container(6530).ListItem.Album)">$INFO[Container(6530).ListItem.Artist,, • ]$INFO[Container(6530).ListItem.Album,, • ]$INFO[Container(6530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Property(StartTime))">$INFO[Container(6530).ListItem.Property(ChannelName),, • ]$INFO[Container(6530).ListItem.Property(StartTime),, - ]$INFO[Container(6530).ListItem.Property(EndTime),, • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.StartTime)">$INFO[Container(6530).ListItem.ChannelName,, • ]$INFO[Container(6530).ListItem.StartTime,, - ]$INFO[Container(6530).ListItem.EndTime,, • ]$INFO[Container(6530).ListItem.Genre]</value>
	</variable>
	<variable name="6540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6540">
		<value condition="String.Contains(Container(6540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6540).ListItem.label] $INFO[Container(6540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Title) + String.Contains(Container(6540).ListItem.FolderPath, pvr://)">$INFO[Container(6540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Season) + !String.IsEmpty(Container(6540).ListItem.Episode) + !String.Contains(Container(6540).ListItem.TvShowTitle,Container(6540).ListItem.Title)">[UPPERCASE]S$INFO[Container(6540).ListItem.Season]E$INFO[Container(6540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Title)">$INFO[Container(6540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Label)">$INFO[Container(6540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6540">
		<value condition="!String.IsEmpty(Container(6540).ListItem.TvShowTitle) + !String.IsEmpty(Container(6540).ListItem.Genre)">$INFO[Container(6540).ListItem.TvShowTitle,, • ]$INFO[Container(6540).ListItem.Year,, • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.TvShowTitle)">$INFO[Container(6540).ListItem.TvShowTitle,, • ]$INFO[Container(6540).ListItem.Premiered,, • ]$INFO[Container(6540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Year)">$INFO[Container(6540).ListItem.Year,, • ]$INFO[Container(6540).ListItem.Duration,,min. • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Artist) + !String.IsEmpty(Container(6540).ListItem.Album)">$INFO[Container(6540).ListItem.Artist,, • ]$INFO[Container(6540).ListItem.Album,, • ]$INFO[Container(6540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Property(StartTime))">$INFO[Container(6540).ListItem.Property(ChannelName),, • ]$INFO[Container(6540).ListItem.Property(StartTime),, - ]$INFO[Container(6540).ListItem.Property(EndTime),, • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.StartTime)">$INFO[Container(6540).ListItem.ChannelName,, • ]$INFO[Container(6540).ListItem.StartTime,, - ]$INFO[Container(6540).ListItem.EndTime,, • ]$INFO[Container(6540).ListItem.Genre]</value>
	</variable>
	<variable name="6550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6550">
		<value condition="String.Contains(Container(6550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6550).ListItem.label] $INFO[Container(6550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Title) + String.Contains(Container(6550).ListItem.FolderPath, pvr://)">$INFO[Container(6550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Season) + !String.IsEmpty(Container(6550).ListItem.Episode) + !String.Contains(Container(6550).ListItem.TvShowTitle,Container(6550).ListItem.Title)">[UPPERCASE]S$INFO[Container(6550).ListItem.Season]E$INFO[Container(6550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Title)">$INFO[Container(6550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Label)">$INFO[Container(6550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6550">
		<value condition="!String.IsEmpty(Container(6550).ListItem.TvShowTitle) + !String.IsEmpty(Container(6550).ListItem.Genre)">$INFO[Container(6550).ListItem.TvShowTitle,, • ]$INFO[Container(6550).ListItem.Year,, • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.TvShowTitle)">$INFO[Container(6550).ListItem.TvShowTitle,, • ]$INFO[Container(6550).ListItem.Premiered,, • ]$INFO[Container(6550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Year)">$INFO[Container(6550).ListItem.Year,, • ]$INFO[Container(6550).ListItem.Duration,,min. • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Artist) + !String.IsEmpty(Container(6550).ListItem.Album)">$INFO[Container(6550).ListItem.Artist,, • ]$INFO[Container(6550).ListItem.Album,, • ]$INFO[Container(6550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Property(StartTime))">$INFO[Container(6550).ListItem.Property(ChannelName),, • ]$INFO[Container(6550).ListItem.Property(StartTime),, - ]$INFO[Container(6550).ListItem.Property(EndTime),, • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.StartTime)">$INFO[Container(6550).ListItem.ChannelName,, • ]$INFO[Container(6550).ListItem.StartTime,, - ]$INFO[Container(6550).ListItem.EndTime,, • ]$INFO[Container(6550).ListItem.Genre]</value>
	</variable>
	<variable name="6560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6560">
		<value condition="String.Contains(Container(6560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6560).ListItem.label] $INFO[Container(6560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Title) + String.Contains(Container(6560).ListItem.FolderPath, pvr://)">$INFO[Container(6560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Season) + !String.IsEmpty(Container(6560).ListItem.Episode) + !String.Contains(Container(6560).ListItem.TvShowTitle,Container(6560).ListItem.Title)">[UPPERCASE]S$INFO[Container(6560).ListItem.Season]E$INFO[Container(6560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Title)">$INFO[Container(6560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Label)">$INFO[Container(6560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6560">
		<value condition="!String.IsEmpty(Container(6560).ListItem.TvShowTitle) + !String.IsEmpty(Container(6560).ListItem.Genre)">$INFO[Container(6560).ListItem.TvShowTitle,, • ]$INFO[Container(6560).ListItem.Year,, • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.TvShowTitle)">$INFO[Container(6560).ListItem.TvShowTitle,, • ]$INFO[Container(6560).ListItem.Premiered,, • ]$INFO[Container(6560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Year)">$INFO[Container(6560).ListItem.Year,, • ]$INFO[Container(6560).ListItem.Duration,,min. • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Artist) + !String.IsEmpty(Container(6560).ListItem.Album)">$INFO[Container(6560).ListItem.Artist,, • ]$INFO[Container(6560).ListItem.Album,, • ]$INFO[Container(6560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Property(StartTime))">$INFO[Container(6560).ListItem.Property(ChannelName),, • ]$INFO[Container(6560).ListItem.Property(StartTime),, - ]$INFO[Container(6560).ListItem.Property(EndTime),, • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.StartTime)">$INFO[Container(6560).ListItem.ChannelName,, • ]$INFO[Container(6560).ListItem.StartTime,, - ]$INFO[Container(6560).ListItem.EndTime,, • ]$INFO[Container(6560).ListItem.Genre]</value>
	</variable>
	<variable name="6570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6570">
		<value condition="String.Contains(Container(6570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6570).ListItem.label] $INFO[Container(6570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Title) + String.Contains(Container(6570).ListItem.FolderPath, pvr://)">$INFO[Container(6570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Season) + !String.IsEmpty(Container(6570).ListItem.Episode) + !String.Contains(Container(6570).ListItem.TvShowTitle,Container(6570).ListItem.Title)">[UPPERCASE]S$INFO[Container(6570).ListItem.Season]E$INFO[Container(6570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Title)">$INFO[Container(6570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Label)">$INFO[Container(6570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6570">
		<value condition="!String.IsEmpty(Container(6570).ListItem.TvShowTitle) + !String.IsEmpty(Container(6570).ListItem.Genre)">$INFO[Container(6570).ListItem.TvShowTitle,, • ]$INFO[Container(6570).ListItem.Year,, • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.TvShowTitle)">$INFO[Container(6570).ListItem.TvShowTitle,, • ]$INFO[Container(6570).ListItem.Premiered,, • ]$INFO[Container(6570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Year)">$INFO[Container(6570).ListItem.Year,, • ]$INFO[Container(6570).ListItem.Duration,,min. • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Artist) + !String.IsEmpty(Container(6570).ListItem.Album)">$INFO[Container(6570).ListItem.Artist,, • ]$INFO[Container(6570).ListItem.Album,, • ]$INFO[Container(6570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Property(StartTime))">$INFO[Container(6570).ListItem.Property(ChannelName),, • ]$INFO[Container(6570).ListItem.Property(StartTime),, - ]$INFO[Container(6570).ListItem.Property(EndTime),, • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.StartTime)">$INFO[Container(6570).ListItem.ChannelName,, • ]$INFO[Container(6570).ListItem.StartTime,, - ]$INFO[Container(6570).ListItem.EndTime,, • ]$INFO[Container(6570).ListItem.Genre]</value>
	</variable>
	<variable name="6580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6580">
		<value condition="String.Contains(Container(6580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6580).ListItem.label] $INFO[Container(6580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Title) + String.Contains(Container(6580).ListItem.FolderPath, pvr://)">$INFO[Container(6580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Season) + !String.IsEmpty(Container(6580).ListItem.Episode) + !String.Contains(Container(6580).ListItem.TvShowTitle,Container(6580).ListItem.Title)">[UPPERCASE]S$INFO[Container(6580).ListItem.Season]E$INFO[Container(6580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Title)">$INFO[Container(6580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Label)">$INFO[Container(6580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6580">
		<value condition="!String.IsEmpty(Container(6580).ListItem.TvShowTitle) + !String.IsEmpty(Container(6580).ListItem.Genre)">$INFO[Container(6580).ListItem.TvShowTitle,, • ]$INFO[Container(6580).ListItem.Year,, • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.TvShowTitle)">$INFO[Container(6580).ListItem.TvShowTitle,, • ]$INFO[Container(6580).ListItem.Premiered,, • ]$INFO[Container(6580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Year)">$INFO[Container(6580).ListItem.Year,, • ]$INFO[Container(6580).ListItem.Duration,,min. • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Artist) + !String.IsEmpty(Container(6580).ListItem.Album)">$INFO[Container(6580).ListItem.Artist,, • ]$INFO[Container(6580).ListItem.Album,, • ]$INFO[Container(6580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Property(StartTime))">$INFO[Container(6580).ListItem.Property(ChannelName),, • ]$INFO[Container(6580).ListItem.Property(StartTime),, - ]$INFO[Container(6580).ListItem.Property(EndTime),, • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.StartTime)">$INFO[Container(6580).ListItem.ChannelName,, • ]$INFO[Container(6580).ListItem.StartTime,, - ]$INFO[Container(6580).ListItem.EndTime,, • ]$INFO[Container(6580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-6">
		<value condition="Skin.String(widgetvalue-docutvseries,7)" />
		<value condition="Skin.String(widgetvalue-docutvseries,6)" />
		<value condition="Skin.String(widgetvalue-docutvseries,5)" />
		<value condition="Skin.String(widgetvalue-docutvseries,4)" />
		<value condition="Skin.String(widgetvalue-docutvseries,3)" />
		<value condition="Skin.String(widgetvalue-docutvseries,2)" />
		<value condition="Skin.String(widgetvalue-docutvseries,1)">Recently Added Docu TV Episodes</value>
		<value>Docu TV On Deck</value>
	</variable>
	<variable name="7510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-8/8_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-7510">
		<value condition="String.Contains(Container(7510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7510).ListItem.label] $INFO[Container(7510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(7510).ListItem.Title) + String.Contains(Container(7510).ListItem.FolderPath, pvr://)">$INFO[Container(7510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7510).ListItem.Season) + !String.IsEmpty(Container(7510).ListItem.Episode) + !String.Contains(Container(7510).ListItem.TvShowTitle,Container(7510).ListItem.Title)">[UPPERCASE]S$INFO[Container(7510).ListItem.Season]E$INFO[Container(7510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7510).ListItem.Title)">$INFO[Container(7510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7510).ListItem.Label)">$INFO[Container(7510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7510">
		<value condition="!String.IsEmpty(Container(7510).ListItem.TvShowTitle) + !String.IsEmpty(Container(7510).ListItem.Genre)">$INFO[Container(7510).ListItem.TvShowTitle,, • ]$INFO[Container(7510).ListItem.Year,, • ]$INFO[Container(7510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7510).ListItem.TvShowTitle)">$INFO[Container(7510).ListItem.TvShowTitle,, • ]$INFO[Container(7510).ListItem.Premiered,, • ]$INFO[Container(7510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(7510).ListItem.Year)">$INFO[Container(7510).ListItem.Year,, • ]$INFO[Container(7510).ListItem.Duration,,min. • ]$INFO[Container(7510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7510).ListItem.Artist) + !String.IsEmpty(Container(7510).ListItem.Album)">$INFO[Container(7510).ListItem.Artist,, • ]$INFO[Container(7510).ListItem.Album,, • ]$INFO[Container(7510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(7510).ListItem.Property(StartTime))">$INFO[Container(7510).ListItem.Property(ChannelName),, • ]$INFO[Container(7510).ListItem.Property(StartTime),, - ]$INFO[Container(7510).ListItem.Property(EndTime),, • ]$INFO[Container(7510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7510).ListItem.StartTime)">$INFO[Container(7510).ListItem.ChannelName,, • ]$INFO[Container(7510).ListItem.StartTime,, - ]$INFO[Container(7510).ListItem.EndTime,, • ]$INFO[Container(7510).ListItem.Genre]</value>
	</variable>
	<variable name="7520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-8/8_recent.xml/</value>
	</variable>
	<variable name="widgetinfolabel-7520">
		<value condition="String.Contains(Container(7520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7520).ListItem.label] $INFO[Container(7520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(7520).ListItem.Title) + String.Contains(Container(7520).ListItem.FolderPath, pvr://)">$INFO[Container(7520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7520).ListItem.Season) + !String.IsEmpty(Container(7520).ListItem.Episode) + !String.Contains(Container(7520).ListItem.TvShowTitle,Container(7520).ListItem.Title)">[UPPERCASE]S$INFO[Container(7520).ListItem.Season]E$INFO[Container(7520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7520).ListItem.Title)">$INFO[Container(7520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7520).ListItem.Label)">$INFO[Container(7520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7520">
		<value condition="!String.IsEmpty(Container(7520).ListItem.TvShowTitle) + !String.IsEmpty(Container(7520).ListItem.Genre)">$INFO[Container(7520).ListItem.TvShowTitle,, • ]$INFO[Container(7520).ListItem.Year,, • ]$INFO[Container(7520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7520).ListItem.TvShowTitle)">$INFO[Container(7520).ListItem.TvShowTitle,, • ]$INFO[Container(7520).ListItem.Premiered,, • ]$INFO[Container(7520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(7520).ListItem.Year)">$INFO[Container(7520).ListItem.Year,, • ]$INFO[Container(7520).ListItem.Duration,,min. • ]$INFO[Container(7520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7520).ListItem.Artist) + !String.IsEmpty(Container(7520).ListItem.Album)">$INFO[Container(7520).ListItem.Artist,, • ]$INFO[Container(7520).ListItem.Album,, • ]$INFO[Container(7520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(7520).ListItem.Property(StartTime))">$INFO[Container(7520).ListItem.Property(ChannelName),, • ]$INFO[Container(7520).ListItem.Property(StartTime),, - ]$INFO[Container(7520).ListItem.Property(EndTime),, • ]$INFO[Container(7520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7520).ListItem.StartTime)">$INFO[Container(7520).ListItem.ChannelName,, • ]$INFO[Container(7520).ListItem.StartTime,, - ]$INFO[Container(7520).ListItem.EndTime,, • ]$INFO[Container(7520).ListItem.Genre]</value>
	</variable>
	<variable name="7530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7530">
		<value condition="String.Contains(Container(7530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7530).ListItem.label] $INFO[Container(7530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(7530).ListItem.Title) + String.Contains(Container(7530).ListItem.FolderPath, pvr://)">$INFO[Container(7530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7530).ListItem.Season) + !String.IsEmpty(Container(7530).ListItem.Episode) + !String.Contains(Container(7530).ListItem.TvShowTitle,Container(7530).ListItem.Title)">[UPPERCASE]S$INFO[Container(7530).ListItem.Season]E$INFO[Container(7530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7530).ListItem.Title)">$INFO[Container(7530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7530).ListItem.Label)">$INFO[Container(7530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7530">
		<value condition="!String.IsEmpty(Container(7530).ListItem.TvShowTitle) + !String.IsEmpty(Container(7530).ListItem.Genre)">$INFO[Container(7530).ListItem.TvShowTitle,, • ]$INFO[Container(7530).ListItem.Year,, • ]$INFO[Container(7530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7530).ListItem.TvShowTitle)">$INFO[Container(7530).ListItem.TvShowTitle,, • ]$INFO[Container(7530).ListItem.Premiered,, • ]$INFO[Container(7530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(7530).ListItem.Year)">$INFO[Container(7530).ListItem.Year,, • ]$INFO[Container(7530).ListItem.Duration,,min. • ]$INFO[Container(7530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7530).ListItem.Artist) + !String.IsEmpty(Container(7530).ListItem.Album)">$INFO[Container(7530).ListItem.Artist,, • ]$INFO[Container(7530).ListItem.Album,, • ]$INFO[Container(7530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(7530).ListItem.Property(StartTime))">$INFO[Container(7530).ListItem.Property(ChannelName),, • ]$INFO[Container(7530).ListItem.Property(StartTime),, - ]$INFO[Container(7530).ListItem.Property(EndTime),, • ]$INFO[Container(7530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7530).ListItem.StartTime)">$INFO[Container(7530).ListItem.ChannelName,, • ]$INFO[Container(7530).ListItem.StartTime,, - ]$INFO[Container(7530).ListItem.EndTime,, • ]$INFO[Container(7530).ListItem.Genre]</value>
	</variable>
	<variable name="7540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7540">
		<value condition="String.Contains(Container(7540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7540).ListItem.label] $INFO[Container(7540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(7540).ListItem.Title) + String.Contains(Container(7540).ListItem.FolderPath, pvr://)">$INFO[Container(7540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7540).ListItem.Season) + !String.IsEmpty(Container(7540).ListItem.Episode) + !String.Contains(Container(7540).ListItem.TvShowTitle,Container(7540).ListItem.Title)">[UPPERCASE]S$INFO[Container(7540).ListItem.Season]E$INFO[Container(7540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7540).ListItem.Title)">$INFO[Container(7540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7540).ListItem.Label)">$INFO[Container(7540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7540">
		<value condition="!String.IsEmpty(Container(7540).ListItem.TvShowTitle) + !String.IsEmpty(Container(7540).ListItem.Genre)">$INFO[Container(7540).ListItem.TvShowTitle,, • ]$INFO[Container(7540).ListItem.Year,, • ]$INFO[Container(7540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7540).ListItem.TvShowTitle)">$INFO[Container(7540).ListItem.TvShowTitle,, • ]$INFO[Container(7540).ListItem.Premiered,, • ]$INFO[Container(7540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(7540).ListItem.Year)">$INFO[Container(7540).ListItem.Year,, • ]$INFO[Container(7540).ListItem.Duration,,min. • ]$INFO[Container(7540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7540).ListItem.Artist) + !String.IsEmpty(Container(7540).ListItem.Album)">$INFO[Container(7540).ListItem.Artist,, • ]$INFO[Container(7540).ListItem.Album,, • ]$INFO[Container(7540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(7540).ListItem.Property(StartTime))">$INFO[Container(7540).ListItem.Property(ChannelName),, • ]$INFO[Container(7540).ListItem.Property(StartTime),, - ]$INFO[Container(7540).ListItem.Property(EndTime),, • ]$INFO[Container(7540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7540).ListItem.StartTime)">$INFO[Container(7540).ListItem.ChannelName,, • ]$INFO[Container(7540).ListItem.StartTime,, - ]$INFO[Container(7540).ListItem.EndTime,, • ]$INFO[Container(7540).ListItem.Genre]</value>
	</variable>
	<variable name="7550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7550">
		<value condition="String.Contains(Container(7550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7550).ListItem.label] $INFO[Container(7550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(7550).ListItem.Title) + String.Contains(Container(7550).ListItem.FolderPath, pvr://)">$INFO[Container(7550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7550).ListItem.Season) + !String.IsEmpty(Container(7550).ListItem.Episode) + !String.Contains(Container(7550).ListItem.TvShowTitle,Container(7550).ListItem.Title)">[UPPERCASE]S$INFO[Container(7550).ListItem.Season]E$INFO[Container(7550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7550).ListItem.Title)">$INFO[Container(7550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7550).ListItem.Label)">$INFO[Container(7550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7550">
		<value condition="!String.IsEmpty(Container(7550).ListItem.TvShowTitle) + !String.IsEmpty(Container(7550).ListItem.Genre)">$INFO[Container(7550).ListItem.TvShowTitle,, • ]$INFO[Container(7550).ListItem.Year,, • ]$INFO[Container(7550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7550).ListItem.TvShowTitle)">$INFO[Container(7550).ListItem.TvShowTitle,, • ]$INFO[Container(7550).ListItem.Premiered,, • ]$INFO[Container(7550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(7550).ListItem.Year)">$INFO[Container(7550).ListItem.Year,, • ]$INFO[Container(7550).ListItem.Duration,,min. • ]$INFO[Container(7550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7550).ListItem.Artist) + !String.IsEmpty(Container(7550).ListItem.Album)">$INFO[Container(7550).ListItem.Artist,, • ]$INFO[Container(7550).ListItem.Album,, • ]$INFO[Container(7550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(7550).ListItem.Property(StartTime))">$INFO[Container(7550).ListItem.Property(ChannelName),, • ]$INFO[Container(7550).ListItem.Property(StartTime),, - ]$INFO[Container(7550).ListItem.Property(EndTime),, • ]$INFO[Container(7550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7550).ListItem.StartTime)">$INFO[Container(7550).ListItem.ChannelName,, • ]$INFO[Container(7550).ListItem.StartTime,, - ]$INFO[Container(7550).ListItem.EndTime,, • ]$INFO[Container(7550).ListItem.Genre]</value>
	</variable>
	<variable name="7560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7560">
		<value condition="String.Contains(Container(7560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7560).ListItem.label] $INFO[Container(7560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(7560).ListItem.Title) + String.Contains(Container(7560).ListItem.FolderPath, pvr://)">$INFO[Container(7560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7560).ListItem.Season) + !String.IsEmpty(Container(7560).ListItem.Episode) + !String.Contains(Container(7560).ListItem.TvShowTitle,Container(7560).ListItem.Title)">[UPPERCASE]S$INFO[Container(7560).ListItem.Season]E$INFO[Container(7560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7560).ListItem.Title)">$INFO[Container(7560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7560).ListItem.Label)">$INFO[Container(7560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7560">
		<value condition="!String.IsEmpty(Container(7560).ListItem.TvShowTitle) + !String.IsEmpty(Container(7560).ListItem.Genre)">$INFO[Container(7560).ListItem.TvShowTitle,, • ]$INFO[Container(7560).ListItem.Year,, • ]$INFO[Container(7560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7560).ListItem.TvShowTitle)">$INFO[Container(7560).ListItem.TvShowTitle,, • ]$INFO[Container(7560).ListItem.Premiered,, • ]$INFO[Container(7560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(7560).ListItem.Year)">$INFO[Container(7560).ListItem.Year,, • ]$INFO[Container(7560).ListItem.Duration,,min. • ]$INFO[Container(7560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7560).ListItem.Artist) + !String.IsEmpty(Container(7560).ListItem.Album)">$INFO[Container(7560).ListItem.Artist,, • ]$INFO[Container(7560).ListItem.Album,, • ]$INFO[Container(7560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(7560).ListItem.Property(StartTime))">$INFO[Container(7560).ListItem.Property(ChannelName),, • ]$INFO[Container(7560).ListItem.Property(StartTime),, - ]$INFO[Container(7560).ListItem.Property(EndTime),, • ]$INFO[Container(7560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7560).ListItem.StartTime)">$INFO[Container(7560).ListItem.ChannelName,, • ]$INFO[Container(7560).ListItem.StartTime,, - ]$INFO[Container(7560).ListItem.EndTime,, • ]$INFO[Container(7560).ListItem.Genre]</value>
	</variable>
	<variable name="7570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7570">
		<value condition="String.Contains(Container(7570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7570).ListItem.label] $INFO[Container(7570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(7570).ListItem.Title) + String.Contains(Container(7570).ListItem.FolderPath, pvr://)">$INFO[Container(7570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7570).ListItem.Season) + !String.IsEmpty(Container(7570).ListItem.Episode) + !String.Contains(Container(7570).ListItem.TvShowTitle,Container(7570).ListItem.Title)">[UPPERCASE]S$INFO[Container(7570).ListItem.Season]E$INFO[Container(7570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7570).ListItem.Title)">$INFO[Container(7570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7570).ListItem.Label)">$INFO[Container(7570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7570">
		<value condition="!String.IsEmpty(Container(7570).ListItem.TvShowTitle) + !String.IsEmpty(Container(7570).ListItem.Genre)">$INFO[Container(7570).ListItem.TvShowTitle,, • ]$INFO[Container(7570).ListItem.Year,, • ]$INFO[Container(7570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7570).ListItem.TvShowTitle)">$INFO[Container(7570).ListItem.TvShowTitle,, • ]$INFO[Container(7570).ListItem.Premiered,, • ]$INFO[Container(7570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(7570).ListItem.Year)">$INFO[Container(7570).ListItem.Year,, • ]$INFO[Container(7570).ListItem.Duration,,min. • ]$INFO[Container(7570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7570).ListItem.Artist) + !String.IsEmpty(Container(7570).ListItem.Album)">$INFO[Container(7570).ListItem.Artist,, • ]$INFO[Container(7570).ListItem.Album,, • ]$INFO[Container(7570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(7570).ListItem.Property(StartTime))">$INFO[Container(7570).ListItem.Property(ChannelName),, • ]$INFO[Container(7570).ListItem.Property(StartTime),, - ]$INFO[Container(7570).ListItem.Property(EndTime),, • ]$INFO[Container(7570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7570).ListItem.StartTime)">$INFO[Container(7570).ListItem.ChannelName,, • ]$INFO[Container(7570).ListItem.StartTime,, - ]$INFO[Container(7570).ListItem.EndTime,, • ]$INFO[Container(7570).ListItem.Genre]</value>
	</variable>
	<variable name="7580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-7580">
		<value condition="String.Contains(Container(7580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(7580).ListItem.label] $INFO[Container(7580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(7580).ListItem.Title) + String.Contains(Container(7580).ListItem.FolderPath, pvr://)">$INFO[Container(7580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7580).ListItem.Season) + !String.IsEmpty(Container(7580).ListItem.Episode) + !String.Contains(Container(7580).ListItem.TvShowTitle,Container(7580).ListItem.Title)">[UPPERCASE]S$INFO[Container(7580).ListItem.Season]E$INFO[Container(7580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(7580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7580).ListItem.Title)">$INFO[Container(7580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(7580).ListItem.Label)">$INFO[Container(7580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-7580">
		<value condition="!String.IsEmpty(Container(7580).ListItem.TvShowTitle) + !String.IsEmpty(Container(7580).ListItem.Genre)">$INFO[Container(7580).ListItem.TvShowTitle,, • ]$INFO[Container(7580).ListItem.Year,, • ]$INFO[Container(7580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7580).ListItem.TvShowTitle)">$INFO[Container(7580).ListItem.TvShowTitle,, • ]$INFO[Container(7580).ListItem.Premiered,, • ]$INFO[Container(7580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(7580).ListItem.Year)">$INFO[Container(7580).ListItem.Year,, • ]$INFO[Container(7580).ListItem.Duration,,min. • ]$INFO[Container(7580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7580).ListItem.Artist) + !String.IsEmpty(Container(7580).ListItem.Album)">$INFO[Container(7580).ListItem.Artist,, • ]$INFO[Container(7580).ListItem.Album,, • ]$INFO[Container(7580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(7580).ListItem.Property(StartTime))">$INFO[Container(7580).ListItem.Property(ChannelName),, • ]$INFO[Container(7580).ListItem.Property(StartTime),, - ]$INFO[Container(7580).ListItem.Property(EndTime),, • ]$INFO[Container(7580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(7580).ListItem.StartTime)">$INFO[Container(7580).ListItem.ChannelName,, • ]$INFO[Container(7580).ListItem.StartTime,, - ]$INFO[Container(7580).ListItem.EndTime,, • ]$INFO[Container(7580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-7">
		<value condition="Skin.String(widgetvalue-animation,7)" />
		<value condition="Skin.String(widgetvalue-animation,6)" />
		<value condition="Skin.String(widgetvalue-animation,5)" />
		<value condition="Skin.String(widgetvalue-animation,4)" />
		<value condition="Skin.String(widgetvalue-animation,3)" />
		<value condition="Skin.String(widgetvalue-animation,2)" />
		<value condition="Skin.String(widgetvalue-animation,1)">Recently Added Animated Movies</value>
		<value>Animation On Deck</value>
	</variable>
	<variable name="8510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-6/6_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-8510">
		<value condition="String.Contains(Container(8510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8510).ListItem.label] $INFO[Container(8510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Title) + String.Contains(Container(8510).ListItem.FolderPath, pvr://)">$INFO[Container(8510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Season) + !String.IsEmpty(Container(8510).ListItem.Episode) + !String.Contains(Container(8510).ListItem.TvShowTitle,Container(8510).ListItem.Title)">[UPPERCASE]S$INFO[Container(8510).ListItem.Season]E$INFO[Container(8510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Title)">$INFO[Container(8510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Label)">$INFO[Container(8510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8510">
		<value condition="!String.IsEmpty(Container(8510).ListItem.TvShowTitle) + !String.IsEmpty(Container(8510).ListItem.Genre)">$INFO[Container(8510).ListItem.TvShowTitle,, • ]$INFO[Container(8510).ListItem.Year,, • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.TvShowTitle)">$INFO[Container(8510).ListItem.TvShowTitle,, • ]$INFO[Container(8510).ListItem.Premiered,, • ]$INFO[Container(8510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Year)">$INFO[Container(8510).ListItem.Year,, • ]$INFO[Container(8510).ListItem.Duration,,min. • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Artist) + !String.IsEmpty(Container(8510).ListItem.Album)">$INFO[Container(8510).ListItem.Artist,, • ]$INFO[Container(8510).ListItem.Album,, • ]$INFO[Container(8510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Property(StartTime))">$INFO[Container(8510).ListItem.Property(ChannelName),, • ]$INFO[Container(8510).ListItem.Property(StartTime),, - ]$INFO[Container(8510).ListItem.Property(EndTime),, • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.StartTime)">$INFO[Container(8510).ListItem.ChannelName,, • ]$INFO[Container(8510).ListItem.StartTime,, - ]$INFO[Container(8510).ListItem.EndTime,, • ]$INFO[Container(8510).ListItem.Genre]</value>
	</variable>
	<variable name="8520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-6/6_recentepisodes.xml/</value>
	</variable>
	<variable name="widgetinfolabel-8520">
		<value condition="String.Contains(Container(8520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8520).ListItem.label] $INFO[Container(8520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Title) + String.Contains(Container(8520).ListItem.FolderPath, pvr://)">$INFO[Container(8520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Season) + !String.IsEmpty(Container(8520).ListItem.Episode) + !String.Contains(Container(8520).ListItem.TvShowTitle,Container(8520).ListItem.Title)">[UPPERCASE]S$INFO[Container(8520).ListItem.Season]E$INFO[Container(8520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Title)">$INFO[Container(8520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Label)">$INFO[Container(8520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8520">
		<value condition="!String.IsEmpty(Container(8520).ListItem.TvShowTitle) + !String.IsEmpty(Container(8520).ListItem.Genre)">$INFO[Container(8520).ListItem.TvShowTitle,, • ]$INFO[Container(8520).ListItem.Year,, • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.TvShowTitle)">$INFO[Container(8520).ListItem.TvShowTitle,, • ]$INFO[Container(8520).ListItem.Premiered,, • ]$INFO[Container(8520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Year)">$INFO[Container(8520).ListItem.Year,, • ]$INFO[Container(8520).ListItem.Duration,,min. • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Artist) + !String.IsEmpty(Container(8520).ListItem.Album)">$INFO[Container(8520).ListItem.Artist,, • ]$INFO[Container(8520).ListItem.Album,, • ]$INFO[Container(8520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Property(StartTime))">$INFO[Container(8520).ListItem.Property(ChannelName),, • ]$INFO[Container(8520).ListItem.Property(StartTime),, - ]$INFO[Container(8520).ListItem.Property(EndTime),, • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.StartTime)">$INFO[Container(8520).ListItem.ChannelName,, • ]$INFO[Container(8520).ListItem.StartTime,, - ]$INFO[Container(8520).ListItem.EndTime,, • ]$INFO[Container(8520).ListItem.Genre]</value>
	</variable>
	<variable name="8530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8530">
		<value condition="String.Contains(Container(8530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8530).ListItem.label] $INFO[Container(8530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Title) + String.Contains(Container(8530).ListItem.FolderPath, pvr://)">$INFO[Container(8530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Season) + !String.IsEmpty(Container(8530).ListItem.Episode) + !String.Contains(Container(8530).ListItem.TvShowTitle,Container(8530).ListItem.Title)">[UPPERCASE]S$INFO[Container(8530).ListItem.Season]E$INFO[Container(8530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Title)">$INFO[Container(8530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Label)">$INFO[Container(8530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8530">
		<value condition="!String.IsEmpty(Container(8530).ListItem.TvShowTitle) + !String.IsEmpty(Container(8530).ListItem.Genre)">$INFO[Container(8530).ListItem.TvShowTitle,, • ]$INFO[Container(8530).ListItem.Year,, • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.TvShowTitle)">$INFO[Container(8530).ListItem.TvShowTitle,, • ]$INFO[Container(8530).ListItem.Premiered,, • ]$INFO[Container(8530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Year)">$INFO[Container(8530).ListItem.Year,, • ]$INFO[Container(8530).ListItem.Duration,,min. • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Artist) + !String.IsEmpty(Container(8530).ListItem.Album)">$INFO[Container(8530).ListItem.Artist,, • ]$INFO[Container(8530).ListItem.Album,, • ]$INFO[Container(8530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Property(StartTime))">$INFO[Container(8530).ListItem.Property(ChannelName),, • ]$INFO[Container(8530).ListItem.Property(StartTime),, - ]$INFO[Container(8530).ListItem.Property(EndTime),, • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.StartTime)">$INFO[Container(8530).ListItem.ChannelName,, • ]$INFO[Container(8530).ListItem.StartTime,, - ]$INFO[Container(8530).ListItem.EndTime,, • ]$INFO[Container(8530).ListItem.Genre]</value>
	</variable>
	<variable name="8540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8540">
		<value condition="String.Contains(Container(8540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8540).ListItem.label] $INFO[Container(8540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Title) + String.Contains(Container(8540).ListItem.FolderPath, pvr://)">$INFO[Container(8540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Season) + !String.IsEmpty(Container(8540).ListItem.Episode) + !String.Contains(Container(8540).ListItem.TvShowTitle,Container(8540).ListItem.Title)">[UPPERCASE]S$INFO[Container(8540).ListItem.Season]E$INFO[Container(8540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Title)">$INFO[Container(8540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Label)">$INFO[Container(8540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8540">
		<value condition="!String.IsEmpty(Container(8540).ListItem.TvShowTitle) + !String.IsEmpty(Container(8540).ListItem.Genre)">$INFO[Container(8540).ListItem.TvShowTitle,, • ]$INFO[Container(8540).ListItem.Year,, • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.TvShowTitle)">$INFO[Container(8540).ListItem.TvShowTitle,, • ]$INFO[Container(8540).ListItem.Premiered,, • ]$INFO[Container(8540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Year)">$INFO[Container(8540).ListItem.Year,, • ]$INFO[Container(8540).ListItem.Duration,,min. • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Artist) + !String.IsEmpty(Container(8540).ListItem.Album)">$INFO[Container(8540).ListItem.Artist,, • ]$INFO[Container(8540).ListItem.Album,, • ]$INFO[Container(8540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Property(StartTime))">$INFO[Container(8540).ListItem.Property(ChannelName),, • ]$INFO[Container(8540).ListItem.Property(StartTime),, - ]$INFO[Container(8540).ListItem.Property(EndTime),, • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.StartTime)">$INFO[Container(8540).ListItem.ChannelName,, • ]$INFO[Container(8540).ListItem.StartTime,, - ]$INFO[Container(8540).ListItem.EndTime,, • ]$INFO[Container(8540).ListItem.Genre]</value>
	</variable>
	<variable name="8550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8550">
		<value condition="String.Contains(Container(8550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8550).ListItem.label] $INFO[Container(8550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Title) + String.Contains(Container(8550).ListItem.FolderPath, pvr://)">$INFO[Container(8550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Season) + !String.IsEmpty(Container(8550).ListItem.Episode) + !String.Contains(Container(8550).ListItem.TvShowTitle,Container(8550).ListItem.Title)">[UPPERCASE]S$INFO[Container(8550).ListItem.Season]E$INFO[Container(8550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Title)">$INFO[Container(8550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Label)">$INFO[Container(8550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8550">
		<value condition="!String.IsEmpty(Container(8550).ListItem.TvShowTitle) + !String.IsEmpty(Container(8550).ListItem.Genre)">$INFO[Container(8550).ListItem.TvShowTitle,, • ]$INFO[Container(8550).ListItem.Year,, • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.TvShowTitle)">$INFO[Container(8550).ListItem.TvShowTitle,, • ]$INFO[Container(8550).ListItem.Premiered,, • ]$INFO[Container(8550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Year)">$INFO[Container(8550).ListItem.Year,, • ]$INFO[Container(8550).ListItem.Duration,,min. • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Artist) + !String.IsEmpty(Container(8550).ListItem.Album)">$INFO[Container(8550).ListItem.Artist,, • ]$INFO[Container(8550).ListItem.Album,, • ]$INFO[Container(8550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Property(StartTime))">$INFO[Container(8550).ListItem.Property(ChannelName),, • ]$INFO[Container(8550).ListItem.Property(StartTime),, - ]$INFO[Container(8550).ListItem.Property(EndTime),, • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.StartTime)">$INFO[Container(8550).ListItem.ChannelName,, • ]$INFO[Container(8550).ListItem.StartTime,, - ]$INFO[Container(8550).ListItem.EndTime,, • ]$INFO[Container(8550).ListItem.Genre]</value>
	</variable>
	<variable name="8560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8560">
		<value condition="String.Contains(Container(8560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8560).ListItem.label] $INFO[Container(8560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Title) + String.Contains(Container(8560).ListItem.FolderPath, pvr://)">$INFO[Container(8560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Season) + !String.IsEmpty(Container(8560).ListItem.Episode) + !String.Contains(Container(8560).ListItem.TvShowTitle,Container(8560).ListItem.Title)">[UPPERCASE]S$INFO[Container(8560).ListItem.Season]E$INFO[Container(8560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Title)">$INFO[Container(8560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Label)">$INFO[Container(8560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8560">
		<value condition="!String.IsEmpty(Container(8560).ListItem.TvShowTitle) + !String.IsEmpty(Container(8560).ListItem.Genre)">$INFO[Container(8560).ListItem.TvShowTitle,, • ]$INFO[Container(8560).ListItem.Year,, • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.TvShowTitle)">$INFO[Container(8560).ListItem.TvShowTitle,, • ]$INFO[Container(8560).ListItem.Premiered,, • ]$INFO[Container(8560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Year)">$INFO[Container(8560).ListItem.Year,, • ]$INFO[Container(8560).ListItem.Duration,,min. • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Artist) + !String.IsEmpty(Container(8560).ListItem.Album)">$INFO[Container(8560).ListItem.Artist,, • ]$INFO[Container(8560).ListItem.Album,, • ]$INFO[Container(8560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Property(StartTime))">$INFO[Container(8560).ListItem.Property(ChannelName),, • ]$INFO[Container(8560).ListItem.Property(StartTime),, - ]$INFO[Container(8560).ListItem.Property(EndTime),, • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.StartTime)">$INFO[Container(8560).ListItem.ChannelName,, • ]$INFO[Container(8560).ListItem.StartTime,, - ]$INFO[Container(8560).ListItem.EndTime,, • ]$INFO[Container(8560).ListItem.Genre]</value>
	</variable>
	<variable name="8570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8570">
		<value condition="String.Contains(Container(8570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8570).ListItem.label] $INFO[Container(8570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Title) + String.Contains(Container(8570).ListItem.FolderPath, pvr://)">$INFO[Container(8570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Season) + !String.IsEmpty(Container(8570).ListItem.Episode) + !String.Contains(Container(8570).ListItem.TvShowTitle,Container(8570).ListItem.Title)">[UPPERCASE]S$INFO[Container(8570).ListItem.Season]E$INFO[Container(8570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Title)">$INFO[Container(8570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Label)">$INFO[Container(8570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8570">
		<value condition="!String.IsEmpty(Container(8570).ListItem.TvShowTitle) + !String.IsEmpty(Container(8570).ListItem.Genre)">$INFO[Container(8570).ListItem.TvShowTitle,, • ]$INFO[Container(8570).ListItem.Year,, • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.TvShowTitle)">$INFO[Container(8570).ListItem.TvShowTitle,, • ]$INFO[Container(8570).ListItem.Premiered,, • ]$INFO[Container(8570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Year)">$INFO[Container(8570).ListItem.Year,, • ]$INFO[Container(8570).ListItem.Duration,,min. • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Artist) + !String.IsEmpty(Container(8570).ListItem.Album)">$INFO[Container(8570).ListItem.Artist,, • ]$INFO[Container(8570).ListItem.Album,, • ]$INFO[Container(8570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Property(StartTime))">$INFO[Container(8570).ListItem.Property(ChannelName),, • ]$INFO[Container(8570).ListItem.Property(StartTime),, - ]$INFO[Container(8570).ListItem.Property(EndTime),, • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.StartTime)">$INFO[Container(8570).ListItem.ChannelName,, • ]$INFO[Container(8570).ListItem.StartTime,, - ]$INFO[Container(8570).ListItem.EndTime,, • ]$INFO[Container(8570).ListItem.Genre]</value>
	</variable>
	<variable name="8580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8580">
		<value condition="String.Contains(Container(8580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8580).ListItem.label] $INFO[Container(8580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Title) + String.Contains(Container(8580).ListItem.FolderPath, pvr://)">$INFO[Container(8580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Season) + !String.IsEmpty(Container(8580).ListItem.Episode) + !String.Contains(Container(8580).ListItem.TvShowTitle,Container(8580).ListItem.Title)">[UPPERCASE]S$INFO[Container(8580).ListItem.Season]E$INFO[Container(8580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Title)">$INFO[Container(8580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Label)">$INFO[Container(8580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8580">
		<value condition="!String.IsEmpty(Container(8580).ListItem.TvShowTitle) + !String.IsEmpty(Container(8580).ListItem.Genre)">$INFO[Container(8580).ListItem.TvShowTitle,, • ]$INFO[Container(8580).ListItem.Year,, • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.TvShowTitle)">$INFO[Container(8580).ListItem.TvShowTitle,, • ]$INFO[Container(8580).ListItem.Premiered,, • ]$INFO[Container(8580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Year)">$INFO[Container(8580).ListItem.Year,, • ]$INFO[Container(8580).ListItem.Duration,,min. • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Artist) + !String.IsEmpty(Container(8580).ListItem.Album)">$INFO[Container(8580).ListItem.Artist,, • ]$INFO[Container(8580).ListItem.Album,, • ]$INFO[Container(8580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Property(StartTime))">$INFO[Container(8580).ListItem.Property(ChannelName),, • ]$INFO[Container(8580).ListItem.Property(StartTime),, - ]$INFO[Container(8580).ListItem.Property(EndTime),, • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.StartTime)">$INFO[Container(8580).ListItem.ChannelName,, • ]$INFO[Container(8580).ListItem.StartTime,, - ]$INFO[Container(8580).ListItem.EndTime,, • ]$INFO[Container(8580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-8">
		<value condition="Skin.String(widgetvalue-cartoons,7)" />
		<value condition="Skin.String(widgetvalue-cartoons,6)" />
		<value condition="Skin.String(widgetvalue-cartoons,5)" />
		<value condition="Skin.String(widgetvalue-cartoons,4)" />
		<value condition="Skin.String(widgetvalue-cartoons,3)" />
		<value condition="Skin.String(widgetvalue-cartoons,2)" />
		<value condition="Skin.String(widgetvalue-cartoons,1)">Recently Added Cartoons</value>
		<value>Cartoons On Deck</value>
	</variable>
	<variable name="9510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-4/4_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-9510">
		<value condition="String.Contains(Container(9510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9510).ListItem.label] $INFO[Container(9510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Title) + String.Contains(Container(9510).ListItem.FolderPath, pvr://)">$INFO[Container(9510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Season) + !String.IsEmpty(Container(9510).ListItem.Episode) + !String.Contains(Container(9510).ListItem.TvShowTitle,Container(9510).ListItem.Title)">[UPPERCASE]S$INFO[Container(9510).ListItem.Season]E$INFO[Container(9510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Title)">$INFO[Container(9510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Label)">$INFO[Container(9510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-9510">
		<value condition="!String.IsEmpty(Container(9510).ListItem.TvShowTitle) + !String.IsEmpty(Container(9510).ListItem.Genre)">$INFO[Container(9510).ListItem.TvShowTitle,, • ]$INFO[Container(9510).ListItem.Year,, • ]$INFO[Container(9510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.TvShowTitle)">$INFO[Container(9510).ListItem.TvShowTitle,, • ]$INFO[Container(9510).ListItem.Premiered,, • ]$INFO[Container(9510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Year)">$INFO[Container(9510).ListItem.Year,, • ]$INFO[Container(9510).ListItem.Duration,,min. • ]$INFO[Container(9510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Artist) + !String.IsEmpty(Container(9510).ListItem.Album)">$INFO[Container(9510).ListItem.Artist,, • ]$INFO[Container(9510).ListItem.Album,, • ]$INFO[Container(9510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Property(StartTime))">$INFO[Container(9510).ListItem.Property(ChannelName),, • ]$INFO[Container(9510).ListItem.Property(StartTime),, - ]$INFO[Container(9510).ListItem.Property(EndTime),, • ]$INFO[Container(9510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.StartTime)">$INFO[Container(9510).ListItem.ChannelName,, • ]$INFO[Container(9510).ListItem.StartTime,, - ]$INFO[Container(9510).ListItem.EndTime,, • ]$INFO[Container(9510).ListItem.Genre]</value>
	</variable>
	<variable name="9520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-4/4_recentepisodes.xml/</value>
	</variable>
	<variable name="widgetinfolabel-9520">
		<value condition="String.Contains(Container(9520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9520).ListItem.label] $INFO[Container(9520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Title) + String.Contains(Container(9520).ListItem.FolderPath, pvr://)">$INFO[Container(9520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Season) + !String.IsEmpty(Container(9520).ListItem.Episode) + !String.Contains(Container(9520).ListItem.TvShowTitle,Container(9520).ListItem.Title)">[UPPERCASE]S$INFO[Container(9520).ListItem.Season]E$INFO[Container(9520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Title)">$INFO[Container(9520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Label)">$INFO[Container(9520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-9520">
		<value condition="!String.IsEmpty(Container(9520).ListItem.TvShowTitle) + !String.IsEmpty(Container(9520).ListItem.Genre)">$INFO[Container(9520).ListItem.TvShowTitle,, • ]$INFO[Container(9520).ListItem.Year,, • ]$INFO[Container(9520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.TvShowTitle)">$INFO[Container(9520).ListItem.TvShowTitle,, • ]$INFO[Container(9520).ListItem.Premiered,, • ]$INFO[Container(9520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Year)">$INFO[Container(9520).ListItem.Year,, • ]$INFO[Container(9520).ListItem.Duration,,min. • ]$INFO[Container(9520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Artist) + !String.IsEmpty(Container(9520).ListItem.Album)">$INFO[Container(9520).ListItem.Artist,, • ]$INFO[Container(9520).ListItem.Album,, • ]$INFO[Container(9520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Property(StartTime))">$INFO[Container(9520).ListItem.Property(ChannelName),, • ]$INFO[Container(9520).ListItem.Property(StartTime),, - ]$INFO[Container(9520).ListItem.Property(EndTime),, • ]$INFO[Container(9520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.StartTime)">$INFO[Container(9520).ListItem.ChannelName,, • ]$INFO[Container(9520).ListItem.StartTime,, - ]$INFO[Container(9520).ListItem.EndTime,, • ]$INFO[Container(9520).ListItem.Genre]</value>
	</variable>
	<variable name="9530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-9530">
		<value condition="String.Contains(Container(9530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9530).ListItem.label] $INFO[Container(9530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Title) + String.Contains(Container(9530).ListItem.FolderPath, pvr://)">$INFO[Container(9530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Season) + !String.IsEmpty(Container(9530).ListItem.Episode) + !String.Contains(Container(9530).ListItem.TvShowTitle,Container(9530).ListItem.Title)">[UPPERCASE]S$INFO[Container(9530).ListItem.Season]E$INFO[Container(9530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Title)">$INFO[Container(9530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Label)">$INFO[Container(9530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-9530">
		<value condition="!String.IsEmpty(Container(9530).ListItem.TvShowTitle) + !String.IsEmpty(Container(9530).ListItem.Genre)">$INFO[Container(9530).ListItem.TvShowTitle,, • ]$INFO[Container(9530).ListItem.Year,, • ]$INFO[Container(9530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.TvShowTitle)">$INFO[Container(9530).ListItem.TvShowTitle,, • ]$INFO[Container(9530).ListItem.Premiered,, • ]$INFO[Container(9530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Year)">$INFO[Container(9530).ListItem.Year,, • ]$INFO[Container(9530).ListItem.Duration,,min. • ]$INFO[Container(9530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Artist) + !String.IsEmpty(Container(9530).ListItem.Album)">$INFO[Container(9530).ListItem.Artist,, • ]$INFO[Container(9530).ListItem.Album,, • ]$INFO[Container(9530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Property(StartTime))">$INFO[Container(9530).ListItem.Property(ChannelName),, • ]$INFO[Container(9530).ListItem.Property(StartTime),, - ]$INFO[Container(9530).ListItem.Property(EndTime),, • ]$INFO[Container(9530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.StartTime)">$INFO[Container(9530).ListItem.ChannelName,, • ]$INFO[Container(9530).ListItem.StartTime,, - ]$INFO[Container(9530).ListItem.EndTime,, • ]$INFO[Container(9530).ListItem.Genre]</value>
	</variable>
	<variable name="9540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-9540">
		<value condition="String.Contains(Container(9540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9540).ListItem.label] $INFO[Container(9540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Title) + String.Contains(Container(9540).ListItem.FolderPath, pvr://)">$INFO[Container(9540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Season) + !String.IsEmpty(Container(9540).ListItem.Episode) + !String.Contains(Container(9540).ListItem.TvShowTitle,Container(9540).ListItem.Title)">[UPPERCASE]S$INFO[Container(9540).ListItem.Season]E$INFO[Container(9540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Title)">$INFO[Container(9540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Label)">$INFO[Container(9540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-9540">
		<value condition="!String.IsEmpty(Container(9540).ListItem.TvShowTitle) + !String.IsEmpty(Container(9540).ListItem.Genre)">$INFO[Container(9540).ListItem.TvShowTitle,, • ]$INFO[Container(9540).ListItem.Year,, • ]$INFO[Container(9540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.TvShowTitle)">$INFO[Container(9540).ListItem.TvShowTitle,, • ]$INFO[Container(9540).ListItem.Premiered,, • ]$INFO[Container(9540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Year)">$INFO[Container(9540).ListItem.Year,, • ]$INFO[Container(9540).ListItem.Duration,,min. • ]$INFO[Container(9540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Artist) + !String.IsEmpty(Container(9540).ListItem.Album)">$INFO[Container(9540).ListItem.Artist,, • ]$INFO[Container(9540).ListItem.Album,, • ]$INFO[Container(9540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Property(StartTime))">$INFO[Container(9540).ListItem.Property(ChannelName),, • ]$INFO[Container(9540).ListItem.Property(StartTime),, - ]$INFO[Container(9540).ListItem.Property(EndTime),, • ]$INFO[Container(9540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.StartTime)">$INFO[Container(9540).ListItem.ChannelName,, • ]$INFO[Container(9540).ListItem.StartTime,, - ]$INFO[Container(9540).ListItem.EndTime,, • ]$INFO[Container(9540).ListItem.Genre]</value>
	</variable>
	<variable name="9550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-9550">
		<value condition="String.Contains(Container(9550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9550).ListItem.label] $INFO[Container(9550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Title) + String.Contains(Container(9550).ListItem.FolderPath, pvr://)">$INFO[Container(9550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Season) + !String.IsEmpty(Container(9550).ListItem.Episode) + !String.Contains(Container(9550).ListItem.TvShowTitle,Container(9550).ListItem.Title)">[UPPERCASE]S$INFO[Container(9550).ListItem.Season]E$INFO[Container(9550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Title)">$INFO[Container(9550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Label)">$INFO[Container(9550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-9550">
		<value condition="!String.IsEmpty(Container(9550).ListItem.TvShowTitle) + !String.IsEmpty(Container(9550).ListItem.Genre)">$INFO[Container(9550).ListItem.TvShowTitle,, • ]$INFO[Container(9550).ListItem.Year,, • ]$INFO[Container(9550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.TvShowTitle)">$INFO[Container(9550).ListItem.TvShowTitle,, • ]$INFO[Container(9550).ListItem.Premiered,, • ]$INFO[Container(9550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Year)">$INFO[Container(9550).ListItem.Year,, • ]$INFO[Container(9550).ListItem.Duration,,min. • ]$INFO[Container(9550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Artist) + !String.IsEmpty(Container(9550).ListItem.Album)">$INFO[Container(9550).ListItem.Artist,, • ]$INFO[Container(9550).ListItem.Album,, • ]$INFO[Container(9550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Property(StartTime))">$INFO[Container(9550).ListItem.Property(ChannelName),, • ]$INFO[Container(9550).ListItem.Property(StartTime),, - ]$INFO[Container(9550).ListItem.Property(EndTime),, • ]$INFO[Container(9550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.StartTime)">$INFO[Container(9550).ListItem.ChannelName,, • ]$INFO[Container(9550).ListItem.StartTime,, - ]$INFO[Container(9550).ListItem.EndTime,, • ]$INFO[Container(9550).ListItem.Genre]</value>
	</variable>
	<variable name="9560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-9560">
		<value condition="String.Contains(Container(9560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9560).ListItem.label] $INFO[Container(9560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Title) + String.Contains(Container(9560).ListItem.FolderPath, pvr://)">$INFO[Container(9560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Season) + !String.IsEmpty(Container(9560).ListItem.Episode) + !String.Contains(Container(9560).ListItem.TvShowTitle,Container(9560).ListItem.Title)">[UPPERCASE]S$INFO[Container(9560).ListItem.Season]E$INFO[Container(9560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Title)">$INFO[Container(9560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Label)">$INFO[Container(9560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-9560">
		<value condition="!String.IsEmpty(Container(9560).ListItem.TvShowTitle) + !String.IsEmpty(Container(9560).ListItem.Genre)">$INFO[Container(9560).ListItem.TvShowTitle,, • ]$INFO[Container(9560).ListItem.Year,, • ]$INFO[Container(9560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.TvShowTitle)">$INFO[Container(9560).ListItem.TvShowTitle,, • ]$INFO[Container(9560).ListItem.Premiered,, • ]$INFO[Container(9560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Year)">$INFO[Container(9560).ListItem.Year,, • ]$INFO[Container(9560).ListItem.Duration,,min. • ]$INFO[Container(9560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Artist) + !String.IsEmpty(Container(9560).ListItem.Album)">$INFO[Container(9560).ListItem.Artist,, • ]$INFO[Container(9560).ListItem.Album,, • ]$INFO[Container(9560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Property(StartTime))">$INFO[Container(9560).ListItem.Property(ChannelName),, • ]$INFO[Container(9560).ListItem.Property(StartTime),, - ]$INFO[Container(9560).ListItem.Property(EndTime),, • ]$INFO[Container(9560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.StartTime)">$INFO[Container(9560).ListItem.ChannelName,, • ]$INFO[Container(9560).ListItem.StartTime,, - ]$INFO[Container(9560).ListItem.EndTime,, • ]$INFO[Container(9560).ListItem.Genre]</value>
	</variable>
	<variable name="9570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-9570">
		<value condition="String.Contains(Container(9570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9570).ListItem.label] $INFO[Container(9570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Title) + String.Contains(Container(9570).ListItem.FolderPath, pvr://)">$INFO[Container(9570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Season) + !String.IsEmpty(Container(9570).ListItem.Episode) + !String.Contains(Container(9570).ListItem.TvShowTitle,Container(9570).ListItem.Title)">[UPPERCASE]S$INFO[Container(9570).ListItem.Season]E$INFO[Container(9570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Title)">$INFO[Container(9570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Label)">$INFO[Container(9570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-9570">
		<value condition="!String.IsEmpty(Container(9570).ListItem.TvShowTitle) + !String.IsEmpty(Container(9570).ListItem.Genre)">$INFO[Container(9570).ListItem.TvShowTitle,, • ]$INFO[Container(9570).ListItem.Year,, • ]$INFO[Container(9570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.TvShowTitle)">$INFO[Container(9570).ListItem.TvShowTitle,, • ]$INFO[Container(9570).ListItem.Premiered,, • ]$INFO[Container(9570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Year)">$INFO[Container(9570).ListItem.Year,, • ]$INFO[Container(9570).ListItem.Duration,,min. • ]$INFO[Container(9570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Artist) + !String.IsEmpty(Container(9570).ListItem.Album)">$INFO[Container(9570).ListItem.Artist,, • ]$INFO[Container(9570).ListItem.Album,, • ]$INFO[Container(9570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Property(StartTime))">$INFO[Container(9570).ListItem.Property(ChannelName),, • ]$INFO[Container(9570).ListItem.Property(StartTime),, - ]$INFO[Container(9570).ListItem.Property(EndTime),, • ]$INFO[Container(9570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.StartTime)">$INFO[Container(9570).ListItem.ChannelName,, • ]$INFO[Container(9570).ListItem.StartTime,, - ]$INFO[Container(9570).ListItem.EndTime,, • ]$INFO[Container(9570).ListItem.Genre]</value>
	</variable>
	<variable name="9580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-9580">
		<value condition="String.Contains(Container(9580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9580).ListItem.label] $INFO[Container(9580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Title) + String.Contains(Container(9580).ListItem.FolderPath, pvr://)">$INFO[Container(9580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Season) + !String.IsEmpty(Container(9580).ListItem.Episode) + !String.Contains(Container(9580).ListItem.TvShowTitle,Container(9580).ListItem.Title)">[UPPERCASE]S$INFO[Container(9580).ListItem.Season]E$INFO[Container(9580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Title)">$INFO[Container(9580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Label)">$INFO[Container(9580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-9580">
		<value condition="!String.IsEmpty(Container(9580).ListItem.TvShowTitle) + !String.IsEmpty(Container(9580).ListItem.Genre)">$INFO[Container(9580).ListItem.TvShowTitle,, • ]$INFO[Container(9580).ListItem.Year,, • ]$INFO[Container(9580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.TvShowTitle)">$INFO[Container(9580).ListItem.TvShowTitle,, • ]$INFO[Container(9580).ListItem.Premiered,, • ]$INFO[Container(9580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Year)">$INFO[Container(9580).ListItem.Year,, • ]$INFO[Container(9580).ListItem.Duration,,min. • ]$INFO[Container(9580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Artist) + !String.IsEmpty(Container(9580).ListItem.Album)">$INFO[Container(9580).ListItem.Artist,, • ]$INFO[Container(9580).ListItem.Album,, • ]$INFO[Container(9580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Property(StartTime))">$INFO[Container(9580).ListItem.Property(ChannelName),, • ]$INFO[Container(9580).ListItem.Property(StartTime),, - ]$INFO[Container(9580).ListItem.Property(EndTime),, • ]$INFO[Container(9580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.StartTime)">$INFO[Container(9580).ListItem.ChannelName,, • ]$INFO[Container(9580).ListItem.StartTime,, - ]$INFO[Container(9580).ListItem.EndTime,, • ]$INFO[Container(9580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-9">
		<value condition="Skin.String(widgetvalue-anime,7)" />
		<value condition="Skin.String(widgetvalue-anime,6)" />
		<value condition="Skin.String(widgetvalue-anime,5)" />
		<value condition="Skin.String(widgetvalue-anime,4)" />
		<value condition="Skin.String(widgetvalue-anime,3)" />
		<value condition="Skin.String(widgetvalue-anime,2)" />
		<value condition="Skin.String(widgetvalue-anime,1)">Recently Added Anime</value>
		<value>Anime On Deck</value>
	</variable>
	<variable name="10510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-5/5_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-10510">
		<value condition="String.Contains(Container(10510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10510).ListItem.label] $INFO[Container(10510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Title) + String.Contains(Container(10510).ListItem.FolderPath, pvr://)">$INFO[Container(10510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Season) + !String.IsEmpty(Container(10510).ListItem.Episode) + !String.Contains(Container(10510).ListItem.TvShowTitle,Container(10510).ListItem.Title)">[UPPERCASE]S$INFO[Container(10510).ListItem.Season]E$INFO[Container(10510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Title)">$INFO[Container(10510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Label)">$INFO[Container(10510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10510">
		<value condition="!String.IsEmpty(Container(10510).ListItem.TvShowTitle) + !String.IsEmpty(Container(10510).ListItem.Genre)">$INFO[Container(10510).ListItem.TvShowTitle,, • ]$INFO[Container(10510).ListItem.Year,, • ]$INFO[Container(10510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.TvShowTitle)">$INFO[Container(10510).ListItem.TvShowTitle,, • ]$INFO[Container(10510).ListItem.Premiered,, • ]$INFO[Container(10510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Year)">$INFO[Container(10510).ListItem.Year,, • ]$INFO[Container(10510).ListItem.Duration,,min. • ]$INFO[Container(10510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Artist) + !String.IsEmpty(Container(10510).ListItem.Album)">$INFO[Container(10510).ListItem.Artist,, • ]$INFO[Container(10510).ListItem.Album,, • ]$INFO[Container(10510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Property(StartTime))">$INFO[Container(10510).ListItem.Property(ChannelName),, • ]$INFO[Container(10510).ListItem.Property(StartTime),, - ]$INFO[Container(10510).ListItem.Property(EndTime),, • ]$INFO[Container(10510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.StartTime)">$INFO[Container(10510).ListItem.ChannelName,, • ]$INFO[Container(10510).ListItem.StartTime,, - ]$INFO[Container(10510).ListItem.EndTime,, • ]$INFO[Container(10510).ListItem.Genre]</value>
	</variable>
	<variable name="10520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-5/5_recent.xml/</value>
	</variable>
	<variable name="widgetinfolabel-10520">
		<value condition="String.Contains(Container(10520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10520).ListItem.label] $INFO[Container(10520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Title) + String.Contains(Container(10520).ListItem.FolderPath, pvr://)">$INFO[Container(10520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Season) + !String.IsEmpty(Container(10520).ListItem.Episode) + !String.Contains(Container(10520).ListItem.TvShowTitle,Container(10520).ListItem.Title)">[UPPERCASE]S$INFO[Container(10520).ListItem.Season]E$INFO[Container(10520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Title)">$INFO[Container(10520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Label)">$INFO[Container(10520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10520">
		<value condition="!String.IsEmpty(Container(10520).ListItem.TvShowTitle) + !String.IsEmpty(Container(10520).ListItem.Genre)">$INFO[Container(10520).ListItem.TvShowTitle,, • ]$INFO[Container(10520).ListItem.Year,, • ]$INFO[Container(10520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.TvShowTitle)">$INFO[Container(10520).ListItem.TvShowTitle,, • ]$INFO[Container(10520).ListItem.Premiered,, • ]$INFO[Container(10520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Year)">$INFO[Container(10520).ListItem.Year,, • ]$INFO[Container(10520).ListItem.Duration,,min. • ]$INFO[Container(10520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Artist) + !String.IsEmpty(Container(10520).ListItem.Album)">$INFO[Container(10520).ListItem.Artist,, • ]$INFO[Container(10520).ListItem.Album,, • ]$INFO[Container(10520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Property(StartTime))">$INFO[Container(10520).ListItem.Property(ChannelName),, • ]$INFO[Container(10520).ListItem.Property(StartTime),, - ]$INFO[Container(10520).ListItem.Property(EndTime),, • ]$INFO[Container(10520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.StartTime)">$INFO[Container(10520).ListItem.ChannelName,, • ]$INFO[Container(10520).ListItem.StartTime,, - ]$INFO[Container(10520).ListItem.EndTime,, • ]$INFO[Container(10520).ListItem.Genre]</value>
	</variable>
	<variable name="10530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10530">
		<value condition="String.Contains(Container(10530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10530).ListItem.label] $INFO[Container(10530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Title) + String.Contains(Container(10530).ListItem.FolderPath, pvr://)">$INFO[Container(10530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Season) + !String.IsEmpty(Container(10530).ListItem.Episode) + !String.Contains(Container(10530).ListItem.TvShowTitle,Container(10530).ListItem.Title)">[UPPERCASE]S$INFO[Container(10530).ListItem.Season]E$INFO[Container(10530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Title)">$INFO[Container(10530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Label)">$INFO[Container(10530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10530">
		<value condition="!String.IsEmpty(Container(10530).ListItem.TvShowTitle) + !String.IsEmpty(Container(10530).ListItem.Genre)">$INFO[Container(10530).ListItem.TvShowTitle,, • ]$INFO[Container(10530).ListItem.Year,, • ]$INFO[Container(10530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.TvShowTitle)">$INFO[Container(10530).ListItem.TvShowTitle,, • ]$INFO[Container(10530).ListItem.Premiered,, • ]$INFO[Container(10530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Year)">$INFO[Container(10530).ListItem.Year,, • ]$INFO[Container(10530).ListItem.Duration,,min. • ]$INFO[Container(10530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Artist) + !String.IsEmpty(Container(10530).ListItem.Album)">$INFO[Container(10530).ListItem.Artist,, • ]$INFO[Container(10530).ListItem.Album,, • ]$INFO[Container(10530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Property(StartTime))">$INFO[Container(10530).ListItem.Property(ChannelName),, • ]$INFO[Container(10530).ListItem.Property(StartTime),, - ]$INFO[Container(10530).ListItem.Property(EndTime),, • ]$INFO[Container(10530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.StartTime)">$INFO[Container(10530).ListItem.ChannelName,, • ]$INFO[Container(10530).ListItem.StartTime,, - ]$INFO[Container(10530).ListItem.EndTime,, • ]$INFO[Container(10530).ListItem.Genre]</value>
	</variable>
	<variable name="10540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10540">
		<value condition="String.Contains(Container(10540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10540).ListItem.label] $INFO[Container(10540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Title) + String.Contains(Container(10540).ListItem.FolderPath, pvr://)">$INFO[Container(10540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Season) + !String.IsEmpty(Container(10540).ListItem.Episode) + !String.Contains(Container(10540).ListItem.TvShowTitle,Container(10540).ListItem.Title)">[UPPERCASE]S$INFO[Container(10540).ListItem.Season]E$INFO[Container(10540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Title)">$INFO[Container(10540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Label)">$INFO[Container(10540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10540">
		<value condition="!String.IsEmpty(Container(10540).ListItem.TvShowTitle) + !String.IsEmpty(Container(10540).ListItem.Genre)">$INFO[Container(10540).ListItem.TvShowTitle,, • ]$INFO[Container(10540).ListItem.Year,, • ]$INFO[Container(10540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.TvShowTitle)">$INFO[Container(10540).ListItem.TvShowTitle,, • ]$INFO[Container(10540).ListItem.Premiered,, • ]$INFO[Container(10540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Year)">$INFO[Container(10540).ListItem.Year,, • ]$INFO[Container(10540).ListItem.Duration,,min. • ]$INFO[Container(10540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Artist) + !String.IsEmpty(Container(10540).ListItem.Album)">$INFO[Container(10540).ListItem.Artist,, • ]$INFO[Container(10540).ListItem.Album,, • ]$INFO[Container(10540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Property(StartTime))">$INFO[Container(10540).ListItem.Property(ChannelName),, • ]$INFO[Container(10540).ListItem.Property(StartTime),, - ]$INFO[Container(10540).ListItem.Property(EndTime),, • ]$INFO[Container(10540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.StartTime)">$INFO[Container(10540).ListItem.ChannelName,, • ]$INFO[Container(10540).ListItem.StartTime,, - ]$INFO[Container(10540).ListItem.EndTime,, • ]$INFO[Container(10540).ListItem.Genre]</value>
	</variable>
	<variable name="10550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10550">
		<value condition="String.Contains(Container(10550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10550).ListItem.label] $INFO[Container(10550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Title) + String.Contains(Container(10550).ListItem.FolderPath, pvr://)">$INFO[Container(10550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Season) + !String.IsEmpty(Container(10550).ListItem.Episode) + !String.Contains(Container(10550).ListItem.TvShowTitle,Container(10550).ListItem.Title)">[UPPERCASE]S$INFO[Container(10550).ListItem.Season]E$INFO[Container(10550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Title)">$INFO[Container(10550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Label)">$INFO[Container(10550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10550">
		<value condition="!String.IsEmpty(Container(10550).ListItem.TvShowTitle) + !String.IsEmpty(Container(10550).ListItem.Genre)">$INFO[Container(10550).ListItem.TvShowTitle,, • ]$INFO[Container(10550).ListItem.Year,, • ]$INFO[Container(10550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.TvShowTitle)">$INFO[Container(10550).ListItem.TvShowTitle,, • ]$INFO[Container(10550).ListItem.Premiered,, • ]$INFO[Container(10550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Year)">$INFO[Container(10550).ListItem.Year,, • ]$INFO[Container(10550).ListItem.Duration,,min. • ]$INFO[Container(10550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Artist) + !String.IsEmpty(Container(10550).ListItem.Album)">$INFO[Container(10550).ListItem.Artist,, • ]$INFO[Container(10550).ListItem.Album,, • ]$INFO[Container(10550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Property(StartTime))">$INFO[Container(10550).ListItem.Property(ChannelName),, • ]$INFO[Container(10550).ListItem.Property(StartTime),, - ]$INFO[Container(10550).ListItem.Property(EndTime),, • ]$INFO[Container(10550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.StartTime)">$INFO[Container(10550).ListItem.ChannelName,, • ]$INFO[Container(10550).ListItem.StartTime,, - ]$INFO[Container(10550).ListItem.EndTime,, • ]$INFO[Container(10550).ListItem.Genre]</value>
	</variable>
	<variable name="10560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10560">
		<value condition="String.Contains(Container(10560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10560).ListItem.label] $INFO[Container(10560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Title) + String.Contains(Container(10560).ListItem.FolderPath, pvr://)">$INFO[Container(10560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Season) + !String.IsEmpty(Container(10560).ListItem.Episode) + !String.Contains(Container(10560).ListItem.TvShowTitle,Container(10560).ListItem.Title)">[UPPERCASE]S$INFO[Container(10560).ListItem.Season]E$INFO[Container(10560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Title)">$INFO[Container(10560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Label)">$INFO[Container(10560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10560">
		<value condition="!String.IsEmpty(Container(10560).ListItem.TvShowTitle) + !String.IsEmpty(Container(10560).ListItem.Genre)">$INFO[Container(10560).ListItem.TvShowTitle,, • ]$INFO[Container(10560).ListItem.Year,, • ]$INFO[Container(10560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.TvShowTitle)">$INFO[Container(10560).ListItem.TvShowTitle,, • ]$INFO[Container(10560).ListItem.Premiered,, • ]$INFO[Container(10560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Year)">$INFO[Container(10560).ListItem.Year,, • ]$INFO[Container(10560).ListItem.Duration,,min. • ]$INFO[Container(10560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Artist) + !String.IsEmpty(Container(10560).ListItem.Album)">$INFO[Container(10560).ListItem.Artist,, • ]$INFO[Container(10560).ListItem.Album,, • ]$INFO[Container(10560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Property(StartTime))">$INFO[Container(10560).ListItem.Property(ChannelName),, • ]$INFO[Container(10560).ListItem.Property(StartTime),, - ]$INFO[Container(10560).ListItem.Property(EndTime),, • ]$INFO[Container(10560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.StartTime)">$INFO[Container(10560).ListItem.ChannelName,, • ]$INFO[Container(10560).ListItem.StartTime,, - ]$INFO[Container(10560).ListItem.EndTime,, • ]$INFO[Container(10560).ListItem.Genre]</value>
	</variable>
	<variable name="10570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10570">
		<value condition="String.Contains(Container(10570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10570).ListItem.label] $INFO[Container(10570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Title) + String.Contains(Container(10570).ListItem.FolderPath, pvr://)">$INFO[Container(10570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Season) + !String.IsEmpty(Container(10570).ListItem.Episode) + !String.Contains(Container(10570).ListItem.TvShowTitle,Container(10570).ListItem.Title)">[UPPERCASE]S$INFO[Container(10570).ListItem.Season]E$INFO[Container(10570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Title)">$INFO[Container(10570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Label)">$INFO[Container(10570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10570">
		<value condition="!String.IsEmpty(Container(10570).ListItem.TvShowTitle) + !String.IsEmpty(Container(10570).ListItem.Genre)">$INFO[Container(10570).ListItem.TvShowTitle,, • ]$INFO[Container(10570).ListItem.Year,, • ]$INFO[Container(10570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.TvShowTitle)">$INFO[Container(10570).ListItem.TvShowTitle,, • ]$INFO[Container(10570).ListItem.Premiered,, • ]$INFO[Container(10570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Year)">$INFO[Container(10570).ListItem.Year,, • ]$INFO[Container(10570).ListItem.Duration,,min. • ]$INFO[Container(10570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Artist) + !String.IsEmpty(Container(10570).ListItem.Album)">$INFO[Container(10570).ListItem.Artist,, • ]$INFO[Container(10570).ListItem.Album,, • ]$INFO[Container(10570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Property(StartTime))">$INFO[Container(10570).ListItem.Property(ChannelName),, • ]$INFO[Container(10570).ListItem.Property(StartTime),, - ]$INFO[Container(10570).ListItem.Property(EndTime),, • ]$INFO[Container(10570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.StartTime)">$INFO[Container(10570).ListItem.ChannelName,, • ]$INFO[Container(10570).ListItem.StartTime,, - ]$INFO[Container(10570).ListItem.EndTime,, • ]$INFO[Container(10570).ListItem.Genre]</value>
	</variable>
	<variable name="10580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10580">
		<value condition="String.Contains(Container(10580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10580).ListItem.label] $INFO[Container(10580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Title) + String.Contains(Container(10580).ListItem.FolderPath, pvr://)">$INFO[Container(10580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Season) + !String.IsEmpty(Container(10580).ListItem.Episode) + !String.Contains(Container(10580).ListItem.TvShowTitle,Container(10580).ListItem.Title)">[UPPERCASE]S$INFO[Container(10580).ListItem.Season]E$INFO[Container(10580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Title)">$INFO[Container(10580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Label)">$INFO[Container(10580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10580">
		<value condition="!String.IsEmpty(Container(10580).ListItem.TvShowTitle) + !String.IsEmpty(Container(10580).ListItem.Genre)">$INFO[Container(10580).ListItem.TvShowTitle,, • ]$INFO[Container(10580).ListItem.Year,, • ]$INFO[Container(10580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.TvShowTitle)">$INFO[Container(10580).ListItem.TvShowTitle,, • ]$INFO[Container(10580).ListItem.Premiered,, • ]$INFO[Container(10580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Year)">$INFO[Container(10580).ListItem.Year,, • ]$INFO[Container(10580).ListItem.Duration,,min. • ]$INFO[Container(10580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Artist) + !String.IsEmpty(Container(10580).ListItem.Album)">$INFO[Container(10580).ListItem.Artist,, • ]$INFO[Container(10580).ListItem.Album,, • ]$INFO[Container(10580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Property(StartTime))">$INFO[Container(10580).ListItem.Property(ChannelName),, • ]$INFO[Container(10580).ListItem.Property(StartTime),, - ]$INFO[Container(10580).ListItem.Property(EndTime),, • ]$INFO[Container(10580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.StartTime)">$INFO[Container(10580).ListItem.ChannelName,, • ]$INFO[Container(10580).ListItem.StartTime,, - ]$INFO[Container(10580).ListItem.EndTime,, • ]$INFO[Container(10580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-10">
		<value condition="Skin.String(widgetvalue-animemovies,7)" />
		<value condition="Skin.String(widgetvalue-animemovies,6)" />
		<value condition="Skin.String(widgetvalue-animemovies,5)" />
		<value condition="Skin.String(widgetvalue-animemovies,4)" />
		<value condition="Skin.String(widgetvalue-animemovies,3)" />
		<value condition="Skin.String(widgetvalue-animemovies,2)" />
		<value condition="Skin.String(widgetvalue-animemovies,1)">Recently Added Anime Movies</value>
		<value>Anime Movies On Deck</value>
	</variable>
	<variable name="11510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-14/14_recentepisodes.xml/</value>
	</variable>
	<variable name="widgetinfolabel-11510">
		<value condition="String.Contains(Container(11510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11510).ListItem.label] $INFO[Container(11510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Title) + String.Contains(Container(11510).ListItem.FolderPath, pvr://)">$INFO[Container(11510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Season) + !String.IsEmpty(Container(11510).ListItem.Episode) + !String.Contains(Container(11510).ListItem.TvShowTitle,Container(11510).ListItem.Title)">[UPPERCASE]S$INFO[Container(11510).ListItem.Season]E$INFO[Container(11510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Title)">$INFO[Container(11510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Label)">$INFO[Container(11510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11510">
		<value condition="!String.IsEmpty(Container(11510).ListItem.TvShowTitle) + !String.IsEmpty(Container(11510).ListItem.Genre)">$INFO[Container(11510).ListItem.TvShowTitle,, • ]$INFO[Container(11510).ListItem.Year,, • ]$INFO[Container(11510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.TvShowTitle)">$INFO[Container(11510).ListItem.TvShowTitle,, • ]$INFO[Container(11510).ListItem.Premiered,, • ]$INFO[Container(11510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Year)">$INFO[Container(11510).ListItem.Year,, • ]$INFO[Container(11510).ListItem.Duration,,min. • ]$INFO[Container(11510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Artist) + !String.IsEmpty(Container(11510).ListItem.Album)">$INFO[Container(11510).ListItem.Artist,, • ]$INFO[Container(11510).ListItem.Album,, • ]$INFO[Container(11510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Property(StartTime))">$INFO[Container(11510).ListItem.Property(ChannelName),, • ]$INFO[Container(11510).ListItem.Property(StartTime),, - ]$INFO[Container(11510).ListItem.Property(EndTime),, • ]$INFO[Container(11510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.StartTime)">$INFO[Container(11510).ListItem.ChannelName,, • ]$INFO[Container(11510).ListItem.StartTime,, - ]$INFO[Container(11510).ListItem.EndTime,, • ]$INFO[Container(11510).ListItem.Genre]</value>
	</variable>
	<variable name="11520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-14/14_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-11520">
		<value condition="String.Contains(Container(11520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11520).ListItem.label] $INFO[Container(11520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Title) + String.Contains(Container(11520).ListItem.FolderPath, pvr://)">$INFO[Container(11520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Season) + !String.IsEmpty(Container(11520).ListItem.Episode) + !String.Contains(Container(11520).ListItem.TvShowTitle,Container(11520).ListItem.Title)">[UPPERCASE]S$INFO[Container(11520).ListItem.Season]E$INFO[Container(11520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Title)">$INFO[Container(11520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Label)">$INFO[Container(11520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11520">
		<value condition="!String.IsEmpty(Container(11520).ListItem.TvShowTitle) + !String.IsEmpty(Container(11520).ListItem.Genre)">$INFO[Container(11520).ListItem.TvShowTitle,, • ]$INFO[Container(11520).ListItem.Year,, • ]$INFO[Container(11520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.TvShowTitle)">$INFO[Container(11520).ListItem.TvShowTitle,, • ]$INFO[Container(11520).ListItem.Premiered,, • ]$INFO[Container(11520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Year)">$INFO[Container(11520).ListItem.Year,, • ]$INFO[Container(11520).ListItem.Duration,,min. • ]$INFO[Container(11520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Artist) + !String.IsEmpty(Container(11520).ListItem.Album)">$INFO[Container(11520).ListItem.Artist,, • ]$INFO[Container(11520).ListItem.Album,, • ]$INFO[Container(11520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Property(StartTime))">$INFO[Container(11520).ListItem.Property(ChannelName),, • ]$INFO[Container(11520).ListItem.Property(StartTime),, - ]$INFO[Container(11520).ListItem.Property(EndTime),, • ]$INFO[Container(11520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.StartTime)">$INFO[Container(11520).ListItem.ChannelName,, • ]$INFO[Container(11520).ListItem.StartTime,, - ]$INFO[Container(11520).ListItem.EndTime,, • ]$INFO[Container(11520).ListItem.Genre]</value>
	</variable>
	<variable name="11530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11530">
		<value condition="String.Contains(Container(11530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11530).ListItem.label] $INFO[Container(11530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Title) + String.Contains(Container(11530).ListItem.FolderPath, pvr://)">$INFO[Container(11530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Season) + !String.IsEmpty(Container(11530).ListItem.Episode) + !String.Contains(Container(11530).ListItem.TvShowTitle,Container(11530).ListItem.Title)">[UPPERCASE]S$INFO[Container(11530).ListItem.Season]E$INFO[Container(11530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Title)">$INFO[Container(11530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Label)">$INFO[Container(11530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11530">
		<value condition="!String.IsEmpty(Container(11530).ListItem.TvShowTitle) + !String.IsEmpty(Container(11530).ListItem.Genre)">$INFO[Container(11530).ListItem.TvShowTitle,, • ]$INFO[Container(11530).ListItem.Year,, • ]$INFO[Container(11530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.TvShowTitle)">$INFO[Container(11530).ListItem.TvShowTitle,, • ]$INFO[Container(11530).ListItem.Premiered,, • ]$INFO[Container(11530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Year)">$INFO[Container(11530).ListItem.Year,, • ]$INFO[Container(11530).ListItem.Duration,,min. • ]$INFO[Container(11530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Artist) + !String.IsEmpty(Container(11530).ListItem.Album)">$INFO[Container(11530).ListItem.Artist,, • ]$INFO[Container(11530).ListItem.Album,, • ]$INFO[Container(11530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Property(StartTime))">$INFO[Container(11530).ListItem.Property(ChannelName),, • ]$INFO[Container(11530).ListItem.Property(StartTime),, - ]$INFO[Container(11530).ListItem.Property(EndTime),, • ]$INFO[Container(11530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.StartTime)">$INFO[Container(11530).ListItem.ChannelName,, • ]$INFO[Container(11530).ListItem.StartTime,, - ]$INFO[Container(11530).ListItem.EndTime,, • ]$INFO[Container(11530).ListItem.Genre]</value>
	</variable>
	<variable name="11540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11540">
		<value condition="String.Contains(Container(11540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11540).ListItem.label] $INFO[Container(11540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Title) + String.Contains(Container(11540).ListItem.FolderPath, pvr://)">$INFO[Container(11540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Season) + !String.IsEmpty(Container(11540).ListItem.Episode) + !String.Contains(Container(11540).ListItem.TvShowTitle,Container(11540).ListItem.Title)">[UPPERCASE]S$INFO[Container(11540).ListItem.Season]E$INFO[Container(11540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Title)">$INFO[Container(11540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Label)">$INFO[Container(11540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11540">
		<value condition="!String.IsEmpty(Container(11540).ListItem.TvShowTitle) + !String.IsEmpty(Container(11540).ListItem.Genre)">$INFO[Container(11540).ListItem.TvShowTitle,, • ]$INFO[Container(11540).ListItem.Year,, • ]$INFO[Container(11540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.TvShowTitle)">$INFO[Container(11540).ListItem.TvShowTitle,, • ]$INFO[Container(11540).ListItem.Premiered,, • ]$INFO[Container(11540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Year)">$INFO[Container(11540).ListItem.Year,, • ]$INFO[Container(11540).ListItem.Duration,,min. • ]$INFO[Container(11540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Artist) + !String.IsEmpty(Container(11540).ListItem.Album)">$INFO[Container(11540).ListItem.Artist,, • ]$INFO[Container(11540).ListItem.Album,, • ]$INFO[Container(11540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Property(StartTime))">$INFO[Container(11540).ListItem.Property(ChannelName),, • ]$INFO[Container(11540).ListItem.Property(StartTime),, - ]$INFO[Container(11540).ListItem.Property(EndTime),, • ]$INFO[Container(11540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.StartTime)">$INFO[Container(11540).ListItem.ChannelName,, • ]$INFO[Container(11540).ListItem.StartTime,, - ]$INFO[Container(11540).ListItem.EndTime,, • ]$INFO[Container(11540).ListItem.Genre]</value>
	</variable>
	<variable name="11550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11550">
		<value condition="String.Contains(Container(11550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11550).ListItem.label] $INFO[Container(11550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Title) + String.Contains(Container(11550).ListItem.FolderPath, pvr://)">$INFO[Container(11550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Season) + !String.IsEmpty(Container(11550).ListItem.Episode) + !String.Contains(Container(11550).ListItem.TvShowTitle,Container(11550).ListItem.Title)">[UPPERCASE]S$INFO[Container(11550).ListItem.Season]E$INFO[Container(11550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Title)">$INFO[Container(11550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Label)">$INFO[Container(11550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11550">
		<value condition="!String.IsEmpty(Container(11550).ListItem.TvShowTitle) + !String.IsEmpty(Container(11550).ListItem.Genre)">$INFO[Container(11550).ListItem.TvShowTitle,, • ]$INFO[Container(11550).ListItem.Year,, • ]$INFO[Container(11550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.TvShowTitle)">$INFO[Container(11550).ListItem.TvShowTitle,, • ]$INFO[Container(11550).ListItem.Premiered,, • ]$INFO[Container(11550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Year)">$INFO[Container(11550).ListItem.Year,, • ]$INFO[Container(11550).ListItem.Duration,,min. • ]$INFO[Container(11550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Artist) + !String.IsEmpty(Container(11550).ListItem.Album)">$INFO[Container(11550).ListItem.Artist,, • ]$INFO[Container(11550).ListItem.Album,, • ]$INFO[Container(11550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Property(StartTime))">$INFO[Container(11550).ListItem.Property(ChannelName),, • ]$INFO[Container(11550).ListItem.Property(StartTime),, - ]$INFO[Container(11550).ListItem.Property(EndTime),, • ]$INFO[Container(11550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.StartTime)">$INFO[Container(11550).ListItem.ChannelName,, • ]$INFO[Container(11550).ListItem.StartTime,, - ]$INFO[Container(11550).ListItem.EndTime,, • ]$INFO[Container(11550).ListItem.Genre]</value>
	</variable>
	<variable name="11560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11560">
		<value condition="String.Contains(Container(11560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11560).ListItem.label] $INFO[Container(11560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Title) + String.Contains(Container(11560).ListItem.FolderPath, pvr://)">$INFO[Container(11560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Season) + !String.IsEmpty(Container(11560).ListItem.Episode) + !String.Contains(Container(11560).ListItem.TvShowTitle,Container(11560).ListItem.Title)">[UPPERCASE]S$INFO[Container(11560).ListItem.Season]E$INFO[Container(11560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Title)">$INFO[Container(11560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Label)">$INFO[Container(11560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11560">
		<value condition="!String.IsEmpty(Container(11560).ListItem.TvShowTitle) + !String.IsEmpty(Container(11560).ListItem.Genre)">$INFO[Container(11560).ListItem.TvShowTitle,, • ]$INFO[Container(11560).ListItem.Year,, • ]$INFO[Container(11560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.TvShowTitle)">$INFO[Container(11560).ListItem.TvShowTitle,, • ]$INFO[Container(11560).ListItem.Premiered,, • ]$INFO[Container(11560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Year)">$INFO[Container(11560).ListItem.Year,, • ]$INFO[Container(11560).ListItem.Duration,,min. • ]$INFO[Container(11560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Artist) + !String.IsEmpty(Container(11560).ListItem.Album)">$INFO[Container(11560).ListItem.Artist,, • ]$INFO[Container(11560).ListItem.Album,, • ]$INFO[Container(11560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Property(StartTime))">$INFO[Container(11560).ListItem.Property(ChannelName),, • ]$INFO[Container(11560).ListItem.Property(StartTime),, - ]$INFO[Container(11560).ListItem.Property(EndTime),, • ]$INFO[Container(11560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.StartTime)">$INFO[Container(11560).ListItem.ChannelName,, • ]$INFO[Container(11560).ListItem.StartTime,, - ]$INFO[Container(11560).ListItem.EndTime,, • ]$INFO[Container(11560).ListItem.Genre]</value>
	</variable>
	<variable name="11570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11570">
		<value condition="String.Contains(Container(11570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11570).ListItem.label] $INFO[Container(11570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Title) + String.Contains(Container(11570).ListItem.FolderPath, pvr://)">$INFO[Container(11570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Season) + !String.IsEmpty(Container(11570).ListItem.Episode) + !String.Contains(Container(11570).ListItem.TvShowTitle,Container(11570).ListItem.Title)">[UPPERCASE]S$INFO[Container(11570).ListItem.Season]E$INFO[Container(11570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Title)">$INFO[Container(11570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Label)">$INFO[Container(11570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11570">
		<value condition="!String.IsEmpty(Container(11570).ListItem.TvShowTitle) + !String.IsEmpty(Container(11570).ListItem.Genre)">$INFO[Container(11570).ListItem.TvShowTitle,, • ]$INFO[Container(11570).ListItem.Year,, • ]$INFO[Container(11570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.TvShowTitle)">$INFO[Container(11570).ListItem.TvShowTitle,, • ]$INFO[Container(11570).ListItem.Premiered,, • ]$INFO[Container(11570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Year)">$INFO[Container(11570).ListItem.Year,, • ]$INFO[Container(11570).ListItem.Duration,,min. • ]$INFO[Container(11570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Artist) + !String.IsEmpty(Container(11570).ListItem.Album)">$INFO[Container(11570).ListItem.Artist,, • ]$INFO[Container(11570).ListItem.Album,, • ]$INFO[Container(11570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Property(StartTime))">$INFO[Container(11570).ListItem.Property(ChannelName),, • ]$INFO[Container(11570).ListItem.Property(StartTime),, - ]$INFO[Container(11570).ListItem.Property(EndTime),, • ]$INFO[Container(11570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.StartTime)">$INFO[Container(11570).ListItem.ChannelName,, • ]$INFO[Container(11570).ListItem.StartTime,, - ]$INFO[Container(11570).ListItem.EndTime,, • ]$INFO[Container(11570).ListItem.Genre]</value>
	</variable>
	<variable name="11580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-11580">
		<value condition="String.Contains(Container(11580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11580).ListItem.label] $INFO[Container(11580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Title) + String.Contains(Container(11580).ListItem.FolderPath, pvr://)">$INFO[Container(11580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Season) + !String.IsEmpty(Container(11580).ListItem.Episode) + !String.Contains(Container(11580).ListItem.TvShowTitle,Container(11580).ListItem.Title)">[UPPERCASE]S$INFO[Container(11580).ListItem.Season]E$INFO[Container(11580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Title)">$INFO[Container(11580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Label)">$INFO[Container(11580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-11580">
		<value condition="!String.IsEmpty(Container(11580).ListItem.TvShowTitle) + !String.IsEmpty(Container(11580).ListItem.Genre)">$INFO[Container(11580).ListItem.TvShowTitle,, • ]$INFO[Container(11580).ListItem.Year,, • ]$INFO[Container(11580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.TvShowTitle)">$INFO[Container(11580).ListItem.TvShowTitle,, • ]$INFO[Container(11580).ListItem.Premiered,, • ]$INFO[Container(11580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Year)">$INFO[Container(11580).ListItem.Year,, • ]$INFO[Container(11580).ListItem.Duration,,min. • ]$INFO[Container(11580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Artist) + !String.IsEmpty(Container(11580).ListItem.Album)">$INFO[Container(11580).ListItem.Artist,, • ]$INFO[Container(11580).ListItem.Album,, • ]$INFO[Container(11580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Property(StartTime))">$INFO[Container(11580).ListItem.Property(ChannelName),, • ]$INFO[Container(11580).ListItem.Property(StartTime),, - ]$INFO[Container(11580).ListItem.Property(EndTime),, • ]$INFO[Container(11580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.StartTime)">$INFO[Container(11580).ListItem.ChannelName,, • ]$INFO[Container(11580).ListItem.StartTime,, - ]$INFO[Container(11580).ListItem.EndTime,, • ]$INFO[Container(11580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-11">
		<value condition="Skin.String(widgetvalue-tv80s-90s,7)" />
		<value condition="Skin.String(widgetvalue-tv80s-90s,6)" />
		<value condition="Skin.String(widgetvalue-tv80s-90s,5)" />
		<value condition="Skin.String(widgetvalue-tv80s-90s,4)" />
		<value condition="Skin.String(widgetvalue-tv80s-90s,3)" />
		<value condition="Skin.String(widgetvalue-tv80s-90s,2)" />
		<value condition="Skin.String(widgetvalue-tv80s-90s,1)">TV 80's &amp; 90's - On Deck</value>
		<value>TV 80's &amp; 90's - Recently Added</value>
	</variable>
	<variable name="12510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-12/12_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-12510">
		<value condition="String.Contains(Container(12510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12510).ListItem.label] $INFO[Container(12510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Title) + String.Contains(Container(12510).ListItem.FolderPath, pvr://)">$INFO[Container(12510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Season) + !String.IsEmpty(Container(12510).ListItem.Episode) + !String.Contains(Container(12510).ListItem.TvShowTitle,Container(12510).ListItem.Title)">[UPPERCASE]S$INFO[Container(12510).ListItem.Season]E$INFO[Container(12510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Title)">$INFO[Container(12510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Label)">$INFO[Container(12510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-12510">
		<value condition="!String.IsEmpty(Container(12510).ListItem.TvShowTitle) + !String.IsEmpty(Container(12510).ListItem.Genre)">$INFO[Container(12510).ListItem.TvShowTitle,, • ]$INFO[Container(12510).ListItem.Year,, • ]$INFO[Container(12510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.TvShowTitle)">$INFO[Container(12510).ListItem.TvShowTitle,, • ]$INFO[Container(12510).ListItem.Premiered,, • ]$INFO[Container(12510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Year)">$INFO[Container(12510).ListItem.Year,, • ]$INFO[Container(12510).ListItem.Duration,,min. • ]$INFO[Container(12510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Artist) + !String.IsEmpty(Container(12510).ListItem.Album)">$INFO[Container(12510).ListItem.Artist,, • ]$INFO[Container(12510).ListItem.Album,, • ]$INFO[Container(12510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Property(StartTime))">$INFO[Container(12510).ListItem.Property(ChannelName),, • ]$INFO[Container(12510).ListItem.Property(StartTime),, - ]$INFO[Container(12510).ListItem.Property(EndTime),, • ]$INFO[Container(12510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.StartTime)">$INFO[Container(12510).ListItem.ChannelName,, • ]$INFO[Container(12510).ListItem.StartTime,, - ]$INFO[Container(12510).ListItem.EndTime,, • ]$INFO[Container(12510).ListItem.Genre]</value>
	</variable>
	<variable name="12520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-12/12_recentepisodes.xml/</value>
	</variable>
	<variable name="widgetinfolabel-12520">
		<value condition="String.Contains(Container(12520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12520).ListItem.label] $INFO[Container(12520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Title) + String.Contains(Container(12520).ListItem.FolderPath, pvr://)">$INFO[Container(12520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Season) + !String.IsEmpty(Container(12520).ListItem.Episode) + !String.Contains(Container(12520).ListItem.TvShowTitle,Container(12520).ListItem.Title)">[UPPERCASE]S$INFO[Container(12520).ListItem.Season]E$INFO[Container(12520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Title)">$INFO[Container(12520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Label)">$INFO[Container(12520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-12520">
		<value condition="!String.IsEmpty(Container(12520).ListItem.TvShowTitle) + !String.IsEmpty(Container(12520).ListItem.Genre)">$INFO[Container(12520).ListItem.TvShowTitle,, • ]$INFO[Container(12520).ListItem.Year,, • ]$INFO[Container(12520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.TvShowTitle)">$INFO[Container(12520).ListItem.TvShowTitle,, • ]$INFO[Container(12520).ListItem.Premiered,, • ]$INFO[Container(12520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Year)">$INFO[Container(12520).ListItem.Year,, • ]$INFO[Container(12520).ListItem.Duration,,min. • ]$INFO[Container(12520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Artist) + !String.IsEmpty(Container(12520).ListItem.Album)">$INFO[Container(12520).ListItem.Artist,, • ]$INFO[Container(12520).ListItem.Album,, • ]$INFO[Container(12520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Property(StartTime))">$INFO[Container(12520).ListItem.Property(ChannelName),, • ]$INFO[Container(12520).ListItem.Property(StartTime),, - ]$INFO[Container(12520).ListItem.Property(EndTime),, • ]$INFO[Container(12520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.StartTime)">$INFO[Container(12520).ListItem.ChannelName,, • ]$INFO[Container(12520).ListItem.StartTime,, - ]$INFO[Container(12520).ListItem.EndTime,, • ]$INFO[Container(12520).ListItem.Genre]</value>
	</variable>
	<variable name="12530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-12530">
		<value condition="String.Contains(Container(12530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12530).ListItem.label] $INFO[Container(12530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Title) + String.Contains(Container(12530).ListItem.FolderPath, pvr://)">$INFO[Container(12530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Season) + !String.IsEmpty(Container(12530).ListItem.Episode) + !String.Contains(Container(12530).ListItem.TvShowTitle,Container(12530).ListItem.Title)">[UPPERCASE]S$INFO[Container(12530).ListItem.Season]E$INFO[Container(12530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Title)">$INFO[Container(12530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Label)">$INFO[Container(12530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-12530">
		<value condition="!String.IsEmpty(Container(12530).ListItem.TvShowTitle) + !String.IsEmpty(Container(12530).ListItem.Genre)">$INFO[Container(12530).ListItem.TvShowTitle,, • ]$INFO[Container(12530).ListItem.Year,, • ]$INFO[Container(12530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.TvShowTitle)">$INFO[Container(12530).ListItem.TvShowTitle,, • ]$INFO[Container(12530).ListItem.Premiered,, • ]$INFO[Container(12530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Year)">$INFO[Container(12530).ListItem.Year,, • ]$INFO[Container(12530).ListItem.Duration,,min. • ]$INFO[Container(12530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Artist) + !String.IsEmpty(Container(12530).ListItem.Album)">$INFO[Container(12530).ListItem.Artist,, • ]$INFO[Container(12530).ListItem.Album,, • ]$INFO[Container(12530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Property(StartTime))">$INFO[Container(12530).ListItem.Property(ChannelName),, • ]$INFO[Container(12530).ListItem.Property(StartTime),, - ]$INFO[Container(12530).ListItem.Property(EndTime),, • ]$INFO[Container(12530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.StartTime)">$INFO[Container(12530).ListItem.ChannelName,, • ]$INFO[Container(12530).ListItem.StartTime,, - ]$INFO[Container(12530).ListItem.EndTime,, • ]$INFO[Container(12530).ListItem.Genre]</value>
	</variable>
	<variable name="12540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-12540">
		<value condition="String.Contains(Container(12540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12540).ListItem.label] $INFO[Container(12540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Title) + String.Contains(Container(12540).ListItem.FolderPath, pvr://)">$INFO[Container(12540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Season) + !String.IsEmpty(Container(12540).ListItem.Episode) + !String.Contains(Container(12540).ListItem.TvShowTitle,Container(12540).ListItem.Title)">[UPPERCASE]S$INFO[Container(12540).ListItem.Season]E$INFO[Container(12540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Title)">$INFO[Container(12540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Label)">$INFO[Container(12540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-12540">
		<value condition="!String.IsEmpty(Container(12540).ListItem.TvShowTitle) + !String.IsEmpty(Container(12540).ListItem.Genre)">$INFO[Container(12540).ListItem.TvShowTitle,, • ]$INFO[Container(12540).ListItem.Year,, • ]$INFO[Container(12540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.TvShowTitle)">$INFO[Container(12540).ListItem.TvShowTitle,, • ]$INFO[Container(12540).ListItem.Premiered,, • ]$INFO[Container(12540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Year)">$INFO[Container(12540).ListItem.Year,, • ]$INFO[Container(12540).ListItem.Duration,,min. • ]$INFO[Container(12540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Artist) + !String.IsEmpty(Container(12540).ListItem.Album)">$INFO[Container(12540).ListItem.Artist,, • ]$INFO[Container(12540).ListItem.Album,, • ]$INFO[Container(12540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Property(StartTime))">$INFO[Container(12540).ListItem.Property(ChannelName),, • ]$INFO[Container(12540).ListItem.Property(StartTime),, - ]$INFO[Container(12540).ListItem.Property(EndTime),, • ]$INFO[Container(12540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.StartTime)">$INFO[Container(12540).ListItem.ChannelName,, • ]$INFO[Container(12540).ListItem.StartTime,, - ]$INFO[Container(12540).ListItem.EndTime,, • ]$INFO[Container(12540).ListItem.Genre]</value>
	</variable>
	<variable name="12550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-12550">
		<value condition="String.Contains(Container(12550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12550).ListItem.label] $INFO[Container(12550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Title) + String.Contains(Container(12550).ListItem.FolderPath, pvr://)">$INFO[Container(12550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Season) + !String.IsEmpty(Container(12550).ListItem.Episode) + !String.Contains(Container(12550).ListItem.TvShowTitle,Container(12550).ListItem.Title)">[UPPERCASE]S$INFO[Container(12550).ListItem.Season]E$INFO[Container(12550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Title)">$INFO[Container(12550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Label)">$INFO[Container(12550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-12550">
		<value condition="!String.IsEmpty(Container(12550).ListItem.TvShowTitle) + !String.IsEmpty(Container(12550).ListItem.Genre)">$INFO[Container(12550).ListItem.TvShowTitle,, • ]$INFO[Container(12550).ListItem.Year,, • ]$INFO[Container(12550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.TvShowTitle)">$INFO[Container(12550).ListItem.TvShowTitle,, • ]$INFO[Container(12550).ListItem.Premiered,, • ]$INFO[Container(12550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Year)">$INFO[Container(12550).ListItem.Year,, • ]$INFO[Container(12550).ListItem.Duration,,min. • ]$INFO[Container(12550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Artist) + !String.IsEmpty(Container(12550).ListItem.Album)">$INFO[Container(12550).ListItem.Artist,, • ]$INFO[Container(12550).ListItem.Album,, • ]$INFO[Container(12550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Property(StartTime))">$INFO[Container(12550).ListItem.Property(ChannelName),, • ]$INFO[Container(12550).ListItem.Property(StartTime),, - ]$INFO[Container(12550).ListItem.Property(EndTime),, • ]$INFO[Container(12550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.StartTime)">$INFO[Container(12550).ListItem.ChannelName,, • ]$INFO[Container(12550).ListItem.StartTime,, - ]$INFO[Container(12550).ListItem.EndTime,, • ]$INFO[Container(12550).ListItem.Genre]</value>
	</variable>
	<variable name="12560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-12560">
		<value condition="String.Contains(Container(12560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12560).ListItem.label] $INFO[Container(12560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Title) + String.Contains(Container(12560).ListItem.FolderPath, pvr://)">$INFO[Container(12560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Season) + !String.IsEmpty(Container(12560).ListItem.Episode) + !String.Contains(Container(12560).ListItem.TvShowTitle,Container(12560).ListItem.Title)">[UPPERCASE]S$INFO[Container(12560).ListItem.Season]E$INFO[Container(12560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Title)">$INFO[Container(12560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Label)">$INFO[Container(12560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-12560">
		<value condition="!String.IsEmpty(Container(12560).ListItem.TvShowTitle) + !String.IsEmpty(Container(12560).ListItem.Genre)">$INFO[Container(12560).ListItem.TvShowTitle,, • ]$INFO[Container(12560).ListItem.Year,, • ]$INFO[Container(12560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.TvShowTitle)">$INFO[Container(12560).ListItem.TvShowTitle,, • ]$INFO[Container(12560).ListItem.Premiered,, • ]$INFO[Container(12560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Year)">$INFO[Container(12560).ListItem.Year,, • ]$INFO[Container(12560).ListItem.Duration,,min. • ]$INFO[Container(12560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Artist) + !String.IsEmpty(Container(12560).ListItem.Album)">$INFO[Container(12560).ListItem.Artist,, • ]$INFO[Container(12560).ListItem.Album,, • ]$INFO[Container(12560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Property(StartTime))">$INFO[Container(12560).ListItem.Property(ChannelName),, • ]$INFO[Container(12560).ListItem.Property(StartTime),, - ]$INFO[Container(12560).ListItem.Property(EndTime),, • ]$INFO[Container(12560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.StartTime)">$INFO[Container(12560).ListItem.ChannelName,, • ]$INFO[Container(12560).ListItem.StartTime,, - ]$INFO[Container(12560).ListItem.EndTime,, • ]$INFO[Container(12560).ListItem.Genre]</value>
	</variable>
	<variable name="12570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-12570">
		<value condition="String.Contains(Container(12570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12570).ListItem.label] $INFO[Container(12570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Title) + String.Contains(Container(12570).ListItem.FolderPath, pvr://)">$INFO[Container(12570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Season) + !String.IsEmpty(Container(12570).ListItem.Episode) + !String.Contains(Container(12570).ListItem.TvShowTitle,Container(12570).ListItem.Title)">[UPPERCASE]S$INFO[Container(12570).ListItem.Season]E$INFO[Container(12570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Title)">$INFO[Container(12570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Label)">$INFO[Container(12570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-12570">
		<value condition="!String.IsEmpty(Container(12570).ListItem.TvShowTitle) + !String.IsEmpty(Container(12570).ListItem.Genre)">$INFO[Container(12570).ListItem.TvShowTitle,, • ]$INFO[Container(12570).ListItem.Year,, • ]$INFO[Container(12570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.TvShowTitle)">$INFO[Container(12570).ListItem.TvShowTitle,, • ]$INFO[Container(12570).ListItem.Premiered,, • ]$INFO[Container(12570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Year)">$INFO[Container(12570).ListItem.Year,, • ]$INFO[Container(12570).ListItem.Duration,,min. • ]$INFO[Container(12570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Artist) + !String.IsEmpty(Container(12570).ListItem.Album)">$INFO[Container(12570).ListItem.Artist,, • ]$INFO[Container(12570).ListItem.Album,, • ]$INFO[Container(12570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Property(StartTime))">$INFO[Container(12570).ListItem.Property(ChannelName),, • ]$INFO[Container(12570).ListItem.Property(StartTime),, - ]$INFO[Container(12570).ListItem.Property(EndTime),, • ]$INFO[Container(12570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.StartTime)">$INFO[Container(12570).ListItem.ChannelName,, • ]$INFO[Container(12570).ListItem.StartTime,, - ]$INFO[Container(12570).ListItem.EndTime,, • ]$INFO[Container(12570).ListItem.Genre]</value>
	</variable>
	<variable name="12580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-12580">
		<value condition="String.Contains(Container(12580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12580).ListItem.label] $INFO[Container(12580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Title) + String.Contains(Container(12580).ListItem.FolderPath, pvr://)">$INFO[Container(12580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Season) + !String.IsEmpty(Container(12580).ListItem.Episode) + !String.Contains(Container(12580).ListItem.TvShowTitle,Container(12580).ListItem.Title)">[UPPERCASE]S$INFO[Container(12580).ListItem.Season]E$INFO[Container(12580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Title)">$INFO[Container(12580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Label)">$INFO[Container(12580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-12580">
		<value condition="!String.IsEmpty(Container(12580).ListItem.TvShowTitle) + !String.IsEmpty(Container(12580).ListItem.Genre)">$INFO[Container(12580).ListItem.TvShowTitle,, • ]$INFO[Container(12580).ListItem.Year,, • ]$INFO[Container(12580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.TvShowTitle)">$INFO[Container(12580).ListItem.TvShowTitle,, • ]$INFO[Container(12580).ListItem.Premiered,, • ]$INFO[Container(12580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Year)">$INFO[Container(12580).ListItem.Year,, • ]$INFO[Container(12580).ListItem.Duration,,min. • ]$INFO[Container(12580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Artist) + !String.IsEmpty(Container(12580).ListItem.Album)">$INFO[Container(12580).ListItem.Artist,, • ]$INFO[Container(12580).ListItem.Album,, • ]$INFO[Container(12580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Property(StartTime))">$INFO[Container(12580).ListItem.Property(ChannelName),, • ]$INFO[Container(12580).ListItem.Property(StartTime),, - ]$INFO[Container(12580).ListItem.Property(EndTime),, • ]$INFO[Container(12580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.StartTime)">$INFO[Container(12580).ListItem.ChannelName,, • ]$INFO[Container(12580).ListItem.StartTime,, - ]$INFO[Container(12580).ListItem.EndTime,, • ]$INFO[Container(12580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-12">
		<value condition="Skin.String(widgetvalue-tvdisney,7)" />
		<value condition="Skin.String(widgetvalue-tvdisney,6)" />
		<value condition="Skin.String(widgetvalue-tvdisney,5)" />
		<value condition="Skin.String(widgetvalue-tvdisney,4)" />
		<value condition="Skin.String(widgetvalue-tvdisney,3)" />
		<value condition="Skin.String(widgetvalue-tvdisney,2)" />
		<value condition="Skin.String(widgetvalue-tvdisney,1)">Recently Added Disney Shows</value>
		<value>TV Disney - On Deck</value>
	</variable>
	<variable name="13510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-13/13_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-13510">
		<value condition="String.Contains(Container(13510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13510).ListItem.label] $INFO[Container(13510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(13510).ListItem.Title) + String.Contains(Container(13510).ListItem.FolderPath, pvr://)">$INFO[Container(13510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13510).ListItem.Season) + !String.IsEmpty(Container(13510).ListItem.Episode) + !String.Contains(Container(13510).ListItem.TvShowTitle,Container(13510).ListItem.Title)">[UPPERCASE]S$INFO[Container(13510).ListItem.Season]E$INFO[Container(13510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13510).ListItem.Title)">$INFO[Container(13510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13510).ListItem.Label)">$INFO[Container(13510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13510">
		<value condition="!String.IsEmpty(Container(13510).ListItem.TvShowTitle) + !String.IsEmpty(Container(13510).ListItem.Genre)">$INFO[Container(13510).ListItem.TvShowTitle,, • ]$INFO[Container(13510).ListItem.Year,, • ]$INFO[Container(13510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13510).ListItem.TvShowTitle)">$INFO[Container(13510).ListItem.TvShowTitle,, • ]$INFO[Container(13510).ListItem.Premiered,, • ]$INFO[Container(13510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(13510).ListItem.Year)">$INFO[Container(13510).ListItem.Year,, • ]$INFO[Container(13510).ListItem.Duration,,min. • ]$INFO[Container(13510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13510).ListItem.Artist) + !String.IsEmpty(Container(13510).ListItem.Album)">$INFO[Container(13510).ListItem.Artist,, • ]$INFO[Container(13510).ListItem.Album,, • ]$INFO[Container(13510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(13510).ListItem.Property(StartTime))">$INFO[Container(13510).ListItem.Property(ChannelName),, • ]$INFO[Container(13510).ListItem.Property(StartTime),, - ]$INFO[Container(13510).ListItem.Property(EndTime),, • ]$INFO[Container(13510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13510).ListItem.StartTime)">$INFO[Container(13510).ListItem.ChannelName,, • ]$INFO[Container(13510).ListItem.StartTime,, - ]$INFO[Container(13510).ListItem.EndTime,, • ]$INFO[Container(13510).ListItem.Genre]</value>
	</variable>
	<variable name="13520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-13/13_recentepisodes.xml/</value>
	</variable>
	<variable name="widgetinfolabel-13520">
		<value condition="String.Contains(Container(13520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13520).ListItem.label] $INFO[Container(13520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(13520).ListItem.Title) + String.Contains(Container(13520).ListItem.FolderPath, pvr://)">$INFO[Container(13520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13520).ListItem.Season) + !String.IsEmpty(Container(13520).ListItem.Episode) + !String.Contains(Container(13520).ListItem.TvShowTitle,Container(13520).ListItem.Title)">[UPPERCASE]S$INFO[Container(13520).ListItem.Season]E$INFO[Container(13520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13520).ListItem.Title)">$INFO[Container(13520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13520).ListItem.Label)">$INFO[Container(13520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13520">
		<value condition="!String.IsEmpty(Container(13520).ListItem.TvShowTitle) + !String.IsEmpty(Container(13520).ListItem.Genre)">$INFO[Container(13520).ListItem.TvShowTitle,, • ]$INFO[Container(13520).ListItem.Year,, • ]$INFO[Container(13520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13520).ListItem.TvShowTitle)">$INFO[Container(13520).ListItem.TvShowTitle,, • ]$INFO[Container(13520).ListItem.Premiered,, • ]$INFO[Container(13520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(13520).ListItem.Year)">$INFO[Container(13520).ListItem.Year,, • ]$INFO[Container(13520).ListItem.Duration,,min. • ]$INFO[Container(13520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13520).ListItem.Artist) + !String.IsEmpty(Container(13520).ListItem.Album)">$INFO[Container(13520).ListItem.Artist,, • ]$INFO[Container(13520).ListItem.Album,, • ]$INFO[Container(13520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(13520).ListItem.Property(StartTime))">$INFO[Container(13520).ListItem.Property(ChannelName),, • ]$INFO[Container(13520).ListItem.Property(StartTime),, - ]$INFO[Container(13520).ListItem.Property(EndTime),, • ]$INFO[Container(13520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13520).ListItem.StartTime)">$INFO[Container(13520).ListItem.ChannelName,, • ]$INFO[Container(13520).ListItem.StartTime,, - ]$INFO[Container(13520).ListItem.EndTime,, • ]$INFO[Container(13520).ListItem.Genre]</value>
	</variable>
	<variable name="13530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13530">
		<value condition="String.Contains(Container(13530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13530).ListItem.label] $INFO[Container(13530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(13530).ListItem.Title) + String.Contains(Container(13530).ListItem.FolderPath, pvr://)">$INFO[Container(13530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13530).ListItem.Season) + !String.IsEmpty(Container(13530).ListItem.Episode) + !String.Contains(Container(13530).ListItem.TvShowTitle,Container(13530).ListItem.Title)">[UPPERCASE]S$INFO[Container(13530).ListItem.Season]E$INFO[Container(13530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13530).ListItem.Title)">$INFO[Container(13530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13530).ListItem.Label)">$INFO[Container(13530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13530">
		<value condition="!String.IsEmpty(Container(13530).ListItem.TvShowTitle) + !String.IsEmpty(Container(13530).ListItem.Genre)">$INFO[Container(13530).ListItem.TvShowTitle,, • ]$INFO[Container(13530).ListItem.Year,, • ]$INFO[Container(13530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13530).ListItem.TvShowTitle)">$INFO[Container(13530).ListItem.TvShowTitle,, • ]$INFO[Container(13530).ListItem.Premiered,, • ]$INFO[Container(13530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(13530).ListItem.Year)">$INFO[Container(13530).ListItem.Year,, • ]$INFO[Container(13530).ListItem.Duration,,min. • ]$INFO[Container(13530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13530).ListItem.Artist) + !String.IsEmpty(Container(13530).ListItem.Album)">$INFO[Container(13530).ListItem.Artist,, • ]$INFO[Container(13530).ListItem.Album,, • ]$INFO[Container(13530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(13530).ListItem.Property(StartTime))">$INFO[Container(13530).ListItem.Property(ChannelName),, • ]$INFO[Container(13530).ListItem.Property(StartTime),, - ]$INFO[Container(13530).ListItem.Property(EndTime),, • ]$INFO[Container(13530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13530).ListItem.StartTime)">$INFO[Container(13530).ListItem.ChannelName,, • ]$INFO[Container(13530).ListItem.StartTime,, - ]$INFO[Container(13530).ListItem.EndTime,, • ]$INFO[Container(13530).ListItem.Genre]</value>
	</variable>
	<variable name="13540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13540">
		<value condition="String.Contains(Container(13540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13540).ListItem.label] $INFO[Container(13540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(13540).ListItem.Title) + String.Contains(Container(13540).ListItem.FolderPath, pvr://)">$INFO[Container(13540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13540).ListItem.Season) + !String.IsEmpty(Container(13540).ListItem.Episode) + !String.Contains(Container(13540).ListItem.TvShowTitle,Container(13540).ListItem.Title)">[UPPERCASE]S$INFO[Container(13540).ListItem.Season]E$INFO[Container(13540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13540).ListItem.Title)">$INFO[Container(13540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13540).ListItem.Label)">$INFO[Container(13540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13540">
		<value condition="!String.IsEmpty(Container(13540).ListItem.TvShowTitle) + !String.IsEmpty(Container(13540).ListItem.Genre)">$INFO[Container(13540).ListItem.TvShowTitle,, • ]$INFO[Container(13540).ListItem.Year,, • ]$INFO[Container(13540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13540).ListItem.TvShowTitle)">$INFO[Container(13540).ListItem.TvShowTitle,, • ]$INFO[Container(13540).ListItem.Premiered,, • ]$INFO[Container(13540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(13540).ListItem.Year)">$INFO[Container(13540).ListItem.Year,, • ]$INFO[Container(13540).ListItem.Duration,,min. • ]$INFO[Container(13540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13540).ListItem.Artist) + !String.IsEmpty(Container(13540).ListItem.Album)">$INFO[Container(13540).ListItem.Artist,, • ]$INFO[Container(13540).ListItem.Album,, • ]$INFO[Container(13540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(13540).ListItem.Property(StartTime))">$INFO[Container(13540).ListItem.Property(ChannelName),, • ]$INFO[Container(13540).ListItem.Property(StartTime),, - ]$INFO[Container(13540).ListItem.Property(EndTime),, • ]$INFO[Container(13540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13540).ListItem.StartTime)">$INFO[Container(13540).ListItem.ChannelName,, • ]$INFO[Container(13540).ListItem.StartTime,, - ]$INFO[Container(13540).ListItem.EndTime,, • ]$INFO[Container(13540).ListItem.Genre]</value>
	</variable>
	<variable name="13550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13550">
		<value condition="String.Contains(Container(13550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13550).ListItem.label] $INFO[Container(13550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(13550).ListItem.Title) + String.Contains(Container(13550).ListItem.FolderPath, pvr://)">$INFO[Container(13550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13550).ListItem.Season) + !String.IsEmpty(Container(13550).ListItem.Episode) + !String.Contains(Container(13550).ListItem.TvShowTitle,Container(13550).ListItem.Title)">[UPPERCASE]S$INFO[Container(13550).ListItem.Season]E$INFO[Container(13550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13550).ListItem.Title)">$INFO[Container(13550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13550).ListItem.Label)">$INFO[Container(13550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13550">
		<value condition="!String.IsEmpty(Container(13550).ListItem.TvShowTitle) + !String.IsEmpty(Container(13550).ListItem.Genre)">$INFO[Container(13550).ListItem.TvShowTitle,, • ]$INFO[Container(13550).ListItem.Year,, • ]$INFO[Container(13550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13550).ListItem.TvShowTitle)">$INFO[Container(13550).ListItem.TvShowTitle,, • ]$INFO[Container(13550).ListItem.Premiered,, • ]$INFO[Container(13550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(13550).ListItem.Year)">$INFO[Container(13550).ListItem.Year,, • ]$INFO[Container(13550).ListItem.Duration,,min. • ]$INFO[Container(13550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13550).ListItem.Artist) + !String.IsEmpty(Container(13550).ListItem.Album)">$INFO[Container(13550).ListItem.Artist,, • ]$INFO[Container(13550).ListItem.Album,, • ]$INFO[Container(13550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(13550).ListItem.Property(StartTime))">$INFO[Container(13550).ListItem.Property(ChannelName),, • ]$INFO[Container(13550).ListItem.Property(StartTime),, - ]$INFO[Container(13550).ListItem.Property(EndTime),, • ]$INFO[Container(13550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13550).ListItem.StartTime)">$INFO[Container(13550).ListItem.ChannelName,, • ]$INFO[Container(13550).ListItem.StartTime,, - ]$INFO[Container(13550).ListItem.EndTime,, • ]$INFO[Container(13550).ListItem.Genre]</value>
	</variable>
	<variable name="13560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13560">
		<value condition="String.Contains(Container(13560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13560).ListItem.label] $INFO[Container(13560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(13560).ListItem.Title) + String.Contains(Container(13560).ListItem.FolderPath, pvr://)">$INFO[Container(13560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13560).ListItem.Season) + !String.IsEmpty(Container(13560).ListItem.Episode) + !String.Contains(Container(13560).ListItem.TvShowTitle,Container(13560).ListItem.Title)">[UPPERCASE]S$INFO[Container(13560).ListItem.Season]E$INFO[Container(13560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13560).ListItem.Title)">$INFO[Container(13560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13560).ListItem.Label)">$INFO[Container(13560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13560">
		<value condition="!String.IsEmpty(Container(13560).ListItem.TvShowTitle) + !String.IsEmpty(Container(13560).ListItem.Genre)">$INFO[Container(13560).ListItem.TvShowTitle,, • ]$INFO[Container(13560).ListItem.Year,, • ]$INFO[Container(13560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13560).ListItem.TvShowTitle)">$INFO[Container(13560).ListItem.TvShowTitle,, • ]$INFO[Container(13560).ListItem.Premiered,, • ]$INFO[Container(13560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(13560).ListItem.Year)">$INFO[Container(13560).ListItem.Year,, • ]$INFO[Container(13560).ListItem.Duration,,min. • ]$INFO[Container(13560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13560).ListItem.Artist) + !String.IsEmpty(Container(13560).ListItem.Album)">$INFO[Container(13560).ListItem.Artist,, • ]$INFO[Container(13560).ListItem.Album,, • ]$INFO[Container(13560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(13560).ListItem.Property(StartTime))">$INFO[Container(13560).ListItem.Property(ChannelName),, • ]$INFO[Container(13560).ListItem.Property(StartTime),, - ]$INFO[Container(13560).ListItem.Property(EndTime),, • ]$INFO[Container(13560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13560).ListItem.StartTime)">$INFO[Container(13560).ListItem.ChannelName,, • ]$INFO[Container(13560).ListItem.StartTime,, - ]$INFO[Container(13560).ListItem.EndTime,, • ]$INFO[Container(13560).ListItem.Genre]</value>
	</variable>
	<variable name="13570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13570">
		<value condition="String.Contains(Container(13570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13570).ListItem.label] $INFO[Container(13570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(13570).ListItem.Title) + String.Contains(Container(13570).ListItem.FolderPath, pvr://)">$INFO[Container(13570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13570).ListItem.Season) + !String.IsEmpty(Container(13570).ListItem.Episode) + !String.Contains(Container(13570).ListItem.TvShowTitle,Container(13570).ListItem.Title)">[UPPERCASE]S$INFO[Container(13570).ListItem.Season]E$INFO[Container(13570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13570).ListItem.Title)">$INFO[Container(13570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13570).ListItem.Label)">$INFO[Container(13570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13570">
		<value condition="!String.IsEmpty(Container(13570).ListItem.TvShowTitle) + !String.IsEmpty(Container(13570).ListItem.Genre)">$INFO[Container(13570).ListItem.TvShowTitle,, • ]$INFO[Container(13570).ListItem.Year,, • ]$INFO[Container(13570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13570).ListItem.TvShowTitle)">$INFO[Container(13570).ListItem.TvShowTitle,, • ]$INFO[Container(13570).ListItem.Premiered,, • ]$INFO[Container(13570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(13570).ListItem.Year)">$INFO[Container(13570).ListItem.Year,, • ]$INFO[Container(13570).ListItem.Duration,,min. • ]$INFO[Container(13570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13570).ListItem.Artist) + !String.IsEmpty(Container(13570).ListItem.Album)">$INFO[Container(13570).ListItem.Artist,, • ]$INFO[Container(13570).ListItem.Album,, • ]$INFO[Container(13570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(13570).ListItem.Property(StartTime))">$INFO[Container(13570).ListItem.Property(ChannelName),, • ]$INFO[Container(13570).ListItem.Property(StartTime),, - ]$INFO[Container(13570).ListItem.Property(EndTime),, • ]$INFO[Container(13570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13570).ListItem.StartTime)">$INFO[Container(13570).ListItem.ChannelName,, • ]$INFO[Container(13570).ListItem.StartTime,, - ]$INFO[Container(13570).ListItem.EndTime,, • ]$INFO[Container(13570).ListItem.Genre]</value>
	</variable>
	<variable name="13580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-13580">
		<value condition="String.Contains(Container(13580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(13580).ListItem.label] $INFO[Container(13580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(13580).ListItem.Title) + String.Contains(Container(13580).ListItem.FolderPath, pvr://)">$INFO[Container(13580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13580).ListItem.Season) + !String.IsEmpty(Container(13580).ListItem.Episode) + !String.Contains(Container(13580).ListItem.TvShowTitle,Container(13580).ListItem.Title)">[UPPERCASE]S$INFO[Container(13580).ListItem.Season]E$INFO[Container(13580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(13580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13580).ListItem.Title)">$INFO[Container(13580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(13580).ListItem.Label)">$INFO[Container(13580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-13580">
		<value condition="!String.IsEmpty(Container(13580).ListItem.TvShowTitle) + !String.IsEmpty(Container(13580).ListItem.Genre)">$INFO[Container(13580).ListItem.TvShowTitle,, • ]$INFO[Container(13580).ListItem.Year,, • ]$INFO[Container(13580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13580).ListItem.TvShowTitle)">$INFO[Container(13580).ListItem.TvShowTitle,, • ]$INFO[Container(13580).ListItem.Premiered,, • ]$INFO[Container(13580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(13580).ListItem.Year)">$INFO[Container(13580).ListItem.Year,, • ]$INFO[Container(13580).ListItem.Duration,,min. • ]$INFO[Container(13580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13580).ListItem.Artist) + !String.IsEmpty(Container(13580).ListItem.Album)">$INFO[Container(13580).ListItem.Artist,, • ]$INFO[Container(13580).ListItem.Album,, • ]$INFO[Container(13580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(13580).ListItem.Property(StartTime))">$INFO[Container(13580).ListItem.Property(ChannelName),, • ]$INFO[Container(13580).ListItem.Property(StartTime),, - ]$INFO[Container(13580).ListItem.Property(EndTime),, • ]$INFO[Container(13580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(13580).ListItem.StartTime)">$INFO[Container(13580).ListItem.ChannelName,, • ]$INFO[Container(13580).ListItem.StartTime,, - ]$INFO[Container(13580).ListItem.EndTime,, • ]$INFO[Container(13580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-13">
		<value condition="Skin.String(widgetvalue-tvnick,7)" />
		<value condition="Skin.String(widgetvalue-tvnick,6)" />
		<value condition="Skin.String(widgetvalue-tvnick,5)" />
		<value condition="Skin.String(widgetvalue-tvnick,4)" />
		<value condition="Skin.String(widgetvalue-tvnick,3)" />
		<value condition="Skin.String(widgetvalue-tvnick,2)" />
		<value condition="Skin.String(widgetvalue-tvnick,1)">Recently Added Nickelodeon Shows</value>
		<value>TV Nick - On Deck</value>
	</variable>
	<variable name="14510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-11/11_ondeck.xml/</value>
	</variable>
	<variable name="widgetinfolabel-14510">
		<value condition="String.Contains(Container(14510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14510).ListItem.label] $INFO[Container(14510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Title) + String.Contains(Container(14510).ListItem.FolderPath, pvr://)">$INFO[Container(14510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Season) + !String.IsEmpty(Container(14510).ListItem.Episode) + !String.Contains(Container(14510).ListItem.TvShowTitle,Container(14510).ListItem.Title)">[UPPERCASE]S$INFO[Container(14510).ListItem.Season]E$INFO[Container(14510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Title)">$INFO[Container(14510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Label)">$INFO[Container(14510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14510">
		<value condition="!String.IsEmpty(Container(14510).ListItem.TvShowTitle) + !String.IsEmpty(Container(14510).ListItem.Genre)">$INFO[Container(14510).ListItem.TvShowTitle,, • ]$INFO[Container(14510).ListItem.Year,, • ]$INFO[Container(14510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.TvShowTitle)">$INFO[Container(14510).ListItem.TvShowTitle,, • ]$INFO[Container(14510).ListItem.Premiered,, • ]$INFO[Container(14510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Year)">$INFO[Container(14510).ListItem.Year,, • ]$INFO[Container(14510).ListItem.Duration,,min. • ]$INFO[Container(14510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Artist) + !String.IsEmpty(Container(14510).ListItem.Album)">$INFO[Container(14510).ListItem.Artist,, • ]$INFO[Container(14510).ListItem.Album,, • ]$INFO[Container(14510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Property(StartTime))">$INFO[Container(14510).ListItem.Property(ChannelName),, • ]$INFO[Container(14510).ListItem.Property(StartTime),, - ]$INFO[Container(14510).ListItem.Property(EndTime),, • ]$INFO[Container(14510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.StartTime)">$INFO[Container(14510).ListItem.ChannelName,, • ]$INFO[Container(14510).ListItem.StartTime,, - ]$INFO[Container(14510).ListItem.EndTime,, • ]$INFO[Container(14510).ListItem.Genre]</value>
	</variable>
	<variable name="14520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>library://video/Plex-11/11_recentepisodes.xml/</value>
	</variable>
	<variable name="widgetinfolabel-14520">
		<value condition="String.Contains(Container(14520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14520).ListItem.label] $INFO[Container(14520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Title) + String.Contains(Container(14520).ListItem.FolderPath, pvr://)">$INFO[Container(14520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Season) + !String.IsEmpty(Container(14520).ListItem.Episode) + !String.Contains(Container(14520).ListItem.TvShowTitle,Container(14520).ListItem.Title)">[UPPERCASE]S$INFO[Container(14520).ListItem.Season]E$INFO[Container(14520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Title)">$INFO[Container(14520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Label)">$INFO[Container(14520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14520">
		<value condition="!String.IsEmpty(Container(14520).ListItem.TvShowTitle) + !String.IsEmpty(Container(14520).ListItem.Genre)">$INFO[Container(14520).ListItem.TvShowTitle,, • ]$INFO[Container(14520).ListItem.Year,, • ]$INFO[Container(14520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.TvShowTitle)">$INFO[Container(14520).ListItem.TvShowTitle,, • ]$INFO[Container(14520).ListItem.Premiered,, • ]$INFO[Container(14520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Year)">$INFO[Container(14520).ListItem.Year,, • ]$INFO[Container(14520).ListItem.Duration,,min. • ]$INFO[Container(14520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Artist) + !String.IsEmpty(Container(14520).ListItem.Album)">$INFO[Container(14520).ListItem.Artist,, • ]$INFO[Container(14520).ListItem.Album,, • ]$INFO[Container(14520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Property(StartTime))">$INFO[Container(14520).ListItem.Property(ChannelName),, • ]$INFO[Container(14520).ListItem.Property(StartTime),, - ]$INFO[Container(14520).ListItem.Property(EndTime),, • ]$INFO[Container(14520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.StartTime)">$INFO[Container(14520).ListItem.ChannelName,, • ]$INFO[Container(14520).ListItem.StartTime,, - ]$INFO[Container(14520).ListItem.EndTime,, • ]$INFO[Container(14520).ListItem.Genre]</value>
	</variable>
	<variable name="14530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14530">
		<value condition="String.Contains(Container(14530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14530).ListItem.label] $INFO[Container(14530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Title) + String.Contains(Container(14530).ListItem.FolderPath, pvr://)">$INFO[Container(14530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Season) + !String.IsEmpty(Container(14530).ListItem.Episode) + !String.Contains(Container(14530).ListItem.TvShowTitle,Container(14530).ListItem.Title)">[UPPERCASE]S$INFO[Container(14530).ListItem.Season]E$INFO[Container(14530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Title)">$INFO[Container(14530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Label)">$INFO[Container(14530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14530">
		<value condition="!String.IsEmpty(Container(14530).ListItem.TvShowTitle) + !String.IsEmpty(Container(14530).ListItem.Genre)">$INFO[Container(14530).ListItem.TvShowTitle,, • ]$INFO[Container(14530).ListItem.Year,, • ]$INFO[Container(14530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.TvShowTitle)">$INFO[Container(14530).ListItem.TvShowTitle,, • ]$INFO[Container(14530).ListItem.Premiered,, • ]$INFO[Container(14530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Year)">$INFO[Container(14530).ListItem.Year,, • ]$INFO[Container(14530).ListItem.Duration,,min. • ]$INFO[Container(14530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Artist) + !String.IsEmpty(Container(14530).ListItem.Album)">$INFO[Container(14530).ListItem.Artist,, • ]$INFO[Container(14530).ListItem.Album,, • ]$INFO[Container(14530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Property(StartTime))">$INFO[Container(14530).ListItem.Property(ChannelName),, • ]$INFO[Container(14530).ListItem.Property(StartTime),, - ]$INFO[Container(14530).ListItem.Property(EndTime),, • ]$INFO[Container(14530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.StartTime)">$INFO[Container(14530).ListItem.ChannelName,, • ]$INFO[Container(14530).ListItem.StartTime,, - ]$INFO[Container(14530).ListItem.EndTime,, • ]$INFO[Container(14530).ListItem.Genre]</value>
	</variable>
	<variable name="14540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14540">
		<value condition="String.Contains(Container(14540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14540).ListItem.label] $INFO[Container(14540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Title) + String.Contains(Container(14540).ListItem.FolderPath, pvr://)">$INFO[Container(14540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Season) + !String.IsEmpty(Container(14540).ListItem.Episode) + !String.Contains(Container(14540).ListItem.TvShowTitle,Container(14540).ListItem.Title)">[UPPERCASE]S$INFO[Container(14540).ListItem.Season]E$INFO[Container(14540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Title)">$INFO[Container(14540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Label)">$INFO[Container(14540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14540">
		<value condition="!String.IsEmpty(Container(14540).ListItem.TvShowTitle) + !String.IsEmpty(Container(14540).ListItem.Genre)">$INFO[Container(14540).ListItem.TvShowTitle,, • ]$INFO[Container(14540).ListItem.Year,, • ]$INFO[Container(14540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.TvShowTitle)">$INFO[Container(14540).ListItem.TvShowTitle,, • ]$INFO[Container(14540).ListItem.Premiered,, • ]$INFO[Container(14540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Year)">$INFO[Container(14540).ListItem.Year,, • ]$INFO[Container(14540).ListItem.Duration,,min. • ]$INFO[Container(14540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Artist) + !String.IsEmpty(Container(14540).ListItem.Album)">$INFO[Container(14540).ListItem.Artist,, • ]$INFO[Container(14540).ListItem.Album,, • ]$INFO[Container(14540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Property(StartTime))">$INFO[Container(14540).ListItem.Property(ChannelName),, • ]$INFO[Container(14540).ListItem.Property(StartTime),, - ]$INFO[Container(14540).ListItem.Property(EndTime),, • ]$INFO[Container(14540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.StartTime)">$INFO[Container(14540).ListItem.ChannelName,, • ]$INFO[Container(14540).ListItem.StartTime,, - ]$INFO[Container(14540).ListItem.EndTime,, • ]$INFO[Container(14540).ListItem.Genre]</value>
	</variable>
	<variable name="14550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14550">
		<value condition="String.Contains(Container(14550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14550).ListItem.label] $INFO[Container(14550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Title) + String.Contains(Container(14550).ListItem.FolderPath, pvr://)">$INFO[Container(14550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Season) + !String.IsEmpty(Container(14550).ListItem.Episode) + !String.Contains(Container(14550).ListItem.TvShowTitle,Container(14550).ListItem.Title)">[UPPERCASE]S$INFO[Container(14550).ListItem.Season]E$INFO[Container(14550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Title)">$INFO[Container(14550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Label)">$INFO[Container(14550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14550">
		<value condition="!String.IsEmpty(Container(14550).ListItem.TvShowTitle) + !String.IsEmpty(Container(14550).ListItem.Genre)">$INFO[Container(14550).ListItem.TvShowTitle,, • ]$INFO[Container(14550).ListItem.Year,, • ]$INFO[Container(14550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.TvShowTitle)">$INFO[Container(14550).ListItem.TvShowTitle,, • ]$INFO[Container(14550).ListItem.Premiered,, • ]$INFO[Container(14550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Year)">$INFO[Container(14550).ListItem.Year,, • ]$INFO[Container(14550).ListItem.Duration,,min. • ]$INFO[Container(14550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Artist) + !String.IsEmpty(Container(14550).ListItem.Album)">$INFO[Container(14550).ListItem.Artist,, • ]$INFO[Container(14550).ListItem.Album,, • ]$INFO[Container(14550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Property(StartTime))">$INFO[Container(14550).ListItem.Property(ChannelName),, • ]$INFO[Container(14550).ListItem.Property(StartTime),, - ]$INFO[Container(14550).ListItem.Property(EndTime),, • ]$INFO[Container(14550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.StartTime)">$INFO[Container(14550).ListItem.ChannelName,, • ]$INFO[Container(14550).ListItem.StartTime,, - ]$INFO[Container(14550).ListItem.EndTime,, • ]$INFO[Container(14550).ListItem.Genre]</value>
	</variable>
	<variable name="14560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14560">
		<value condition="String.Contains(Container(14560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14560).ListItem.label] $INFO[Container(14560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Title) + String.Contains(Container(14560).ListItem.FolderPath, pvr://)">$INFO[Container(14560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Season) + !String.IsEmpty(Container(14560).ListItem.Episode) + !String.Contains(Container(14560).ListItem.TvShowTitle,Container(14560).ListItem.Title)">[UPPERCASE]S$INFO[Container(14560).ListItem.Season]E$INFO[Container(14560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Title)">$INFO[Container(14560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Label)">$INFO[Container(14560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14560">
		<value condition="!String.IsEmpty(Container(14560).ListItem.TvShowTitle) + !String.IsEmpty(Container(14560).ListItem.Genre)">$INFO[Container(14560).ListItem.TvShowTitle,, • ]$INFO[Container(14560).ListItem.Year,, • ]$INFO[Container(14560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.TvShowTitle)">$INFO[Container(14560).ListItem.TvShowTitle,, • ]$INFO[Container(14560).ListItem.Premiered,, • ]$INFO[Container(14560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Year)">$INFO[Container(14560).ListItem.Year,, • ]$INFO[Container(14560).ListItem.Duration,,min. • ]$INFO[Container(14560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Artist) + !String.IsEmpty(Container(14560).ListItem.Album)">$INFO[Container(14560).ListItem.Artist,, • ]$INFO[Container(14560).ListItem.Album,, • ]$INFO[Container(14560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Property(StartTime))">$INFO[Container(14560).ListItem.Property(ChannelName),, • ]$INFO[Container(14560).ListItem.Property(StartTime),, - ]$INFO[Container(14560).ListItem.Property(EndTime),, • ]$INFO[Container(14560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.StartTime)">$INFO[Container(14560).ListItem.ChannelName,, • ]$INFO[Container(14560).ListItem.StartTime,, - ]$INFO[Container(14560).ListItem.EndTime,, • ]$INFO[Container(14560).ListItem.Genre]</value>
	</variable>
	<variable name="14570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14570">
		<value condition="String.Contains(Container(14570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14570).ListItem.label] $INFO[Container(14570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Title) + String.Contains(Container(14570).ListItem.FolderPath, pvr://)">$INFO[Container(14570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Season) + !String.IsEmpty(Container(14570).ListItem.Episode) + !String.Contains(Container(14570).ListItem.TvShowTitle,Container(14570).ListItem.Title)">[UPPERCASE]S$INFO[Container(14570).ListItem.Season]E$INFO[Container(14570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Title)">$INFO[Container(14570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Label)">$INFO[Container(14570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14570">
		<value condition="!String.IsEmpty(Container(14570).ListItem.TvShowTitle) + !String.IsEmpty(Container(14570).ListItem.Genre)">$INFO[Container(14570).ListItem.TvShowTitle,, • ]$INFO[Container(14570).ListItem.Year,, • ]$INFO[Container(14570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.TvShowTitle)">$INFO[Container(14570).ListItem.TvShowTitle,, • ]$INFO[Container(14570).ListItem.Premiered,, • ]$INFO[Container(14570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Year)">$INFO[Container(14570).ListItem.Year,, • ]$INFO[Container(14570).ListItem.Duration,,min. • ]$INFO[Container(14570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Artist) + !String.IsEmpty(Container(14570).ListItem.Album)">$INFO[Container(14570).ListItem.Artist,, • ]$INFO[Container(14570).ListItem.Album,, • ]$INFO[Container(14570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Property(StartTime))">$INFO[Container(14570).ListItem.Property(ChannelName),, • ]$INFO[Container(14570).ListItem.Property(StartTime),, - ]$INFO[Container(14570).ListItem.Property(EndTime),, • ]$INFO[Container(14570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.StartTime)">$INFO[Container(14570).ListItem.ChannelName,, • ]$INFO[Container(14570).ListItem.StartTime,, - ]$INFO[Container(14570).ListItem.EndTime,, • ]$INFO[Container(14570).ListItem.Genre]</value>
	</variable>
	<variable name="14580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14580">
		<value condition="String.Contains(Container(14580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14580).ListItem.label] $INFO[Container(14580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Title) + String.Contains(Container(14580).ListItem.FolderPath, pvr://)">$INFO[Container(14580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Season) + !String.IsEmpty(Container(14580).ListItem.Episode) + !String.Contains(Container(14580).ListItem.TvShowTitle,Container(14580).ListItem.Title)">[UPPERCASE]S$INFO[Container(14580).ListItem.Season]E$INFO[Container(14580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Title)">$INFO[Container(14580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Label)">$INFO[Container(14580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14580">
		<value condition="!String.IsEmpty(Container(14580).ListItem.TvShowTitle) + !String.IsEmpty(Container(14580).ListItem.Genre)">$INFO[Container(14580).ListItem.TvShowTitle,, • ]$INFO[Container(14580).ListItem.Year,, • ]$INFO[Container(14580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.TvShowTitle)">$INFO[Container(14580).ListItem.TvShowTitle,, • ]$INFO[Container(14580).ListItem.Premiered,, • ]$INFO[Container(14580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Year)">$INFO[Container(14580).ListItem.Year,, • ]$INFO[Container(14580).ListItem.Duration,,min. • ]$INFO[Container(14580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Artist) + !String.IsEmpty(Container(14580).ListItem.Album)">$INFO[Container(14580).ListItem.Artist,, • ]$INFO[Container(14580).ListItem.Album,, • ]$INFO[Container(14580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Property(StartTime))">$INFO[Container(14580).ListItem.Property(ChannelName),, • ]$INFO[Container(14580).ListItem.Property(StartTime),, - ]$INFO[Container(14580).ListItem.Property(EndTime),, • ]$INFO[Container(14580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.StartTime)">$INFO[Container(14580).ListItem.ChannelName,, • ]$INFO[Container(14580).ListItem.StartTime,, - ]$INFO[Container(14580).ListItem.EndTime,, • ]$INFO[Container(14580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-14">
		<value condition="Skin.String(widgetvalue-tvland,7)" />
		<value condition="Skin.String(widgetvalue-tvland,6)" />
		<value condition="Skin.String(widgetvalue-tvland,5)" />
		<value condition="Skin.String(widgetvalue-tvland,4)" />
		<value condition="Skin.String(widgetvalue-tvland,3)" />
		<value condition="Skin.String(widgetvalue-tvland,2)" />
		<value condition="Skin.String(widgetvalue-tvland,1)">Recently Added Classic TV Shows</value>
		<value>TV Land - On Deck</value>
	</variable>
	<variable name="15510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-15510">
		<value condition="String.Contains(Container(15510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15510).ListItem.label] $INFO[Container(15510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Title) + String.Contains(Container(15510).ListItem.FolderPath, pvr://)">$INFO[Container(15510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Season) + !String.IsEmpty(Container(15510).ListItem.Episode) + !String.Contains(Container(15510).ListItem.TvShowTitle,Container(15510).ListItem.Title)">[UPPERCASE]S$INFO[Container(15510).ListItem.Season]E$INFO[Container(15510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Title)">$INFO[Container(15510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Label)">$INFO[Container(15510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-15510">
		<value condition="!String.IsEmpty(Container(15510).ListItem.TvShowTitle) + !String.IsEmpty(Container(15510).ListItem.Genre)">$INFO[Container(15510).ListItem.TvShowTitle,, • ]$INFO[Container(15510).ListItem.Year,, • ]$INFO[Container(15510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.TvShowTitle)">$INFO[Container(15510).ListItem.TvShowTitle,, • ]$INFO[Container(15510).ListItem.Premiered,, • ]$INFO[Container(15510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Year)">$INFO[Container(15510).ListItem.Year,, • ]$INFO[Container(15510).ListItem.Duration,,min. • ]$INFO[Container(15510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Artist) + !String.IsEmpty(Container(15510).ListItem.Album)">$INFO[Container(15510).ListItem.Artist,, • ]$INFO[Container(15510).ListItem.Album,, • ]$INFO[Container(15510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Property(StartTime))">$INFO[Container(15510).ListItem.Property(ChannelName),, • ]$INFO[Container(15510).ListItem.Property(StartTime),, - ]$INFO[Container(15510).ListItem.Property(EndTime),, • ]$INFO[Container(15510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.StartTime)">$INFO[Container(15510).ListItem.ChannelName,, • ]$INFO[Container(15510).ListItem.StartTime,, - ]$INFO[Container(15510).ListItem.EndTime,, • ]$INFO[Container(15510).ListItem.Genre]</value>
	</variable>
	<variable name="15520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-15520">
		<value condition="String.Contains(Container(15520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15520).ListItem.label] $INFO[Container(15520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Title) + String.Contains(Container(15520).ListItem.FolderPath, pvr://)">$INFO[Container(15520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Season) + !String.IsEmpty(Container(15520).ListItem.Episode) + !String.Contains(Container(15520).ListItem.TvShowTitle,Container(15520).ListItem.Title)">[UPPERCASE]S$INFO[Container(15520).ListItem.Season]E$INFO[Container(15520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Title)">$INFO[Container(15520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Label)">$INFO[Container(15520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-15520">
		<value condition="!String.IsEmpty(Container(15520).ListItem.TvShowTitle) + !String.IsEmpty(Container(15520).ListItem.Genre)">$INFO[Container(15520).ListItem.TvShowTitle,, • ]$INFO[Container(15520).ListItem.Year,, • ]$INFO[Container(15520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.TvShowTitle)">$INFO[Container(15520).ListItem.TvShowTitle,, • ]$INFO[Container(15520).ListItem.Premiered,, • ]$INFO[Container(15520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Year)">$INFO[Container(15520).ListItem.Year,, • ]$INFO[Container(15520).ListItem.Duration,,min. • ]$INFO[Container(15520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Artist) + !String.IsEmpty(Container(15520).ListItem.Album)">$INFO[Container(15520).ListItem.Artist,, • ]$INFO[Container(15520).ListItem.Album,, • ]$INFO[Container(15520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Property(StartTime))">$INFO[Container(15520).ListItem.Property(ChannelName),, • ]$INFO[Container(15520).ListItem.Property(StartTime),, - ]$INFO[Container(15520).ListItem.Property(EndTime),, • ]$INFO[Container(15520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.StartTime)">$INFO[Container(15520).ListItem.ChannelName,, • ]$INFO[Container(15520).ListItem.StartTime,, - ]$INFO[Container(15520).ListItem.EndTime,, • ]$INFO[Container(15520).ListItem.Genre]</value>
	</variable>
	<variable name="15530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-15530">
		<value condition="String.Contains(Container(15530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15530).ListItem.label] $INFO[Container(15530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Title) + String.Contains(Container(15530).ListItem.FolderPath, pvr://)">$INFO[Container(15530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Season) + !String.IsEmpty(Container(15530).ListItem.Episode) + !String.Contains(Container(15530).ListItem.TvShowTitle,Container(15530).ListItem.Title)">[UPPERCASE]S$INFO[Container(15530).ListItem.Season]E$INFO[Container(15530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Title)">$INFO[Container(15530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Label)">$INFO[Container(15530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-15530">
		<value condition="!String.IsEmpty(Container(15530).ListItem.TvShowTitle) + !String.IsEmpty(Container(15530).ListItem.Genre)">$INFO[Container(15530).ListItem.TvShowTitle,, • ]$INFO[Container(15530).ListItem.Year,, • ]$INFO[Container(15530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.TvShowTitle)">$INFO[Container(15530).ListItem.TvShowTitle,, • ]$INFO[Container(15530).ListItem.Premiered,, • ]$INFO[Container(15530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Year)">$INFO[Container(15530).ListItem.Year,, • ]$INFO[Container(15530).ListItem.Duration,,min. • ]$INFO[Container(15530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Artist) + !String.IsEmpty(Container(15530).ListItem.Album)">$INFO[Container(15530).ListItem.Artist,, • ]$INFO[Container(15530).ListItem.Album,, • ]$INFO[Container(15530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Property(StartTime))">$INFO[Container(15530).ListItem.Property(ChannelName),, • ]$INFO[Container(15530).ListItem.Property(StartTime),, - ]$INFO[Container(15530).ListItem.Property(EndTime),, • ]$INFO[Container(15530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.StartTime)">$INFO[Container(15530).ListItem.ChannelName,, • ]$INFO[Container(15530).ListItem.StartTime,, - ]$INFO[Container(15530).ListItem.EndTime,, • ]$INFO[Container(15530).ListItem.Genre]</value>
	</variable>
	<variable name="15540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-15540">
		<value condition="String.Contains(Container(15540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15540).ListItem.label] $INFO[Container(15540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Title) + String.Contains(Container(15540).ListItem.FolderPath, pvr://)">$INFO[Container(15540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Season) + !String.IsEmpty(Container(15540).ListItem.Episode) + !String.Contains(Container(15540).ListItem.TvShowTitle,Container(15540).ListItem.Title)">[UPPERCASE]S$INFO[Container(15540).ListItem.Season]E$INFO[Container(15540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Title)">$INFO[Container(15540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Label)">$INFO[Container(15540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-15540">
		<value condition="!String.IsEmpty(Container(15540).ListItem.TvShowTitle) + !String.IsEmpty(Container(15540).ListItem.Genre)">$INFO[Container(15540).ListItem.TvShowTitle,, • ]$INFO[Container(15540).ListItem.Year,, • ]$INFO[Container(15540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.TvShowTitle)">$INFO[Container(15540).ListItem.TvShowTitle,, • ]$INFO[Container(15540).ListItem.Premiered,, • ]$INFO[Container(15540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Year)">$INFO[Container(15540).ListItem.Year,, • ]$INFO[Container(15540).ListItem.Duration,,min. • ]$INFO[Container(15540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Artist) + !String.IsEmpty(Container(15540).ListItem.Album)">$INFO[Container(15540).ListItem.Artist,, • ]$INFO[Container(15540).ListItem.Album,, • ]$INFO[Container(15540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Property(StartTime))">$INFO[Container(15540).ListItem.Property(ChannelName),, • ]$INFO[Container(15540).ListItem.Property(StartTime),, - ]$INFO[Container(15540).ListItem.Property(EndTime),, • ]$INFO[Container(15540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.StartTime)">$INFO[Container(15540).ListItem.ChannelName,, • ]$INFO[Container(15540).ListItem.StartTime,, - ]$INFO[Container(15540).ListItem.EndTime,, • ]$INFO[Container(15540).ListItem.Genre]</value>
	</variable>
	<variable name="15550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-15550">
		<value condition="String.Contains(Container(15550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15550).ListItem.label] $INFO[Container(15550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Title) + String.Contains(Container(15550).ListItem.FolderPath, pvr://)">$INFO[Container(15550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Season) + !String.IsEmpty(Container(15550).ListItem.Episode) + !String.Contains(Container(15550).ListItem.TvShowTitle,Container(15550).ListItem.Title)">[UPPERCASE]S$INFO[Container(15550).ListItem.Season]E$INFO[Container(15550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Title)">$INFO[Container(15550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Label)">$INFO[Container(15550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-15550">
		<value condition="!String.IsEmpty(Container(15550).ListItem.TvShowTitle) + !String.IsEmpty(Container(15550).ListItem.Genre)">$INFO[Container(15550).ListItem.TvShowTitle,, • ]$INFO[Container(15550).ListItem.Year,, • ]$INFO[Container(15550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.TvShowTitle)">$INFO[Container(15550).ListItem.TvShowTitle,, • ]$INFO[Container(15550).ListItem.Premiered,, • ]$INFO[Container(15550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Year)">$INFO[Container(15550).ListItem.Year,, • ]$INFO[Container(15550).ListItem.Duration,,min. • ]$INFO[Container(15550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Artist) + !String.IsEmpty(Container(15550).ListItem.Album)">$INFO[Container(15550).ListItem.Artist,, • ]$INFO[Container(15550).ListItem.Album,, • ]$INFO[Container(15550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Property(StartTime))">$INFO[Container(15550).ListItem.Property(ChannelName),, • ]$INFO[Container(15550).ListItem.Property(StartTime),, - ]$INFO[Container(15550).ListItem.Property(EndTime),, • ]$INFO[Container(15550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.StartTime)">$INFO[Container(15550).ListItem.ChannelName,, • ]$INFO[Container(15550).ListItem.StartTime,, - ]$INFO[Container(15550).ListItem.EndTime,, • ]$INFO[Container(15550).ListItem.Genre]</value>
	</variable>
	<variable name="15560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-15560">
		<value condition="String.Contains(Container(15560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15560).ListItem.label] $INFO[Container(15560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Title) + String.Contains(Container(15560).ListItem.FolderPath, pvr://)">$INFO[Container(15560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Season) + !String.IsEmpty(Container(15560).ListItem.Episode) + !String.Contains(Container(15560).ListItem.TvShowTitle,Container(15560).ListItem.Title)">[UPPERCASE]S$INFO[Container(15560).ListItem.Season]E$INFO[Container(15560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Title)">$INFO[Container(15560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Label)">$INFO[Container(15560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-15560">
		<value condition="!String.IsEmpty(Container(15560).ListItem.TvShowTitle) + !String.IsEmpty(Container(15560).ListItem.Genre)">$INFO[Container(15560).ListItem.TvShowTitle,, • ]$INFO[Container(15560).ListItem.Year,, • ]$INFO[Container(15560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.TvShowTitle)">$INFO[Container(15560).ListItem.TvShowTitle,, • ]$INFO[Container(15560).ListItem.Premiered,, • ]$INFO[Container(15560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Year)">$INFO[Container(15560).ListItem.Year,, • ]$INFO[Container(15560).ListItem.Duration,,min. • ]$INFO[Container(15560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Artist) + !String.IsEmpty(Container(15560).ListItem.Album)">$INFO[Container(15560).ListItem.Artist,, • ]$INFO[Container(15560).ListItem.Album,, • ]$INFO[Container(15560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Property(StartTime))">$INFO[Container(15560).ListItem.Property(ChannelName),, • ]$INFO[Container(15560).ListItem.Property(StartTime),, - ]$INFO[Container(15560).ListItem.Property(EndTime),, • ]$INFO[Container(15560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.StartTime)">$INFO[Container(15560).ListItem.ChannelName,, • ]$INFO[Container(15560).ListItem.StartTime,, - ]$INFO[Container(15560).ListItem.EndTime,, • ]$INFO[Container(15560).ListItem.Genre]</value>
	</variable>
	<variable name="15570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-15570">
		<value condition="String.Contains(Container(15570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15570).ListItem.label] $INFO[Container(15570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Title) + String.Contains(Container(15570).ListItem.FolderPath, pvr://)">$INFO[Container(15570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Season) + !String.IsEmpty(Container(15570).ListItem.Episode) + !String.Contains(Container(15570).ListItem.TvShowTitle,Container(15570).ListItem.Title)">[UPPERCASE]S$INFO[Container(15570).ListItem.Season]E$INFO[Container(15570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Title)">$INFO[Container(15570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Label)">$INFO[Container(15570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-15570">
		<value condition="!String.IsEmpty(Container(15570).ListItem.TvShowTitle) + !String.IsEmpty(Container(15570).ListItem.Genre)">$INFO[Container(15570).ListItem.TvShowTitle,, • ]$INFO[Container(15570).ListItem.Year,, • ]$INFO[Container(15570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.TvShowTitle)">$INFO[Container(15570).ListItem.TvShowTitle,, • ]$INFO[Container(15570).ListItem.Premiered,, • ]$INFO[Container(15570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Year)">$INFO[Container(15570).ListItem.Year,, • ]$INFO[Container(15570).ListItem.Duration,,min. • ]$INFO[Container(15570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Artist) + !String.IsEmpty(Container(15570).ListItem.Album)">$INFO[Container(15570).ListItem.Artist,, • ]$INFO[Container(15570).ListItem.Album,, • ]$INFO[Container(15570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Property(StartTime))">$INFO[Container(15570).ListItem.Property(ChannelName),, • ]$INFO[Container(15570).ListItem.Property(StartTime),, - ]$INFO[Container(15570).ListItem.Property(EndTime),, • ]$INFO[Container(15570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.StartTime)">$INFO[Container(15570).ListItem.ChannelName,, • ]$INFO[Container(15570).ListItem.StartTime,, - ]$INFO[Container(15570).ListItem.EndTime,, • ]$INFO[Container(15570).ListItem.Genre]</value>
	</variable>
	<variable name="15580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-15580">
		<value condition="String.Contains(Container(15580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15580).ListItem.label] $INFO[Container(15580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Title) + String.Contains(Container(15580).ListItem.FolderPath, pvr://)">$INFO[Container(15580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Season) + !String.IsEmpty(Container(15580).ListItem.Episode) + !String.Contains(Container(15580).ListItem.TvShowTitle,Container(15580).ListItem.Title)">[UPPERCASE]S$INFO[Container(15580).ListItem.Season]E$INFO[Container(15580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Title)">$INFO[Container(15580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Label)">$INFO[Container(15580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-15580">
		<value condition="!String.IsEmpty(Container(15580).ListItem.TvShowTitle) + !String.IsEmpty(Container(15580).ListItem.Genre)">$INFO[Container(15580).ListItem.TvShowTitle,, • ]$INFO[Container(15580).ListItem.Year,, • ]$INFO[Container(15580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.TvShowTitle)">$INFO[Container(15580).ListItem.TvShowTitle,, • ]$INFO[Container(15580).ListItem.Premiered,, • ]$INFO[Container(15580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Year)">$INFO[Container(15580).ListItem.Year,, • ]$INFO[Container(15580).ListItem.Duration,,min. • ]$INFO[Container(15580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Artist) + !String.IsEmpty(Container(15580).ListItem.Album)">$INFO[Container(15580).ListItem.Artist,, • ]$INFO[Container(15580).ListItem.Album,, • ]$INFO[Container(15580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Property(StartTime))">$INFO[Container(15580).ListItem.Property(ChannelName),, • ]$INFO[Container(15580).ListItem.Property(StartTime),, - ]$INFO[Container(15580).ListItem.Property(EndTime),, • ]$INFO[Container(15580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.StartTime)">$INFO[Container(15580).ListItem.ChannelName,, • ]$INFO[Container(15580).ListItem.StartTime,, - ]$INFO[Container(15580).ListItem.EndTime,, • ]$INFO[Container(15580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-15">
		<value condition="Skin.String(widgetvalue-settings,7)" />
		<value condition="Skin.String(widgetvalue-settings,6)" />
		<value condition="Skin.String(widgetvalue-settings,5)" />
		<value condition="Skin.String(widgetvalue-settings,4)" />
		<value condition="Skin.String(widgetvalue-settings,3)" />
		<value condition="Skin.String(widgetvalue-settings,2)" />
		<value condition="Skin.String(widgetvalue-settings,1)" />
		<value>$LOCALIZE[130]</value>
	</variable>
</includes>
